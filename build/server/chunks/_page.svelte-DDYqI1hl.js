import { c as create_ssr_component, a as subscribe, o as onDestroy, d as escape, b as add_attribute, e as each, w as null_to_empty } from './ssr-CFMHIens.js';
import { g as goto } from './client-C3KLrhj1.js';
import { u as userProfile } from './userProfile-BAUZwBX2.js';
import { a as competitions, s as stats, e as error, i as isLoading } from './competitionManagementStore-CIPoqnzm.js';
import './exports-DKuYoYKl.js';
import './index-Ct3aIOD7.js';
import './false-CRHihH2U.js';
import './supabaseClient-D_8i9Ohq.js';
import '@supabase/supabase-js';

const css = {
  code: ".container.svelte-1xp7oiv.svelte-1xp7oiv{max-width:1200px;margin:0 auto;padding:1rem}.hero.svelte-1xp7oiv.svelte-1xp7oiv{text-align:center;margin-bottom:3rem}.hero.svelte-1xp7oiv h1.svelte-1xp7oiv{color:#ff3e00;text-transform:uppercase;font-size:4rem;font-weight:100;margin:0 0 0.25em;line-height:1.1;display:flex;align-items:center;justify-content:center;gap:1rem}.hero.svelte-1xp7oiv h1 .emoji.svelte-1xp7oiv{font-size:1em}.hero.svelte-1xp7oiv .subtitle.svelte-1xp7oiv{font-size:1.2rem;color:#333;font-weight:500}.stats-grid.svelte-1xp7oiv.svelte-1xp7oiv{display:grid;grid-template-columns:repeat(auto-fit, minmax(200px, 1fr));gap:1rem;margin-bottom:2rem}.stat-card.svelte-1xp7oiv.svelte-1xp7oiv{background:white;padding:1.5rem;border-radius:6px;box-shadow:0 2px 4px rgba(0, 0, 0, 0.1);border-left:4px solid #ff3e00}.stat-card.svelte-1xp7oiv .label.svelte-1xp7oiv{font-size:0.875rem;color:#666;text-transform:uppercase;margin-bottom:0.5rem}.stat-card.svelte-1xp7oiv .value.svelte-1xp7oiv{font-size:2rem;font-weight:bold;color:#333}.controls.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;gap:1rem;margin-bottom:2rem;flex-wrap:wrap}.search-input.svelte-1xp7oiv.svelte-1xp7oiv{flex:1;min-width:200px;padding:0.75rem;border:1px solid #ddd;border-radius:6px;font-size:1rem}.filter-select.svelte-1xp7oiv.svelte-1xp7oiv{padding:0.75rem;border:1px solid #ddd;border-radius:6px;font-size:1rem;background:white}.btn.svelte-1xp7oiv.svelte-1xp7oiv{padding:0.75rem 1.5rem;border:none;border-radius:6px;font-size:1rem;cursor:pointer;transition:all 0.3s ease}.btn-primary.svelte-1xp7oiv.svelte-1xp7oiv{background:#ff3e00;color:white}.btn-primary.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#e63600}.btn-secondary.svelte-1xp7oiv.svelte-1xp7oiv{background:#2563eb;color:white}.btn-secondary.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#1d4ed8}.competitions-table.svelte-1xp7oiv.svelte-1xp7oiv{background:white;border-radius:6px;overflow:hidden;box-shadow:0 2px 4px rgba(0, 0, 0, 0.1)}table.svelte-1xp7oiv.svelte-1xp7oiv{width:100%;border-collapse:collapse}th.svelte-1xp7oiv.svelte-1xp7oiv{background:#f5f5f5;padding:1rem;text-align:left;font-weight:600;color:#333;border-bottom:2px solid #ddd}td.svelte-1xp7oiv.svelte-1xp7oiv{padding:1rem;border-bottom:1px solid #eee}tr.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#f9f9f9}.badge.svelte-1xp7oiv.svelte-1xp7oiv{display:inline-block;padding:0.25rem 0.75rem;border-radius:12px;font-size:0.875rem;font-weight:500}.badge-active.svelte-1xp7oiv.svelte-1xp7oiv{background:#d4f4dd;color:#059669}.badge-inactive.svelte-1xp7oiv.svelte-1xp7oiv{background:#fef3c7;color:#d97706}.badge-closed.svelte-1xp7oiv.svelte-1xp7oiv{background:#fee2e2;color:#dc2626}.badge-warning.svelte-1xp7oiv.svelte-1xp7oiv{background:#fed7aa;color:#ea580c}.actions.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;gap:0.5rem}.btn-small.svelte-1xp7oiv.svelte-1xp7oiv{padding:0.5rem 1rem;font-size:0.875rem}.btn-edit.svelte-1xp7oiv.svelte-1xp7oiv{background:#2563eb;color:white}.btn-toggle.svelte-1xp7oiv.svelte-1xp7oiv{background:#059669;color:white}.btn-toggle.inactive.svelte-1xp7oiv.svelte-1xp7oiv{background:#dc2626}.btn-entries.svelte-1xp7oiv.svelte-1xp7oiv{background:#8b5cf6;color:white}.btn-results.svelte-1xp7oiv.svelte-1xp7oiv{background:#f59e0b;color:white}.btn-judges.svelte-1xp7oiv.svelte-1xp7oiv{background:#059669;color:white}.btn-dashboard.svelte-1xp7oiv.svelte-1xp7oiv{background:#7c3aed;color:white}.btn-delete.svelte-1xp7oiv.svelte-1xp7oiv{background:#dc2626;color:white}.empty-state.svelte-1xp7oiv.svelte-1xp7oiv{text-align:center;padding:3rem;color:#666}.empty-state.svelte-1xp7oiv h3.svelte-1xp7oiv{font-size:1.5rem;margin-bottom:1rem}.loading.svelte-1xp7oiv.svelte-1xp7oiv{text-align:center;padding:3rem}.spinner.svelte-1xp7oiv.svelte-1xp7oiv{display:inline-block;width:40px;height:40px;border:4px solid #f3f3f3;border-top:4px solid #ff3e00;border-radius:50%;animation:svelte-1xp7oiv-spin 1s linear infinite}@keyframes svelte-1xp7oiv-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.error.svelte-1xp7oiv.svelte-1xp7oiv{background:#fee2e2;color:#dc2626;padding:1rem;border-radius:6px;margin-bottom:1rem}.competition-cards.svelte-1xp7oiv.svelte-1xp7oiv{display:none}.competition-card.svelte-1xp7oiv.svelte-1xp7oiv{background:white;border-radius:6px;padding:1.5rem;margin-bottom:1rem;box-shadow:0 2px 4px rgba(0, 0, 0, 0.1);border-left:4px solid #ff3e00}.competition-header.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:1rem;flex-wrap:wrap;gap:0.5rem}.competition-name.svelte-1xp7oiv.svelte-1xp7oiv{font-size:1.25rem;font-weight:600;color:#333;margin:0;flex:1;min-width:0}.competition-status.svelte-1xp7oiv.svelte-1xp7oiv{flex-shrink:0}.status-badge.svelte-1xp7oiv.svelte-1xp7oiv{display:inline-block;padding:0.25rem 0.75rem;border-radius:12px;font-size:0.875rem;font-weight:500}.status-open.svelte-1xp7oiv.svelte-1xp7oiv{background:#dbeafe;color:#1d4ed8}.status-judging.svelte-1xp7oiv.svelte-1xp7oiv{background:#fef3c7;color:#92400e}.status-completed.svelte-1xp7oiv.svelte-1xp7oiv{background:#dcfce7;color:#166534}.status-closed.svelte-1xp7oiv.svelte-1xp7oiv{background:#f3f4f6;color:#6b7280}.competition-details.svelte-1xp7oiv.svelte-1xp7oiv{display:grid;grid-template-columns:1fr 1fr;gap:1rem;margin-bottom:1.5rem;padding:1rem;background:#f9f9f9;border-radius:4px}.detail-item.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;flex-direction:column}.detail-label.svelte-1xp7oiv.svelte-1xp7oiv{font-size:0.875rem;color:#666;margin-bottom:0.25rem}.detail-value.svelte-1xp7oiv.svelte-1xp7oiv{font-size:1rem;font-weight:600;color:#333}.competition-actions.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;flex-direction:column;gap:0.75rem}.action-btn.svelte-1xp7oiv.svelte-1xp7oiv{width:100%;padding:0.875rem 1rem;border:none;border-radius:6px;font-size:1rem;font-weight:500;cursor:pointer;transition:all 0.3s ease;text-decoration:none;display:flex;align-items:center;justify-content:center;gap:0.5rem;text-align:center}.action-btn.svelte-1xp7oiv.svelte-1xp7oiv:hover{transform:translateY(-1px);box-shadow:0 4px 8px rgba(0, 0, 0, 0.15)}.btn-view.svelte-1xp7oiv.svelte-1xp7oiv{background:#2563eb;color:white}.btn-view.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#1d4ed8}.btn-edit-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#059669;color:white}.btn-edit-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#047857}.btn-results-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#ff3e00;color:white}.btn-results-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#e63600}.btn-entries-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#7c3aed;color:white}.btn-entries-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#6d28d9}.btn-judges-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#059669;color:white}.btn-judges-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#047857}.btn-dashboard-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#7c3aed;color:white}.btn-dashboard-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#6d28d9}.btn-toggle-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#059669;color:white}.btn-toggle-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#047857}.btn-toggle-mobile.inactive.svelte-1xp7oiv.svelte-1xp7oiv{background:#dc2626}.btn-toggle-mobile.inactive.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#b91c1c}.btn-delete-mobile.svelte-1xp7oiv.svelte-1xp7oiv{background:#dc2626;color:white}.btn-delete-mobile.svelte-1xp7oiv.svelte-1xp7oiv:hover{background:#b91c1c}.entry-count.svelte-1xp7oiv.svelte-1xp7oiv{background:rgba(255, 62, 0, 0.1);color:#ff3e00;padding:0.25rem 0.5rem;border-radius:12px;font-size:0.75rem;font-weight:600;margin-left:0.5rem}.deadline-info.svelte-1xp7oiv.svelte-1xp7oiv{font-size:0.875rem;color:#666;margin-top:0.5rem}.deadline-urgent.svelte-1xp7oiv.svelte-1xp7oiv{color:#dc2626;font-weight:600}.deadline-soon.svelte-1xp7oiv.svelte-1xp7oiv{color:#f59e0b;font-weight:500}.competition-description.svelte-1xp7oiv.svelte-1xp7oiv{margin-top:1rem;padding-top:1rem;border-top:1px solid #e5e7eb;color:#666;font-size:0.9rem;line-height:1.4}.modal.svelte-1xp7oiv.svelte-1xp7oiv{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0, 0, 0, 0.5);display:flex;align-items:center;justify-content:center;z-index:1000}.modal-content.svelte-1xp7oiv.svelte-1xp7oiv{background:white;padding:2rem;border-radius:6px;max-width:500px;width:90%}.modal-content.svelte-1xp7oiv h3.svelte-1xp7oiv{margin-top:0;color:#dc2626}.modal-actions.svelte-1xp7oiv.svelte-1xp7oiv{display:flex;gap:1rem;justify-content:flex-end;margin-top:1.5rem}@media(max-width: 768px){.hero.svelte-1xp7oiv h1.svelte-1xp7oiv{font-size:2.5rem}.hero.svelte-1xp7oiv .subtitle.svelte-1xp7oiv{font-size:1rem}.stats-grid.svelte-1xp7oiv.svelte-1xp7oiv{grid-template-columns:repeat(2, 1fr)}.competitions-table.svelte-1xp7oiv.svelte-1xp7oiv{display:none}.competition-cards.svelte-1xp7oiv.svelte-1xp7oiv{display:block}.controls.svelte-1xp7oiv.svelte-1xp7oiv{flex-direction:column;align-items:stretch}.search-input.svelte-1xp7oiv.svelte-1xp7oiv,.filter-select.svelte-1xp7oiv.svelte-1xp7oiv{width:100%}}@media(max-width: 480px){.hero.svelte-1xp7oiv h1.svelte-1xp7oiv{font-size:2rem}.stats-grid.svelte-1xp7oiv.svelte-1xp7oiv{grid-template-columns:1fr}.container.svelte-1xp7oiv.svelte-1xp7oiv{padding:0.5rem}.competition-details.svelte-1xp7oiv.svelte-1xp7oiv{grid-template-columns:1fr}}@media(min-width: 769px){.competition-cards.svelte-1xp7oiv.svelte-1xp7oiv{display:none}.competitions-table.svelte-1xp7oiv.svelte-1xp7oiv{display:block}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<!-- src/routes/officers/manage-competitions/+page.svelte -->\\n<script>\\n  import { onMount, onDestroy } from 'svelte';\\n  import { goto } from '$app/navigation';\\n  import { userProfile } from '$lib/stores/userProfile';\\n  import { competitionManagementStore, competitions, isLoading, error, stats } from '$lib/stores/competitionManagementStore';\\n  \\n  // Check officer status\\n  $: if ($userProfile && !$userProfile.is_officer) {\\n    goto('/');\\n  }\\n\\n  let searchQuery = '';\\n  let filterStatus = 'all'; // all, active, upcoming, past\\n  let showDeleteConfirm = false;\\n  let competitionToDelete = null;\\n\\n  // Initialize store\\n  onMount(() => {\\n    console.log('🎯 Manage Competitions page mounted');\\n    console.log('📊 Current user profile:', $userProfile);\\n    console.log('🔐 Is officer?:', $userProfile?.is_officer);\\n    \\n    competitionManagementStore.initialize();\\n    console.log('✅ Competition store initialized');\\n    \\n    const cleanup = setupEventHandlers();\\n    \\n    // Return cleanup function\\n    return () => {\\n      cleanup();\\n    };\\n  });\\n\\n  // Removed tab switching reload - causes issues with Supabase tab switching\\n  function setupEventHandlers() {\\n    // Tab visibility handling removed for better Supabase compatibility\\n    return () => {\\n      // No cleanup needed now\\n    };\\n  }\\n\\n  onDestroy(() => {\\n    // Cleanup handled by setupEventHandlers return\\n  });\\n\\n  // Debug reactive statements\\n  $: {\\n    console.log('🔄 Reactive update:');\\n    console.log('  - isLoading:', $isLoading);\\n    console.log('  - error:', $error);\\n    console.log('  - competitions:', $competitions);\\n    console.log('  - stats:', $stats);\\n  }\\n\\n  // Filtered competitions based on search and status\\n  $: filteredCompetitions = (() => {\\n    console.log('🔍 Computing filtered competitions...');\\n    let comps = [];\\n    \\n    switch (filterStatus) {\\n      case 'active':\\n        comps = ($competitions || []).filter(c => c.is_active);\\n        break;\\n      case 'upcoming':\\n        comps = ($competitions || []).filter(c => {\\n          const now = new Date();\\n          const deadline = new Date(c.entry_deadline);\\n          return !c.is_active && deadline > now;\\n        });\\n        break;\\n      case 'past':\\n        comps = ($competitions || []).filter(c => {\\n          const now = new Date();\\n          const deadline = new Date(c.entry_deadline);\\n          return deadline <= now;\\n        });\\n        break;\\n      default:\\n        comps = $competitions || [];\\n    }\\n\\n    console.log('📋 Competitions before filter:', comps);\\n\\n    if (searchQuery.trim()) {\\n      const query = searchQuery.toLowerCase();\\n      comps = comps.filter(c => \\n        c.name.toLowerCase().includes(query) ||\\n        c.description?.toLowerCase().includes(query)\\n      );\\n    }\\n\\n    console.log('📋 Competitions after filter:', comps);\\n    return comps;\\n  })();\\n\\n  // Format date for display\\n  function formatDate(dateString) {\\n    if (!dateString) return 'Invalid Date';\\n    \\n    try {\\n      // Handle space-separated datetime format (e.g., \\"2025-08-29 03:43:21.894974\\")\\n      let isoString = dateString;\\n      if (dateString.includes(' ') && !dateString.includes('T')) {\\n        // Replace space with 'T' and add timezone if missing\\n        isoString = dateString.replace(' ', 'T');\\n        if (!isoString.includes('+') && !isoString.includes('Z')) {\\n          // Assume local timezone if no timezone specified\\n          isoString += 'Z';\\n        }\\n      }\\n\\n      const date = new Date(isoString);\\n      // Check if date is valid\\n      if (isNaN(date.getTime())) {\\n        console.warn('Invalid date after parsing:', dateString, '->', isoString);\\n        return 'Invalid Date';\\n      }\\n\\n      return date.toLocaleDateString('en-US', {\\n        month: 'short',\\n        day: 'numeric',\\n        year: 'numeric'\\n      });\\n    } catch (error) {\\n      console.warn('Error formatting date:', dateString, error);\\n      return 'Invalid Date';\\n    }\\n  }\\n\\n  // Format date for form input\\n  function formatDateForInput(dateString) {\\n    const date = new Date(dateString);\\n    return date.toISOString().split('T')[0];\\n  }\\n\\n  // Get days until deadline\\n  function getDaysUntilDeadline(competition) {\\n    if (!competition.entry_deadline) return 0;\\n    const now = new Date();\\n    const deadline = new Date(competition.entry_deadline);\\n    const diffTime = deadline - now;\\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\\n    return diffDays > 0 ? diffDays : 0;\\n  }\\n\\n  // Format deadline with time\\n  function formatDeadline(competition) {\\n    if (!competition.entry_deadline) return 'No deadline set';\\n    const deadline = new Date(competition.entry_deadline);\\n    return deadline.toLocaleDateString('en-US', {\\n      weekday: 'short',\\n      month: 'short',\\n      day: 'numeric',\\n      year: 'numeric',\\n      hour: '2-digit',\\n      minute: '2-digit'\\n    });\\n  }\\n\\n  // Get status badge\\n  function getStatusBadge(competition) {\\n    const now = new Date();\\n    const deadline = new Date(competition.entry_deadline);\\n    \\n    if (!competition.active) {\\n      return { text: 'Inactive', class: 'badge-inactive' };\\n    } else if (deadline < now) {\\n      return { text: 'Closed', class: 'badge-closed' };\\n    } else if (deadline - now < 7 * 24 * 60 * 60 * 1000) {\\n      return { text: 'Closing Soon', class: 'badge-warning' };\\n    } else {\\n      return { text: 'Active', class: 'badge-active' };\\n    }\\n  }\\n\\n  // Get status for mobile cards\\n  function getMobileStatus(competition) {\\n    if (!competition.active) return 'closed';\\n    const now = new Date();\\n    const deadline = new Date(competition.entry_deadline);\\n    if (deadline < now) return 'closed';\\n    return 'open';\\n  }\\n\\n  // Toggle competition status\\n  async function toggleStatus(competition) {\\n    try {\\n      const { updateCompetition } = await import('$lib/stores/competitionManagementStore');\\n      await updateCompetition(competition.id, { active: !competition.active });\\n    } catch (err) {\\n      alert(\`Error: \${err.message}\`);\\n    }\\n  }\\n\\n  // Delete competition\\n  async function deleteCompetition() {\\n    if (!competitionToDelete) return;\\n    \\n    try {\\n      const { deleteCompetition: deleteComp } = await import('$lib/stores/competitionManagementStore');\\n      await deleteComp(competitionToDelete.id);\\n      showDeleteConfirm = false;\\n      competitionToDelete = null;\\n    } catch (err) {\\n      alert(\`Error: \${err.message}\`);\\n    }\\n  }\\n\\n  // Navigate to create page\\n  function navigateToCreate() {\\n    goto('/officers/manage-competitions/create');\\n  }\\n\\n  // Navigate to edit page\\n  function navigateToEdit(competitionId) {\\n    goto(\`/officers/manage-competitions/edit/\${competitionId}\`);\\n  }\\n\\n  // Navigate to entries page\\n  function navigateToEntries(competitionId) {\\n    goto(\`/officers/manage-competitions/entries/\${competitionId}\`);\\n  }\\n\\n  // Navigate to results page\\n  function navigateToResults(competitionId) {\\n    goto(\`/officers/manage-competitions/results/\${competitionId}\`);\\n  }\\n\\n  function navigateToJudges(competitionId) {\\n    goto(\`/officers/manage-competitions/judges/\${competitionId}\`);\\n  }\\n\\n  function navigateToJudgingDashboard(competitionId) {\\n    goto(\`/officers/manage-competitions/judging-dashboard/\${competitionId}\`);\\n  }\\n\\n  // Force refresh\\n  async function forceRefresh() {\\n    const { loadCompetitions } = await import('$lib/stores/competitionManagementStore');\\n    await loadCompetitions(true);\\n  }\\n<\/script>\\n\\n<style>\\n  .container {\\n    max-width: 1200px;\\n    margin: 0 auto;\\n    padding: 1rem;\\n  }\\n\\n  .hero {\\n    text-align: center;\\n    margin-bottom: 3rem;\\n  }\\n\\n  .hero h1 {\\n    color: #ff3e00;\\n    text-transform: uppercase;\\n    font-size: 4rem;\\n    font-weight: 100;\\n    margin: 0 0 0.25em;\\n    line-height: 1.1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 1rem;\\n  }\\n\\n  .hero h1 .emoji {\\n    font-size: 1em;\\n  }\\n\\n  .hero .subtitle {\\n    font-size: 1.2rem;\\n    color: #333;\\n    font-weight: 500;\\n  }\\n\\n  .stats-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n    gap: 1rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .stat-card {\\n    background: white;\\n    padding: 1.5rem;\\n    border-radius: 6px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    border-left: 4px solid #ff3e00;\\n  }\\n\\n  .stat-card .label {\\n    font-size: 0.875rem;\\n    color: #666;\\n    text-transform: uppercase;\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  .stat-card .value {\\n    font-size: 2rem;\\n    font-weight: bold;\\n    color: #333;\\n  }\\n\\n  .controls {\\n    display: flex;\\n    gap: 1rem;\\n    margin-bottom: 2rem;\\n    flex-wrap: wrap;\\n  }\\n\\n  .search-input {\\n    flex: 1;\\n    min-width: 200px;\\n    padding: 0.75rem;\\n    border: 1px solid #ddd;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n  }\\n\\n  .filter-select {\\n    padding: 0.75rem;\\n    border: 1px solid #ddd;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n    background: white;\\n  }\\n\\n  .btn {\\n    padding: 0.75rem 1.5rem;\\n    border: none;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n    cursor: pointer;\\n    transition: all 0.3s ease;\\n  }\\n\\n  .btn-primary {\\n    background: #ff3e00;\\n    color: white;\\n  }\\n\\n  .btn-primary:hover {\\n    background: #e63600;\\n  }\\n\\n  .btn-secondary {\\n    background: #2563eb;\\n    color: white;\\n  }\\n\\n  .btn-secondary:hover {\\n    background: #1d4ed8;\\n  }\\n\\n  .competitions-table {\\n    background: white;\\n    border-radius: 6px;\\n    overflow: hidden;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n\\n  th {\\n    background: #f5f5f5;\\n    padding: 1rem;\\n    text-align: left;\\n    font-weight: 600;\\n    color: #333;\\n    border-bottom: 2px solid #ddd;\\n  }\\n\\n  td {\\n    padding: 1rem;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  tr:hover {\\n    background: #f9f9f9;\\n  }\\n\\n  .badge {\\n    display: inline-block;\\n    padding: 0.25rem 0.75rem;\\n    border-radius: 12px;\\n    font-size: 0.875rem;\\n    font-weight: 500;\\n  }\\n\\n  .badge-active {\\n    background: #d4f4dd;\\n    color: #059669;\\n  }\\n\\n  .badge-inactive {\\n    background: #fef3c7;\\n    color: #d97706;\\n  }\\n\\n  .badge-closed {\\n    background: #fee2e2;\\n    color: #dc2626;\\n  }\\n\\n  .badge-warning {\\n    background: #fed7aa;\\n    color: #ea580c;\\n  }\\n\\n  .actions {\\n    display: flex;\\n    gap: 0.5rem;\\n  }\\n\\n  .btn-small {\\n    padding: 0.5rem 1rem;\\n    font-size: 0.875rem;\\n  }\\n\\n  .btn-edit {\\n    background: #2563eb;\\n    color: white;\\n  }\\n\\n  .btn-toggle {\\n    background: #059669;\\n    color: white;\\n  }\\n\\n  .btn-toggle.inactive {\\n    background: #dc2626;\\n  }\\n\\n  .btn-entries {\\n    background: #8b5cf6;\\n    color: white;\\n  }\\n\\n  .btn-results {\\n    background: #f59e0b;\\n    color: white;\\n  }\\n\\n  .btn-judges {\\n    background: #059669;\\n    color: white;\\n  }\\n\\n  .btn-dashboard {\\n    background: #7c3aed;\\n    color: white;\\n  }\\n\\n  .btn-delete {\\n    background: #dc2626;\\n    color: white;\\n  }\\n\\n  .empty-state {\\n    text-align: center;\\n    padding: 3rem;\\n    color: #666;\\n  }\\n\\n  .empty-state h3 {\\n    font-size: 1.5rem;\\n    margin-bottom: 1rem;\\n  }\\n\\n  .loading {\\n    text-align: center;\\n    padding: 3rem;\\n  }\\n\\n  .spinner {\\n    display: inline-block;\\n    width: 40px;\\n    height: 40px;\\n    border: 4px solid #f3f3f3;\\n    border-top: 4px solid #ff3e00;\\n    border-radius: 50%;\\n    animation: spin 1s linear infinite;\\n  }\\n\\n  @keyframes spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n  }\\n\\n  .error {\\n    background: #fee2e2;\\n    color: #dc2626;\\n    padding: 1rem;\\n    border-radius: 6px;\\n    margin-bottom: 1rem;\\n  }\\n\\n  /* Mobile Competition Cards - Vertical Layout */\\n  .competition-cards {\\n    display: none;\\n  }\\n\\n  .competition-card {\\n    background: white;\\n    border-radius: 6px;\\n    padding: 1.5rem;\\n    margin-bottom: 1rem;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    border-left: 4px solid #ff3e00;\\n  }\\n\\n  .competition-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: flex-start;\\n    margin-bottom: 1rem;\\n    flex-wrap: wrap;\\n    gap: 0.5rem;\\n  }\\n\\n  .competition-name {\\n    font-size: 1.25rem;\\n    font-weight: 600;\\n    color: #333;\\n    margin: 0;\\n    flex: 1;\\n    min-width: 0;\\n  }\\n\\n  .competition-status {\\n    flex-shrink: 0;\\n  }\\n\\n  .status-badge {\\n    display: inline-block;\\n    padding: 0.25rem 0.75rem;\\n    border-radius: 12px;\\n    font-size: 0.875rem;\\n    font-weight: 500;\\n  }\\n\\n  .status-open {\\n    background: #dbeafe;\\n    color: #1d4ed8;\\n  }\\n\\n  .status-judging {\\n    background: #fef3c7;\\n    color: #92400e;\\n  }\\n\\n  .status-completed {\\n    background: #dcfce7;\\n    color: #166534;\\n  }\\n\\n  .status-closed {\\n    background: #f3f4f6;\\n    color: #6b7280;\\n  }\\n\\n  /* Competition details grid */\\n  .competition-details {\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    gap: 1rem;\\n    margin-bottom: 1.5rem;\\n    padding: 1rem;\\n    background: #f9f9f9;\\n    border-radius: 4px;\\n  }\\n\\n  .detail-item {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .detail-label {\\n    font-size: 0.875rem;\\n    color: #666;\\n    margin-bottom: 0.25rem;\\n  }\\n\\n  .detail-value {\\n    font-size: 1rem;\\n    font-weight: 600;\\n    color: #333;\\n  }\\n\\n  /* Action buttons - vertical stack */\\n  .competition-actions {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.75rem;\\n  }\\n\\n  .action-btn {\\n    width: 100%;\\n    padding: 0.875rem 1rem;\\n    border: none;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: all 0.3s ease;\\n    text-decoration: none;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 0.5rem;\\n    text-align: center;\\n  }\\n\\n  .action-btn:hover {\\n    transform: translateY(-1px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\\n  }\\n\\n  /* Button color variants */\\n  .btn-view {\\n    background: #2563eb;\\n    color: white;\\n  }\\n\\n  .btn-view:hover {\\n    background: #1d4ed8;\\n  }\\n\\n  .btn-edit-mobile {\\n    background: #059669;\\n    color: white;\\n  }\\n\\n  .btn-edit-mobile:hover {\\n    background: #047857;\\n  }\\n\\n  .btn-results-mobile {\\n    background: #ff3e00;\\n    color: white;\\n  }\\n\\n  .btn-results-mobile:hover {\\n    background: #e63600;\\n  }\\n\\n  .btn-entries-mobile {\\n    background: #7c3aed;\\n    color: white;\\n  }\\n\\n  .btn-entries-mobile:hover {\\n    background: #6d28d9;\\n  }\\n\\n  .btn-judges-mobile {\\n    background: #059669;\\n    color: white;\\n  }\\n\\n  .btn-judges-mobile:hover {\\n    background: #047857;\\n  }\\n\\n  .btn-dashboard-mobile {\\n    background: #7c3aed;\\n    color: white;\\n  }\\n\\n  .btn-dashboard-mobile:hover {\\n    background: #6d28d9;\\n  }\\n\\n  .btn-toggle-mobile {\\n    background: #059669;\\n    color: white;\\n  }\\n\\n  .btn-toggle-mobile:hover {\\n    background: #047857;\\n  }\\n\\n  .btn-toggle-mobile.inactive {\\n    background: #dc2626;\\n  }\\n\\n  .btn-toggle-mobile.inactive:hover {\\n    background: #b91c1c;\\n  }\\n\\n  .btn-delete-mobile {\\n    background: #dc2626;\\n    color: white;\\n  }\\n\\n  .btn-delete-mobile:hover {\\n    background: #b91c1c;\\n  }\\n\\n  /* Entry count badge */\\n  .entry-count {\\n    background: rgba(255, 62, 0, 0.1);\\n    color: #ff3e00;\\n    padding: 0.25rem 0.5rem;\\n    border-radius: 12px;\\n    font-size: 0.75rem;\\n    font-weight: 600;\\n    margin-left: 0.5rem;\\n  }\\n\\n  /* Deadline formatting */\\n  .deadline-info {\\n    font-size: 0.875rem;\\n    color: #666;\\n    margin-top: 0.5rem;\\n  }\\n\\n  .deadline-urgent {\\n    color: #dc2626;\\n    font-weight: 600;\\n  }\\n\\n  .deadline-soon {\\n    color: #f59e0b;\\n    font-weight: 500;\\n  }\\n\\n  /* Competition description */\\n  .competition-description {\\n    margin-top: 1rem;\\n    padding-top: 1rem;\\n    border-top: 1px solid #e5e7eb;\\n    color: #666;\\n    font-size: 0.9rem;\\n    line-height: 1.4;\\n  }\\n\\n  /* Modal styles */\\n  .modal {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: rgba(0, 0, 0, 0.5);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1000;\\n  }\\n\\n  .modal-content {\\n    background: white;\\n    padding: 2rem;\\n    border-radius: 6px;\\n    max-width: 500px;\\n    width: 90%;\\n  }\\n\\n  .modal-content h3 {\\n    margin-top: 0;\\n    color: #dc2626;\\n  }\\n\\n  .modal-actions {\\n    display: flex;\\n    gap: 1rem;\\n    justify-content: flex-end;\\n    margin-top: 1.5rem;\\n  }\\n\\n  /* Mobile styles */\\n  @media (max-width: 768px) {\\n    .hero h1 {\\n      font-size: 2.5rem;\\n    }\\n\\n    .hero .subtitle {\\n      font-size: 1rem;\\n    }\\n\\n    .stats-grid {\\n      grid-template-columns: repeat(2, 1fr);\\n    }\\n\\n    .competitions-table {\\n      display: none;\\n    }\\n\\n    .competition-cards {\\n      display: block;\\n    }\\n\\n    .controls {\\n      flex-direction: column;\\n      align-items: stretch;\\n    }\\n\\n    .search-input, .filter-select {\\n      width: 100%;\\n    }\\n  }\\n\\n  @media (max-width: 480px) {\\n    .hero h1 {\\n      font-size: 2rem;\\n    }\\n\\n    .stats-grid {\\n      grid-template-columns: 1fr;\\n    }\\n\\n    .container {\\n      padding: 0.5rem;\\n    }\\n\\n    .competition-details {\\n      grid-template-columns: 1fr;\\n    }\\n  }\\n\\n  /* Ensure cards are hidden on desktop */\\n  @media (min-width: 769px) {\\n    .competition-cards {\\n      display: none;\\n    }\\n    \\n    .competitions-table {\\n      display: block;\\n    }\\n  }\\n</style>\\n\\n<div class=\\"container\\">\\n  <!-- Hero Section -->\\n  <div class=\\"hero\\">\\n    <h1><span class=\\"emoji\\">🏆</span> Manage Competitions</h1>\\n    <p class=\\"subtitle\\">Create and manage brewing competitions</p>\\n  </div>\\n\\n  <!-- Statistics -->\\n  {#if !$isLoading}\\n    <div class=\\"stats-grid\\">\\n      <div class=\\"stat-card\\">\\n        <div class=\\"label\\">Total Competitions</div>\\n        <div class=\\"value\\">{$stats.total}</div>\\n      </div>\\n      <div class=\\"stat-card\\">\\n        <div class=\\"label\\">Active</div>\\n        <div class=\\"value\\">{$stats.active}</div>\\n      </div>\\n      <div class=\\"stat-card\\">\\n        <div class=\\"label\\">Total Entries</div>\\n        <div class=\\"value\\">{$stats.totalEntries}</div>\\n      </div>\\n      <div class=\\"stat-card\\">\\n        <div class=\\"label\\">Avg Entries</div>\\n        <div class=\\"value\\">{$stats.avgEntries}</div>\\n      </div>\\n    </div>\\n  {/if}\\n\\n  <!-- Controls -->\\n  <div class=\\"controls\\">\\n    <input\\n      type=\\"text\\"\\n      class=\\"search-input\\"\\n      placeholder=\\"Search competitions...\\"\\n      bind:value={searchQuery}\\n    />\\n    <select class=\\"filter-select\\" bind:value={filterStatus}>\\n      <option value=\\"all\\">All Competitions</option>\\n      <option value=\\"active\\">Active Only</option>\\n      <option value=\\"upcoming\\">Upcoming</option>\\n      <option value=\\"past\\">Past/Closed</option>\\n    </select>\\n    <button class=\\"btn btn-secondary\\" on:click={forceRefresh}>\\n      🔄 Refresh\\n    </button>\\n    <button class=\\"btn btn-primary\\" on:click={navigateToCreate}>\\n      ➕ Create Competition\\n    </button>\\n  </div>\\n\\n  <!-- Error State -->\\n  {#if $error}\\n    <div class=\\"error\\">\\n      ⚠️ {$error}\\n    </div>\\n  {/if}\\n\\n  <!-- Loading State -->\\n  {#if $isLoading}\\n    <div class=\\"loading\\">\\n      <div class=\\"spinner\\"></div>\\n      <p>Loading competitions...</p>\\n    </div>\\n  {:else if filteredCompetitions.length === 0}\\n    <!-- Empty State -->\\n    <div class=\\"empty-state\\">\\n      <h3>No competitions found</h3>\\n      <p>\\n        {#if searchQuery || filterStatus !== 'all'}\\n          Try adjusting your search or filters\\n        {:else}\\n          Create your first competition to get started\\n        {/if}\\n      </p>\\n      {#if filterStatus === 'all' && !searchQuery}\\n        <button class=\\"btn btn-primary\\" on:click={navigateToCreate}>\\n          Create First Competition\\n        </button>\\n      {/if}\\n    </div>\\n  {:else}\\n    <!-- Desktop Table View -->\\n    <div class=\\"competitions-table\\">\\n      <table>\\n        <thead>\\n          <tr>\\n            <th>Competition</th>\\n            <th>Entry Deadline</th>\\n            <th>Status</th>\\n            <th>Entries</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          {#each filteredCompetitions as competition}\\n            <tr>\\n              <td>\\n                <strong>{competition.name}</strong>\\n                {#if competition.description}\\n                  <br />\\n                  <small>{competition.description}</small>\\n                {/if}\\n              </td>\\n              <td>{formatDeadline(competition)}</td>\\n              <td>\\n                <span class=\\"badge {getStatusBadge(competition).class}\\">\\n                  {getStatusBadge(competition).text}\\n                </span>\\n              </td>\\n              <td>{competition.entry_count || 0}</td>\\n              <td>\\n                <div class=\\"actions\\">\\n                  <button \\n                    class=\\"btn btn-small btn-edit\\"\\n                    on:click={() => navigateToEdit(competition.id)}\\n                  >\\n                    ✏️ Edit\\n                  </button>\\n                  <button \\n                    class=\\"btn btn-small btn-entries\\"\\n                    on:click={() => navigateToEntries(competition.id)}\\n                  >\\n                    📋 Entries\\n                  </button>\\n                  <button \\n                    class=\\"btn btn-small btn-judges\\"\\n                    on:click={() => navigateToJudges(competition.id)}\\n                  >\\n                    👩‍⚖️ Judges\\n                  </button>\\n                  <button \\n                    class=\\"btn btn-small btn-dashboard\\"\\n                    on:click={() => navigateToJudgingDashboard(competition.id)}\\n                  >\\n                    📊 Dashboard\\n                  </button>\\n                  <button \\n                    class=\\"btn btn-small btn-results\\"\\n                    on:click={() => navigateToResults(competition.id)}\\n                  >\\n                    🏆 Enter Results\\n                  </button>\\n                  <button \\n                    class=\\"btn btn-small btn-toggle {competition.active ? 'inactive' : ''}\\"\\n                    on:click={() => toggleStatus(competition)}\\n                  >\\n                    {competition.active ? '⏸️ Deactivate' : '▶️ Activate'}\\n                  </button>\\n                  {#if competition.entry_count === 0}\\n                    <button \\n                      class=\\"btn btn-small btn-delete\\"\\n                      on:click={() => {\\n                        competitionToDelete = competition;\\n                        showDeleteConfirm = true;\\n                      }}\\n                    >\\n                      🗑️ Delete\\n                    </button>\\n                  {/if}\\n                </div>\\n              </td>\\n            </tr>\\n          {/each}\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <!-- Mobile Card View -->\\n    <div class=\\"competition-cards\\">\\n      {#each filteredCompetitions as competition}\\n        <div class=\\"competition-card\\">\\n          <!-- Header with name and status -->\\n          <div class=\\"competition-header\\">\\n            <h3 class=\\"competition-name\\">{competition.name}</h3>\\n            <div class=\\"competition-status\\">\\n              <span class=\\"status-badge status-{getMobileStatus(competition)}\\">\\n                {getStatusBadge(competition).text}\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Competition details grid -->\\n          <div class=\\"competition-details\\">\\n            <div class=\\"detail-item\\">\\n              <span class=\\"detail-label\\">Entries</span>\\n              <span class=\\"detail-value\\">{competition.entry_count || 0}</span>\\n            </div>\\n            <div class=\\"detail-item\\">\\n              <span class=\\"detail-label\\">Entry Fee</span>\\n              <span class=\\"detail-value\\">\${competition.entry_fee || 0}</span>\\n            </div>\\n            <div class=\\"detail-item\\">\\n              <span class=\\"detail-label\\">Max Entries</span>\\n              <span class=\\"detail-value\\">{competition.max_entries_per_member || 'No limit'}</span>\\n            </div>\\n            <div class=\\"detail-item\\">\\n              <span class=\\"detail-label\\">Status</span>\\n              <span class=\\"detail-value {competition.active ? '' : 'deadline-urgent'}\\">\\n                {competition.active ? 'Active' : 'Inactive'}\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- Deadline info -->\\n          <div class=\\"deadline-info\\">\\n            <strong>Entry Deadline:</strong>\\n            <span class=\\"{getDaysUntilDeadline(competition) <= 3 ? 'deadline-urgent' : getDaysUntilDeadline(competition) <= 7 ? 'deadline-soon' : ''}\\">\\n              {formatDeadline(competition)}\\n            </span>\\n            {#if getDaysUntilDeadline(competition) > 0}\\n              <span class=\\"deadline-countdown\\">\\n                ({getDaysUntilDeadline(competition)} days left)\\n              </span>\\n            {/if}\\n          </div>\\n\\n          <!-- Description (if exists) -->\\n          {#if competition.description}\\n            <div class=\\"competition-description\\">\\n              {competition.description}\\n            </div>\\n          {/if}\\n\\n          <!-- Action buttons - vertical stack -->\\n          <div class=\\"competition-actions\\">\\n            <button \\n              class=\\"action-btn btn-edit-mobile\\"\\n              on:click={() => navigateToEdit(competition.id)}\\n            >\\n              ✏️ Edit Competition\\n            </button>\\n            \\n            <button \\n              class=\\"action-btn btn-entries-mobile\\"\\n              on:click={() => navigateToEntries(competition.id)}\\n            >\\n              📋 Manage Entries ({competition.entry_count || 0})\\n            </button>\\n            \\n            <button \\n              class=\\"action-btn btn-judges-mobile\\"\\n              on:click={() => navigateToJudges(competition.id)}\\n            >\\n              👩‍⚖️ Manage Judges\\n            </button>\\n            \\n            <button \\n              class=\\"action-btn btn-dashboard-mobile\\"\\n              on:click={() => navigateToJudgingDashboard(competition.id)}\\n            >\\n              📊 Judging Dashboard\\n            </button>\\n            \\n            <button \\n              class=\\"action-btn btn-results-mobile\\"\\n              on:click={() => navigateToResults(competition.id)}\\n            >\\n              🏆 Enter Results\\n            </button>\\n            \\n            <button \\n              class=\\"action-btn btn-toggle-mobile {competition.active ? 'inactive' : ''}\\"\\n              on:click={() => toggleStatus(competition)}\\n            >\\n              ⚡ {competition.active ? 'Deactivate' : 'Activate'}\\n            </button>\\n\\n            {#if competition.entry_count === 0}\\n              <button \\n                class=\\"action-btn btn-delete-mobile\\"\\n                on:click={() => {\\n                  competitionToDelete = competition;\\n                  showDeleteConfirm = true;\\n                }}\\n              >\\n                🗑️ Delete Competition\\n              </button>\\n            {/if}\\n          </div>\\n        </div>\\n      {/each}\\n    </div>\\n  {/if}\\n</div>\\n\\n<!-- Delete Confirmation Modal -->\\n{#if showDeleteConfirm && competitionToDelete}\\n  <div class=\\"modal\\">\\n    <div class=\\"modal-content\\">\\n      <h3>⚠️ Delete Competition?</h3>\\n      <p>\\n        Are you sure you want to delete <strong>{competitionToDelete.name}</strong>?\\n        This action cannot be undone.\\n      </p>\\n      <div class=\\"modal-actions\\">\\n        <button \\n          class=\\"btn btn-secondary\\"\\n          on:click={() => {\\n            showDeleteConfirm = false;\\n            competitionToDelete = null;\\n          }}\\n        >\\n          Cancel\\n        </button>\\n        <button \\n          class=\\"btn btn-delete\\"\\n          on:click={deleteCompetition}\\n        >\\n          Delete Competition\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n{/if}"],"names":[],"mappings":"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"}`
};
function getDaysUntilDeadline(competition) {
  if (!competition.entry_deadline) return 0;
  const now = /* @__PURE__ */ new Date();
  const deadline = new Date(competition.entry_deadline);
  const diffTime = deadline - now;
  const diffDays = Math.ceil(diffTime / (1e3 * 60 * 60 * 24));
  return diffDays > 0 ? diffDays : 0;
}
function formatDeadline(competition) {
  if (!competition.entry_deadline) return "No deadline set";
  const deadline = new Date(competition.entry_deadline);
  return deadline.toLocaleDateString("en-US", {
    weekday: "short",
    month: "short",
    day: "numeric",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit"
  });
}
function getStatusBadge(competition) {
  const now = /* @__PURE__ */ new Date();
  const deadline = new Date(competition.entry_deadline);
  if (!competition.active) {
    return {
      text: "Inactive",
      class: "badge-inactive"
    };
  } else if (deadline < now) {
    return { text: "Closed", class: "badge-closed" };
  } else if (deadline - now < 7 * 24 * 60 * 60 * 1e3) {
    return {
      text: "Closing Soon",
      class: "badge-warning"
    };
  } else {
    return { text: "Active", class: "badge-active" };
  }
}
function getMobileStatus(competition) {
  if (!competition.active) return "closed";
  const now = /* @__PURE__ */ new Date();
  const deadline = new Date(competition.entry_deadline);
  if (deadline < now) return "closed";
  return "open";
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let filteredCompetitions;
  let $competitions, $$unsubscribe_competitions;
  let $stats, $$unsubscribe_stats;
  let $error, $$unsubscribe_error;
  let $isLoading, $$unsubscribe_isLoading;
  let $userProfile, $$unsubscribe_userProfile;
  $$unsubscribe_competitions = subscribe(competitions, (value) => $competitions = value);
  $$unsubscribe_stats = subscribe(stats, (value) => $stats = value);
  $$unsubscribe_error = subscribe(error, (value) => $error = value);
  $$unsubscribe_isLoading = subscribe(isLoading, (value) => $isLoading = value);
  $$unsubscribe_userProfile = subscribe(userProfile, (value) => $userProfile = value);
  let searchQuery = "";
  let filterStatus = "all";
  onDestroy(() => {
  });
  $$result.css.add(css);
  {
    if ($userProfile && !$userProfile.is_officer) {
      goto();
    }
  }
  {
    {
      console.log("🔄 Reactive update:");
      console.log("  - isLoading:", $isLoading);
      console.log("  - error:", $error);
      console.log("  - competitions:", $competitions);
      console.log("  - stats:", $stats);
    }
  }
  filteredCompetitions = (() => {
    console.log("🔍 Computing filtered competitions...");
    let comps = [];
    switch (filterStatus) {
      case "active":
        comps = ($competitions || []).filter((c) => c.is_active);
        break;
      case "upcoming":
        comps = ($competitions || []).filter((c) => {
          const now = /* @__PURE__ */ new Date();
          const deadline = new Date(c.entry_deadline);
          return !c.is_active && deadline > now;
        });
        break;
      case "past":
        comps = ($competitions || []).filter((c) => {
          const now = /* @__PURE__ */ new Date();
          const deadline = new Date(c.entry_deadline);
          return deadline <= now;
        });
        break;
      default:
        comps = $competitions || [];
    }
    console.log("📋 Competitions before filter:", comps);
    if (searchQuery.trim()) {
      const query = searchQuery.toLowerCase();
      comps = comps.filter((c) => c.name.toLowerCase().includes(query) || c.description?.toLowerCase().includes(query));
    }
    console.log("📋 Competitions after filter:", comps);
    return comps;
  })();
  $$unsubscribe_competitions();
  $$unsubscribe_stats();
  $$unsubscribe_error();
  $$unsubscribe_isLoading();
  $$unsubscribe_userProfile();
  return `   <div class="container svelte-1xp7oiv"> <div class="hero svelte-1xp7oiv" data-svelte-h="svelte-eddlhh"><h1 class="svelte-1xp7oiv"><span class="emoji svelte-1xp7oiv">🏆</span> Manage Competitions</h1> <p class="subtitle svelte-1xp7oiv">Create and manage brewing competitions</p></div>  ${!$isLoading ? `<div class="stats-grid svelte-1xp7oiv"><div class="stat-card svelte-1xp7oiv"><div class="label svelte-1xp7oiv" data-svelte-h="svelte-a8is15">Total Competitions</div> <div class="value svelte-1xp7oiv">${escape($stats.total)}</div></div> <div class="stat-card svelte-1xp7oiv"><div class="label svelte-1xp7oiv" data-svelte-h="svelte-1gln7mx">Active</div> <div class="value svelte-1xp7oiv">${escape($stats.active)}</div></div> <div class="stat-card svelte-1xp7oiv"><div class="label svelte-1xp7oiv" data-svelte-h="svelte-ka7xtz">Total Entries</div> <div class="value svelte-1xp7oiv">${escape($stats.totalEntries)}</div></div> <div class="stat-card svelte-1xp7oiv"><div class="label svelte-1xp7oiv" data-svelte-h="svelte-10slx85">Avg Entries</div> <div class="value svelte-1xp7oiv">${escape($stats.avgEntries)}</div></div></div>` : ``}  <div class="controls svelte-1xp7oiv"><input type="text" class="search-input svelte-1xp7oiv" placeholder="Search competitions..."${add_attribute("value", searchQuery, 0)}> <select class="filter-select svelte-1xp7oiv"><option value="all" data-svelte-h="svelte-1052y4y">All Competitions</option><option value="active" data-svelte-h="svelte-1af1ewu">Active Only</option><option value="upcoming" data-svelte-h="svelte-2m822">Upcoming</option><option value="past" data-svelte-h="svelte-10hndz5">Past/Closed</option></select> <button class="btn btn-secondary svelte-1xp7oiv" data-svelte-h="svelte-131fs3s">🔄 Refresh</button> <button class="btn btn-primary svelte-1xp7oiv" data-svelte-h="svelte-1jvdk1o">➕ Create Competition</button></div>  ${$error ? `<div class="error svelte-1xp7oiv">⚠️ ${escape($error)}</div>` : ``}  ${$isLoading ? `<div class="loading svelte-1xp7oiv" data-svelte-h="svelte-15sws3p"><div class="spinner svelte-1xp7oiv"></div> <p>Loading competitions...</p></div>` : `${filteredCompetitions.length === 0 ? ` <div class="empty-state svelte-1xp7oiv"><h3 class="svelte-1xp7oiv" data-svelte-h="svelte-1phuoot">No competitions found</h3> <p>${`Create your first competition to get started`}</p> ${`<button class="btn btn-primary svelte-1xp7oiv" data-svelte-h="svelte-h6fh">Create First Competition</button>`}</div>` : ` <div class="competitions-table svelte-1xp7oiv"><table class="svelte-1xp7oiv"><thead data-svelte-h="svelte-1q0rqk"><tr class="svelte-1xp7oiv"><th class="svelte-1xp7oiv">Competition</th> <th class="svelte-1xp7oiv">Entry Deadline</th> <th class="svelte-1xp7oiv">Status</th> <th class="svelte-1xp7oiv">Entries</th> <th class="svelte-1xp7oiv">Actions</th></tr></thead> <tbody>${each(filteredCompetitions, (competition) => {
    return `<tr class="svelte-1xp7oiv"><td class="svelte-1xp7oiv"><strong>${escape(competition.name)}</strong> ${competition.description ? `<br> <small>${escape(competition.description)}</small>` : ``}</td> <td class="svelte-1xp7oiv">${escape(formatDeadline(competition))}</td> <td class="svelte-1xp7oiv"><span class="${"badge " + escape(getStatusBadge(competition).class, true) + " svelte-1xp7oiv"}">${escape(getStatusBadge(competition).text)} </span></td> <td class="svelte-1xp7oiv">${escape(competition.entry_count || 0)}</td> <td class="svelte-1xp7oiv"><div class="actions svelte-1xp7oiv"><button class="btn btn-small btn-edit svelte-1xp7oiv" data-svelte-h="svelte-iqthh1">✏️ Edit</button> <button class="btn btn-small btn-entries svelte-1xp7oiv" data-svelte-h="svelte-1uneioh">📋 Entries</button> <button class="btn btn-small btn-judges svelte-1xp7oiv" data-svelte-h="svelte-td2i9">👩‍⚖️ Judges</button> <button class="btn btn-small btn-dashboard svelte-1xp7oiv" data-svelte-h="svelte-1orblg8">📊 Dashboard</button> <button class="btn btn-small btn-results svelte-1xp7oiv" data-svelte-h="svelte-1rn12bv">🏆 Enter Results</button> <button class="${"btn btn-small btn-toggle " + escape(competition.active ? "inactive" : "", true) + " svelte-1xp7oiv"}">${escape(competition.active ? "⏸️ Deactivate" : "▶️ Activate")}</button> ${competition.entry_count === 0 ? `<button class="btn btn-small btn-delete svelte-1xp7oiv" data-svelte-h="svelte-tamkbl">🗑️ Delete
                    </button>` : ``} </div></td> </tr>`;
  })}</tbody></table></div>  <div class="competition-cards svelte-1xp7oiv">${each(filteredCompetitions, (competition) => {
    return `<div class="competition-card svelte-1xp7oiv"> <div class="competition-header svelte-1xp7oiv"><h3 class="competition-name svelte-1xp7oiv">${escape(competition.name)}</h3> <div class="competition-status svelte-1xp7oiv"><span class="${"status-badge status-" + escape(getMobileStatus(competition), true) + " svelte-1xp7oiv"}">${escape(getStatusBadge(competition).text)}</span> </div></div>  <div class="competition-details svelte-1xp7oiv"><div class="detail-item svelte-1xp7oiv"><span class="detail-label svelte-1xp7oiv" data-svelte-h="svelte-o3l767">Entries</span> <span class="detail-value svelte-1xp7oiv">${escape(competition.entry_count || 0)}</span></div> <div class="detail-item svelte-1xp7oiv"><span class="detail-label svelte-1xp7oiv" data-svelte-h="svelte-1lt33dv">Entry Fee</span> <span class="detail-value svelte-1xp7oiv">$${escape(competition.entry_fee || 0)}</span></div> <div class="detail-item svelte-1xp7oiv"><span class="detail-label svelte-1xp7oiv" data-svelte-h="svelte-6jmtr5">Max Entries</span> <span class="detail-value svelte-1xp7oiv">${escape(competition.max_entries_per_member || "No limit")}</span></div> <div class="detail-item svelte-1xp7oiv"><span class="detail-label svelte-1xp7oiv" data-svelte-h="svelte-4pad31">Status</span> <span class="${"detail-value " + escape(competition.active ? "" : "deadline-urgent", true) + " svelte-1xp7oiv"}">${escape(competition.active ? "Active" : "Inactive")}</span> </div></div>  <div class="deadline-info svelte-1xp7oiv"><strong data-svelte-h="svelte-itlo74">Entry Deadline:</strong> <span class="${escape(
      null_to_empty(getDaysUntilDeadline(competition) <= 3 ? "deadline-urgent" : getDaysUntilDeadline(competition) <= 7 ? "deadline-soon" : ""),
      true
    ) + " svelte-1xp7oiv"}">${escape(formatDeadline(competition))}</span> ${getDaysUntilDeadline(competition) > 0 ? `<span class="deadline-countdown">(${escape(getDaysUntilDeadline(competition))} days left)
              </span>` : ``}</div>  ${competition.description ? `<div class="competition-description svelte-1xp7oiv">${escape(competition.description)} </div>` : ``}  <div class="competition-actions svelte-1xp7oiv"><button class="action-btn btn-edit-mobile svelte-1xp7oiv" data-svelte-h="svelte-klm1ja">✏️ Edit Competition</button> <button class="action-btn btn-entries-mobile svelte-1xp7oiv">📋 Manage Entries (${escape(competition.entry_count || 0)})</button> <button class="action-btn btn-judges-mobile svelte-1xp7oiv" data-svelte-h="svelte-7oerg0">👩‍⚖️ Manage Judges</button> <button class="action-btn btn-dashboard-mobile svelte-1xp7oiv" data-svelte-h="svelte-ontu6o">📊 Judging Dashboard</button> <button class="action-btn btn-results-mobile svelte-1xp7oiv" data-svelte-h="svelte-tstj1r">🏆 Enter Results</button> <button class="${"action-btn btn-toggle-mobile " + escape(competition.active ? "inactive" : "", true) + " svelte-1xp7oiv"}">⚡ ${escape(competition.active ? "Deactivate" : "Activate")}</button> ${competition.entry_count === 0 ? `<button class="action-btn btn-delete-mobile svelte-1xp7oiv" data-svelte-h="svelte-zzy1f2">🗑️ Delete Competition
              </button>` : ``}</div> </div>`;
  })}</div>`}`}</div>  ${``}`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-DDYqI1hl.js.map
