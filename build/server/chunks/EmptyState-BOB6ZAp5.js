import { c as create_ssr_component, d as escape, q as compute_slots } from './ssr-CFMHIens.js';

const css$1 = {
  code: ".loading.svelte-12vrk7a{display:flex;flex-direction:column;align-items:center;gap:var(--space-4);padding:var(--space-12)}.loading-center.svelte-12vrk7a{justify-content:center;min-height:200px}.spinner.svelte-12vrk7a{border-radius:var(--radius-full);border-style:solid;border-color:var(--color-brand-primary-light);border-top-color:var(--color-brand-primary);animation:svelte-12vrk7a-spin 1s linear infinite}.spinner-sm.svelte-12vrk7a{width:24px;height:24px;border-width:2px}.spinner-md.svelte-12vrk7a{width:40px;height:40px;border-width:4px}.spinner-lg.svelte-12vrk7a{width:64px;height:64px;border-width:6px}.loading-message.svelte-12vrk7a{color:var(--color-text-secondary);font-size:var(--font-size-base);margin:0}@keyframes svelte-12vrk7a-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}",
  map: `{"version":3,"file":"LoadingSpinner.svelte","sources":["LoadingSpinner.svelte"],"sourcesContent":["<script>\\r\\n  /**\\r\\n   * LoadingSpinner Component\\r\\n   *\\r\\n   * A loading spinner with optional message.\\r\\n   *\\r\\n   * @prop {string} message - Optional loading message to display\\r\\n   * @prop {string} size - Spinner size: 'sm', 'md', 'lg'\\r\\n   * @prop {boolean} center - Center the spinner (default: true)\\r\\n   */\\r\\n\\r\\n  export let message = 'Loading...';\\r\\n  export let size = 'md';\\r\\n  export let center = true;\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"loading\\" class:loading-center={center}>\\r\\n  <div class=\\"spinner spinner-{size}\\"></div>\\r\\n  {#if message}\\r\\n    <p class=\\"loading-message\\">{message}</p>\\r\\n  {/if}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .loading {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    gap: var(--space-4);\\r\\n    padding: var(--space-12);\\r\\n  }\\r\\n\\r\\n  .loading-center {\\r\\n    justify-content: center;\\r\\n    min-height: 200px;\\r\\n  }\\r\\n\\r\\n  .spinner {\\r\\n    border-radius: var(--radius-full);\\r\\n    border-style: solid;\\r\\n    border-color: var(--color-brand-primary-light);\\r\\n    border-top-color: var(--color-brand-primary);\\r\\n    animation: spin 1s linear infinite;\\r\\n  }\\r\\n\\r\\n  .spinner-sm {\\r\\n    width: 24px;\\r\\n    height: 24px;\\r\\n    border-width: 2px;\\r\\n  }\\r\\n\\r\\n  .spinner-md {\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    border-width: 4px;\\r\\n  }\\r\\n\\r\\n  .spinner-lg {\\r\\n    width: 64px;\\r\\n    height: 64px;\\r\\n    border-width: 6px;\\r\\n  }\\r\\n\\r\\n  .loading-message {\\r\\n    color: var(--color-text-secondary);\\r\\n    font-size: var(--font-size-base);\\r\\n    margin: 0;\\r\\n  }\\r\\n\\r\\n  @keyframes spin {\\r\\n    0% {\\r\\n      transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAwBE,uBAAS,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IAAI,SAAS,CAAC,CACnB,OAAO,CAAE,IAAI,UAAU,CACzB,CAEA,8BAAgB,CACd,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,KACd,CAEA,uBAAS,CACP,aAAa,CAAE,IAAI,aAAa,CAAC,CACjC,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,IAAI,2BAA2B,CAAC,CAC9C,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,CAC5C,SAAS,CAAE,mBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAC5B,CAEA,0BAAY,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAChB,CAEA,0BAAY,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAChB,CAEA,0BAAY,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAChB,CAEA,+BAAiB,CACf,KAAK,CAAE,IAAI,sBAAsB,CAAC,CAClC,SAAS,CAAE,IAAI,gBAAgB,CAAC,CAChC,MAAM,CAAE,CACV,CAEA,WAAW,mBAAK,CACd,EAAG,CACD,SAAS,CAAE,OAAO,IAAI,CACxB,CACA,IAAK,CACH,SAAS,CAAE,OAAO,MAAM,CAC1B,CACF"}`
};
const LoadingSpinner = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { message = "Loading..." } = $$props;
  let { size = "md" } = $$props;
  let { center = true } = $$props;
  if ($$props.message === void 0 && $$bindings.message && message !== void 0) $$bindings.message(message);
  if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
  if ($$props.center === void 0 && $$bindings.center && center !== void 0) $$bindings.center(center);
  $$result.css.add(css$1);
  return `<div class="${["loading svelte-12vrk7a", center ? "loading-center" : ""].join(" ").trim()}"><div class="${"spinner spinner-" + escape(size, true) + " svelte-12vrk7a"}"></div> ${message ? `<p class="loading-message svelte-12vrk7a">${escape(message)}</p>` : ``} </div>`;
});
const css = {
  code: ".empty-state.svelte-2nfbf{background-color:var(--color-bg-primary);border-radius:var(--radius-md);padding:var(--space-12) var(--space-8);box-shadow:var(--shadow-md);text-align:center;max-width:600px;margin:0 auto}.empty-icon.svelte-2nfbf{font-size:var(--font-size-6xl);margin-bottom:var(--space-4)}.empty-title.svelte-2nfbf{color:var(--color-text-primary);font-size:var(--font-size-2xl);font-weight:var(--font-weight-semibold);margin:0 0 var(--space-4) 0}.empty-description.svelte-2nfbf{color:var(--color-text-secondary);font-size:var(--font-size-base);margin:0 0 var(--space-6) 0;line-height:var(--line-height-relaxed)}.empty-actions.svelte-2nfbf{display:flex;gap:var(--space-4);justify-content:center;margin-top:var(--space-6)}@media(max-width: 768px){.empty-state.svelte-2nfbf{padding:var(--space-8) var(--space-6)}.empty-icon.svelte-2nfbf{font-size:var(--font-size-5xl)}.empty-title.svelte-2nfbf{font-size:var(--font-size-xl)}.empty-description.svelte-2nfbf{font-size:var(--font-size-sm)}}",
  map: `{"version":3,"file":"EmptyState.svelte","sources":["EmptyState.svelte"],"sourcesContent":["<script>\\r\\n  /**\\r\\n   * EmptyState Component\\r\\n   *\\r\\n   * A component to display when there's no data or content to show.\\r\\n   *\\r\\n   * @prop {string} icon - Icon/emoji to display\\r\\n   * @prop {string} title - Main message\\r\\n   * @prop {string} description - Optional description text\\r\\n   */\\r\\n\\r\\n  export let icon = 'ðŸ“­';\\r\\n  export let title = 'No data available';\\r\\n  export let description = '';\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"empty-state\\">\\r\\n  <div class=\\"empty-icon\\">{icon}</div>\\r\\n  <h3 class=\\"empty-title\\">{title}</h3>\\r\\n  {#if description}\\r\\n    <p class=\\"empty-description\\">{description}</p>\\r\\n  {/if}\\r\\n  {#if $$slots.default}\\r\\n    <div class=\\"empty-actions\\">\\r\\n      <slot />\\r\\n    </div>\\r\\n  {/if}\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .empty-state {\\r\\n    background-color: var(--color-bg-primary);\\r\\n    border-radius: var(--radius-md);\\r\\n    padding: var(--space-12) var(--space-8);\\r\\n    box-shadow: var(--shadow-md);\\r\\n    text-align: center;\\r\\n    max-width: 600px;\\r\\n    margin: 0 auto;\\r\\n  }\\r\\n\\r\\n  .empty-icon {\\r\\n    font-size: var(--font-size-6xl);\\r\\n    margin-bottom: var(--space-4);\\r\\n  }\\r\\n\\r\\n  .empty-title {\\r\\n    color: var(--color-text-primary);\\r\\n    font-size: var(--font-size-2xl);\\r\\n    font-weight: var(--font-weight-semibold);\\r\\n    margin: 0 0 var(--space-4) 0;\\r\\n  }\\r\\n\\r\\n  .empty-description {\\r\\n    color: var(--color-text-secondary);\\r\\n    font-size: var(--font-size-base);\\r\\n    margin: 0 0 var(--space-6) 0;\\r\\n    line-height: var(--line-height-relaxed);\\r\\n  }\\r\\n\\r\\n  .empty-actions {\\r\\n    display: flex;\\r\\n    gap: var(--space-4);\\r\\n    justify-content: center;\\r\\n    margin-top: var(--space-6);\\r\\n  }\\r\\n\\r\\n  /* Responsive */\\r\\n  @media (max-width: 768px) {\\r\\n    .empty-state {\\r\\n      padding: var(--space-8) var(--space-6);\\r\\n    }\\r\\n\\r\\n    .empty-icon {\\r\\n      font-size: var(--font-size-5xl);\\r\\n    }\\r\\n\\r\\n    .empty-title {\\r\\n      font-size: var(--font-size-xl);\\r\\n    }\\r\\n\\r\\n    .empty-description {\\r\\n      font-size: var(--font-size-sm);\\r\\n    }\\r\\n  }\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA8BE,yBAAa,CACX,gBAAgB,CAAE,IAAI,kBAAkB,CAAC,CACzC,aAAa,CAAE,IAAI,WAAW,CAAC,CAC/B,OAAO,CAAE,IAAI,UAAU,CAAC,CAAC,IAAI,SAAS,CAAC,CACvC,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IACZ,CAEA,wBAAY,CACV,SAAS,CAAE,IAAI,eAAe,CAAC,CAC/B,aAAa,CAAE,IAAI,SAAS,CAC9B,CAEA,yBAAa,CACX,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,SAAS,CAAE,IAAI,eAAe,CAAC,CAC/B,WAAW,CAAE,IAAI,sBAAsB,CAAC,CACxC,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAC7B,CAEA,+BAAmB,CACjB,KAAK,CAAE,IAAI,sBAAsB,CAAC,CAClC,SAAS,CAAE,IAAI,gBAAgB,CAAC,CAChC,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAC5B,WAAW,CAAE,IAAI,qBAAqB,CACxC,CAEA,2BAAe,CACb,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,SAAS,CAAC,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,IAAI,SAAS,CAC3B,CAGA,MAAO,YAAY,KAAK,CAAE,CACxB,yBAAa,CACX,OAAO,CAAE,IAAI,SAAS,CAAC,CAAC,IAAI,SAAS,CACvC,CAEA,wBAAY,CACV,SAAS,CAAE,IAAI,eAAe,CAChC,CAEA,yBAAa,CACX,SAAS,CAAE,IAAI,cAAc,CAC/B,CAEA,+BAAmB,CACjB,SAAS,CAAE,IAAI,cAAc,CAC/B,CACF"}`
};
const EmptyState = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$slots = compute_slots(slots);
  let { icon = "ðŸ“­" } = $$props;
  let { title = "No data available" } = $$props;
  let { description = "" } = $$props;
  if ($$props.icon === void 0 && $$bindings.icon && icon !== void 0) $$bindings.icon(icon);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0) $$bindings.description(description);
  $$result.css.add(css);
  return `<div class="empty-state svelte-2nfbf"><div class="empty-icon svelte-2nfbf">${escape(icon)}</div> <h3 class="empty-title svelte-2nfbf">${escape(title)}</h3> ${description ? `<p class="empty-description svelte-2nfbf">${escape(description)}</p>` : ``} ${$$slots.default ? `<div class="empty-actions svelte-2nfbf">${slots.default ? slots.default({}) : ``}</div>` : ``} </div>`;
});

export { EmptyState as E, LoadingSpinner as L };
//# sourceMappingURL=EmptyState-BOB6ZAp5.js.map
