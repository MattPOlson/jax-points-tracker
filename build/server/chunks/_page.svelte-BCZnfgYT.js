import { c as create_ssr_component, a as subscribe, v as validate_component, d as escape, e as each, b as add_attribute } from './ssr-CFMHIens.js';
import './client-C3KLrhj1.js';
import { u as userProfile } from './userProfile-BAUZwBX2.js';
import { e as error, i as isLoading, b as isLoaded, m as mainCategories, a as activeCompetitions, d as competitions, h as bjcpCategories, c as categoriesByNumber, f as formatDeadline } from './bjcpCategoryStore-PCT2-_IN.js';
import './supabaseClient-D_8i9Ohq.js';
import { H as Hero } from './Hero-Dg21uuqy.js';
import { C as Container } from './Container-BafdMVU8.js';
import { L as LoadingSpinner } from './LoadingSpinner-BXBS6p7s.js';
import { E as EmptyState } from './EmptyState-B07ITnMn.js';
import { B as Button } from './Button-CVHS80BD.js';
import './exports-DKuYoYKl.js';
import './index-Ct3aIOD7.js';
import './false-CRHihH2U.js';
import '@supabase/supabase-js';

const css = {
  code: ".error-container.svelte-ncefe.svelte-ncefe{text-align:center;padding:3rem 2rem;background:white;border-radius:6px;box-shadow:0 2px 8px rgba(0,0,0,0.1);border-left:4px solid #ff3e00}.form-container.svelte-ncefe.svelte-ncefe{background:white;border-radius:6px;box-shadow:0 2px 8px rgba(0,0,0,0.1);border-left:4px solid #ff3e00;padding:2rem}.success-message.svelte-ncefe.svelte-ncefe{background:#f0f9ff;border:1px solid #059669;border-radius:6px;padding:1.5rem;margin-bottom:2rem;text-align:center}.success-message.svelte-ncefe h2.svelte-ncefe{color:#059669;margin:0 0 0.5rem 0;font-size:1.5rem}.entry-form.svelte-ncefe.svelte-ncefe{max-width:100%}.form-group.svelte-ncefe.svelte-ncefe{margin-bottom:1.5rem}.form-group.svelte-ncefe label.svelte-ncefe{display:block;font-weight:600;margin-bottom:0.5rem;color:#333}.form-group.svelte-ncefe input.svelte-ncefe,.form-group.svelte-ncefe select.svelte-ncefe,.form-group.svelte-ncefe textarea.svelte-ncefe{width:100%;padding:0.75rem;border:2px solid #ddd;border-radius:6px;font-size:1rem;transition:border-color 0.2s;box-sizing:border-box}.form-group.svelte-ncefe input.svelte-ncefe:focus,.form-group.svelte-ncefe select.svelte-ncefe:focus,.form-group.svelte-ncefe textarea.svelte-ncefe:focus{outline:none;border-color:#ff3e00}.form-group.svelte-ncefe input.svelte-ncefe:disabled,.form-group.svelte-ncefe select.svelte-ncefe:disabled,.form-group.svelte-ncefe textarea.svelte-ncefe:disabled{background:#f5f5f5;cursor:not-allowed}.competition-info.svelte-ncefe.svelte-ncefe{background:#f8f9fa;border:1px solid #dee2e6;border-radius:6px;padding:1rem;margin-top:0.5rem}.competition-info.svelte-ncefe p.svelte-ncefe{margin:0.25rem 0;font-size:0.9rem}.custom-categories-notice.svelte-ncefe.svelte-ncefe{background:#e0f7fa;border:1px solid #4dd0e1;border-radius:6px;padding:0.75rem;margin-top:0.5rem}.custom-categories-notice.svelte-ncefe p.svelte-ncefe{margin:0;color:#006064;font-weight:500}.category-description.svelte-ncefe.svelte-ncefe{background:#fff3cd;border:1px solid #ffeaa7;border-radius:6px;padding:0.75rem;margin-top:0.5rem;font-size:0.9rem;font-style:italic}.character-count.svelte-ncefe.svelte-ncefe{text-align:right;font-size:0.8rem;color:#666;margin-top:0.25rem}.brewer-info.svelte-ncefe.svelte-ncefe{background:#f8f9fa;border:2px solid #ddd;border-radius:6px;padding:0.75rem;display:flex;justify-content:space-between;align-items:center}.brewer-name.svelte-ncefe.svelte-ncefe{font-weight:600}.auto-filled.svelte-ncefe.svelte-ncefe{font-size:0.8rem;color:#666;font-style:italic}.error-message.svelte-ncefe.svelte-ncefe{background:#fee;border:1px solid #dc2626;border-radius:6px;padding:1rem;margin-bottom:1rem}.error-message.svelte-ncefe p.svelte-ncefe{margin:0;color:#dc2626}.form-actions.svelte-ncefe.svelte-ncefe{display:flex;gap:1rem;justify-content:flex-end;margin-top:2rem}.form-help.svelte-ncefe.svelte-ncefe{margin-top:2rem;padding-top:2rem;border-top:1px solid #dee2e6}.form-help.svelte-ncefe h3.svelte-ncefe{color:#ff3e00;font-size:1.1rem;margin:0 0 1rem 0}.form-help.svelte-ncefe ul.svelte-ncefe{margin:0;padding-left:1.5rem}.form-help.svelte-ncefe li.svelte-ncefe{margin-bottom:0.5rem;color:#555}@media(max-width: 768px){.form-container.svelte-ncefe.svelte-ncefe{padding:1.5rem}.form-actions.svelte-ncefe.svelte-ncefe{flex-direction:column}.brewer-info.svelte-ncefe.svelte-ncefe{flex-direction:column;align-items:flex-start;gap:0.5rem}}@media(max-width: 480px){.form-container.svelte-ncefe.svelte-ncefe{padding:1rem}.error-container.svelte-ncefe.svelte-ncefe{padding:2rem 1rem}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount, onDestroy } from 'svelte';\\n  import { goto } from '$app/navigation';\\n  import { userProfile } from '$lib/stores/userProfile.js';\\n  import {\\n    bjcpCategories,\\n    competitions,\\n    activeCompetitions,\\n    mainCategories,\\n    categoriesByNumber,\\n    loadCompetitionData,\\n    getCategoryById,\\n    areEntriesOpen,\\n    formatDeadline,\\n    isLoaded,\\n    isLoading,\\n    error\\n  } from '$lib/stores/bjcpCategoryStore.js';\\n  import { supabase } from '$lib/supabaseClient';\\n  import Hero from \\"$lib/components/ui/Hero.svelte\\";\\n  import Container from \\"$lib/components/ui/Container.svelte\\";\\n  import LoadingSpinner from \\"$lib/components/ui/LoadingSpinner.svelte\\";\\n  import EmptyState from \\"$lib/components/ui/EmptyState.svelte\\";\\n  import Button from \\"$lib/components/ui/Button.svelte\\";\\n\\n  // =============================================\\n  // Tab Switching Fix (CRITICAL)\\n  // =============================================\\n  let cleanup;\\n\\n // Removed problematic tab visibility handler - already commented out\\n\\n  // =============================================\\n  // Form State\\n  // =============================================\\n  let selectedCompetition = '';\\n  let selectedMainCategory = '';\\n  let selectedSubcategory = '';\\n  let beerName = '';\\n  let beerNotes = '';\\n  let submitting = false;\\n  let submitError = null;\\n  let submitSuccess = false;\\n\\n  // =============================================\\n  // Reactive Variables\\n  // =============================================\\n  \\n  // Get allowed categories for selected competition\\n  $: allowedCategoryIds = selectedCompetitionObj?.category_system === 'custom' \\n    ? (selectedCompetitionObj.category_restrictions || [])\\n    : null;\\n\\n  // Get available main categories (filtered if custom system)\\n  $: availableMainCategories = allowedCategoryIds\\n    ? $mainCategories.filter(category => {\\n        // Check if any subcategory in this main category is allowed\\n        const categorySubcategories = $categoriesByNumber[category.number]?.subcategories || [];\\n        return categorySubcategories.some(sub => allowedCategoryIds.includes(sub.id));\\n      })\\n    : $mainCategories;\\n\\n  // Get available subcategories based on selected main category (filtered if custom system)\\n  $: availableSubcategories = selectedMainCategory \\n    ? ($categoriesByNumber[selectedMainCategory]?.subcategories || []).filter(sub => \\n        allowedCategoryIds ? allowedCategoryIds.includes(sub.id) : true\\n      )\\n    : [];\\n\\n  // Get selected competition object\\n  $: selectedCompetitionObj = selectedCompetition \\n    ? $activeCompetitions.find(comp => comp.id === selectedCompetition)\\n    : null;\\n\\n  // Get selected category object\\n  $: selectedCategoryObj = selectedSubcategory \\n    ? getCategoryById(selectedSubcategory)\\n    : null;\\n\\n  // Form validation\\n  $: canSubmit = selectedCompetition && \\n                 selectedSubcategory && \\n                 beerName.trim() && \\n                 !submitting &&\\n                 $userProfile?.id &&\\n                 areEntriesOpen(selectedCompetitionObj);\\n\\n  // Reset dependent fields when main category changes\\n  $: if (selectedMainCategory) {\\n    selectedSubcategory = '';\\n  }\\n\\n  // =============================================\\n  // Lifecycle\\n  // =============================================\\n  onMount(async () => {\\n    console.log('üöÄ Page mounted, loading data...');\\n    \\n    // Check if user is logged in\\n    //if (!$userProfile?.id) {\\n    //  console.log('‚ùå User not logged in, redirecting...');\\n    //  goto('/login');\\n    //  return;\\n   // }\\n\\n    // Load competition data\\n    try {\\n      console.log('üìã Loading competition data...');\\n      await loadCompetitionData();\\n      console.log('‚úÖ Competition data loaded');\\n    } catch (err) {\\n      console.error('‚ùå Failed to load competition data:', err);\\n    }\\n  });\\n\\n\\n  // =============================================\\n  // Form Handlers\\n  // =============================================\\n  \\n  async function handleSubmit() {\\n    if (!canSubmit) return;\\n\\n    submitting = true;\\n    submitError = null;\\n    submitSuccess = false;\\n\\n    try {\\n      console.log('üç∫ Submitting competition entry...');\\n\\n      // Generate random entry number\\n      const entryNumber = Math.floor(Math.random() * 99999 + 1).toString().padStart(5, '0');\\n\\n      const entryData = {\\n        competition_id: selectedCompetition,\\n        member_id: $userProfile.id,\\n        bjcp_category_id: selectedSubcategory,\\n        beer_name: beerName.trim(),\\n        beer_notes: beerNotes.trim() || null,\\n        entry_number: entryNumber,\\n        entry_fee_paid: false\\n      };\\n\\n      const { data, error: insertError } = await supabase\\n        .from('competition_entries')\\n        .insert([entryData])\\n        .select(\`\\n          *,\\n          competition:competitions(name),\\n          bjcp_category:bjcp_categories(category_number, subcategory_letter, subcategory_name)\\n        \`)\\n        .single();\\n\\n      if (insertError) {\\n        console.error('‚ùå Error submitting entry:', insertError);\\n        throw insertError;\\n      }\\n\\n      console.log('‚úÖ Entry submitted successfully:', data);\\n      \\n      submitSuccess = true;\\n      \\n      // Reset form\\n      selectedCompetition = '';\\n      selectedMainCategory = '';\\n      selectedSubcategory = '';\\n      beerName = '';\\n      beerNotes = '';\\n\\n      // Redirect to entries page after 2 seconds\\n      setTimeout(() => {\\n        goto('/competitions/my-entries');\\n      }, 2000);\\n\\n    } catch (err) {\\n      console.error('üí• Failed to submit entry:', err);\\n      submitError = err.message || 'Failed to submit entry';\\n    } finally {\\n      submitting = false;\\n    }\\n  }\\n\\n  function resetForm() {\\n    selectedCompetition = '';\\n    selectedMainCategory = '';\\n    selectedSubcategory = '';\\n    beerName = '';\\n    beerNotes = '';\\n    submitError = null;\\n    submitSuccess = false;\\n  }\\n\\n  // =============================================\\n  // Helper Functions\\n  // =============================================\\n  \\n  function formatCategoryOption(subcategory) {\\n    return \`\${subcategory.letter} - \${subcategory.name}\`;\\n  }\\n  // Debug: Log store values\\n  $: console.log('üìä Store Debug:', {\\n    bjcpCategories: $bjcpCategories.length,\\n    competitions: $competitions.length,\\n    activeCompetitions: $activeCompetitions.length,\\n    mainCategories: $mainCategories.length,\\n    isLoaded: $isLoaded,\\n    isLoading: $isLoading,\\n    error: $error\\n  });\\n<\/script>\\n\\n<svelte:head>\\n  <title>Submit Competition Entry | JAX Members Portal</title>\\n</svelte:head>\\n\\n<Container size=\\"md\\">\\n  <Hero\\n    title=\\"SUBMIT COMPETITION ENTRY\\"\\n    subtitle=\\"Enter your beer into a JAX club competition\\"\\n    icon=\\"üèÜ\\"\\n    center={true}\\n  />\\n\\n  <!-- Loading State -->\\n  {#if $isLoading && !$isLoaded}\\n    <LoadingSpinner message=\\"Loading competition data...\\" />\\n\\n  <!-- Error State -->\\n  {:else if $error}\\n    <div class=\\"error-container\\">\\n      <h2>‚ùå Error Loading Data</h2>\\n      <p>{$error}</p>\\n      <Button on:click={() => loadCompetitionData(true)} variant=\\"primary\\">\\n        üîÑ Retry\\n      </Button>\\n    </div>\\n\\n  <!-- No Active Competitions -->\\n  {:else if $isLoaded && $activeCompetitions.length === 0}\\n    <EmptyState\\n      icon=\\"üìÖ\\"\\n      title=\\"No Active Competitions\\"\\n      message=\\"There are currently no competitions accepting entries. Check back later or contact an officer for more information.\\"\\n    >\\n      <Button on:click={() => goto('/competitions')} variant=\\"primary\\">\\n        üìã View All Competitions\\n      </Button>\\n    </EmptyState>\\n\\n  <!-- Main Form -->\\n  {:else if $isLoaded}\\n    <div class=\\"form-container\\">\\n      \\n      <!-- Success Message -->\\n      {#if submitSuccess}\\n        <div class=\\"success-message\\">\\n          <h2>üéâ Entry Submitted Successfully!</h2>\\n          <p>Your competition entry has been received. Redirecting to your entries...</p>\\n        </div>\\n      {/if}\\n\\n      <!-- Entry Form -->\\n      <form on:submit|preventDefault={handleSubmit} class=\\"entry-form\\">\\n        \\n        <!-- Competition Selection -->\\n        <div class=\\"form-group\\">\\n          <label for=\\"competition\\">Competition *</label>\\n          <select \\n            id=\\"competition\\" \\n            bind:value={selectedCompetition}\\n            disabled={submitting || submitSuccess}\\n            required\\n          >\\n            <option value=\\"\\">Select a competition...</option>\\n            {#each $activeCompetitions as competition}\\n              <option value={competition.id}>\\n                {competition.name}\\n                {#if competition.days_until_deadline !== undefined}\\n                  ({competition.days_until_deadline} days left)\\n                {/if}\\n              </option>\\n            {/each}\\n          </select>\\n          \\n          {#if selectedCompetitionObj}\\n            <div class=\\"competition-info\\">\\n              <p><strong>Entry Deadline:</strong> {formatDeadline(selectedCompetitionObj)}</p>\\n              {#if selectedCompetitionObj.description}\\n                <p><strong>Description:</strong> {selectedCompetitionObj.description}</p>\\n              {/if}\\n              {#if selectedCompetitionObj.category_system === 'custom'}\\n                <div class=\\"custom-categories-notice\\">\\n                  <p><strong>üìã Custom Categories:</strong> This competition only accepts specific BJCP categories. Only allowed categories will be shown in the selection below.</p>\\n                </div>\\n              {/if}\\n            </div>\\n          {/if}\\n        </div>\\n\\n        <!-- Main Category Selection -->\\n        <div class=\\"form-group\\">\\n          <label for=\\"main-category\\">BJCP Category *</label>\\n          <select \\n            id=\\"main-category\\" \\n            bind:value={selectedMainCategory}\\n            disabled={!selectedCompetition || submitting || submitSuccess}\\n            required\\n          >\\n            <option value=\\"\\">Select main category...</option>\\n            {#each availableMainCategories as category}\\n              <option value={category.number}>\\n                {category.number} - {category.name}\\n              </option>\\n            {/each}\\n          </select>\\n        </div>\\n\\n        <!-- Subcategory Selection -->\\n        {#if selectedMainCategory && availableSubcategories.length > 0}\\n          <div class=\\"form-group\\">\\n            <label for=\\"subcategory\\">BJCP Subcategory *</label>\\n            <select \\n              id=\\"subcategory\\" \\n              bind:value={selectedSubcategory}\\n              disabled={submitting || submitSuccess}\\n              required\\n            >\\n              <option value=\\"\\">Select subcategory...</option>\\n              {#each availableSubcategories as subcategory}\\n                <option value={subcategory.id}>\\n                  {formatCategoryOption(subcategory)}\\n                </option>\\n              {/each}\\n            </select>\\n            \\n            {#if selectedCategoryObj}\\n              <div class=\\"category-description\\">\\n                <p>{selectedCategoryObj.description}</p>\\n              </div>\\n            {/if}\\n          </div>\\n        {/if}\\n\\n        <!-- Beer Name -->\\n        <div class=\\"form-group\\">\\n          <label for=\\"beer-name\\">Beer Name *</label>\\n          <input \\n            type=\\"text\\" \\n            id=\\"beer-name\\"\\n            bind:value={beerName}\\n            placeholder=\\"Enter your beer name...\\"\\n            disabled={submitting || submitSuccess}\\n            maxlength=\\"100\\"\\n            required\\n          />\\n        </div>\\n\\n        <!-- Beer Notes -->\\n        <div class=\\"form-group\\">\\n          <label for=\\"beer-notes\\">Beer Notes (Optional)</label>\\n          <textarea \\n            id=\\"beer-notes\\"\\n            bind:value={beerNotes}\\n            placeholder=\\"Special ingredients, techniques, or notes for judges...\\"\\n            disabled={submitting || submitSuccess}\\n            rows=\\"4\\"\\n            maxlength=\\"500\\"\\n          ></textarea>\\n          <div class=\\"character-count\\">\\n            {beerNotes.length}/500 characters\\n          </div>\\n        </div>\\n\\n        <!-- Brewer Info (Read-only) -->\\n        <div class=\\"form-group\\">\\n          <label>Brewer</label>\\n          <div class=\\"brewer-info\\">\\n            <span class=\\"brewer-name\\">{$userProfile?.name || $userProfile?.email}</span>\\n            <span class=\\"auto-filled\\">(automatically filled)</span>\\n          </div>\\n        </div>\\n\\n        <!-- Error Message -->\\n        {#if submitError}\\n          <div class=\\"error-message\\">\\n            <p>‚ùå {submitError}</p>\\n          </div>\\n        {/if}\\n\\n        <!-- Form Actions -->\\n        <div class=\\"form-actions\\">\\n          <Button\\n            type=\\"button\\"\\n            on:click={resetForm}\\n            variant=\\"secondary\\"\\n            disabled={submitting || submitSuccess}\\n          >\\n            üîÑ Reset Form\\n          </Button>\\n\\n          <Button\\n            type=\\"submit\\"\\n            variant=\\"primary\\"\\n            disabled={!canSubmit || submitSuccess}\\n          >\\n            {#if submitting}\\n              üîÑ Submitting...\\n            {:else if submitSuccess}\\n              ‚úÖ Submitted\\n            {:else}\\n              üç∫ Submit Entry\\n            {/if}\\n          </Button>\\n        </div>\\n\\n        <!-- Form Help -->\\n        <div class=\\"form-help\\">\\n          <h3>üìù Entry Guidelines</h3>\\n          <ul>\\n            <li>Entries must be submitted before the deadline</li>\\n            <li>One entry per category per brewer per competition</li>\\n            <li>Entry fees may apply (check with officers)</li>\\n            <li>You'll receive a random entry number for anonymity</li>\\n            <li>You can edit entries until the deadline</li>\\n          </ul>\\n        </div>\\n      </form>\\n    </div>\\n  {/if}\\n</Container>\\n\\n<style>\\n  .error-container {\\n    text-align: center;\\n    padding: 3rem 2rem;\\n    background: white;\\n    border-radius: 6px;\\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\n    border-left: 4px solid #ff3e00;\\n  }\\n\\n  .form-container {\\n    background: white;\\n    border-radius: 6px;\\n    box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\n    border-left: 4px solid #ff3e00;\\n    padding: 2rem;\\n  }\\n\\n  .success-message {\\n    background: #f0f9ff;\\n    border: 1px solid #059669;\\n    border-radius: 6px;\\n    padding: 1.5rem;\\n    margin-bottom: 2rem;\\n    text-align: center;\\n  }\\n\\n  .success-message h2 {\\n    color: #059669;\\n    margin: 0 0 0.5rem 0;\\n    font-size: 1.5rem;\\n  }\\n\\n  .entry-form {\\n    max-width: 100%;\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .form-group label {\\n    display: block;\\n    font-weight: 600;\\n    margin-bottom: 0.5rem;\\n    color: #333;\\n  }\\n\\n  .form-group input,\\n  .form-group select,\\n  .form-group textarea {\\n    width: 100%;\\n    padding: 0.75rem;\\n    border: 2px solid #ddd;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n    transition: border-color 0.2s;\\n    box-sizing: border-box;\\n  }\\n\\n  .form-group input:focus,\\n  .form-group select:focus,\\n  .form-group textarea:focus {\\n    outline: none;\\n    border-color: #ff3e00;\\n  }\\n\\n  .form-group input:disabled,\\n  .form-group select:disabled,\\n  .form-group textarea:disabled {\\n    background: #f5f5f5;\\n    cursor: not-allowed;\\n  }\\n\\n  .competition-info {\\n    background: #f8f9fa;\\n    border: 1px solid #dee2e6;\\n    border-radius: 6px;\\n    padding: 1rem;\\n    margin-top: 0.5rem;\\n  }\\n\\n  .competition-info p {\\n    margin: 0.25rem 0;\\n    font-size: 0.9rem;\\n  }\\n\\n  .custom-categories-notice {\\n    background: #e0f7fa;\\n    border: 1px solid #4dd0e1;\\n    border-radius: 6px;\\n    padding: 0.75rem;\\n    margin-top: 0.5rem;\\n  }\\n\\n  .custom-categories-notice p {\\n    margin: 0;\\n    color: #006064;\\n    font-weight: 500;\\n  }\\n\\n  .category-description {\\n    background: #fff3cd;\\n    border: 1px solid #ffeaa7;\\n    border-radius: 6px;\\n    padding: 0.75rem;\\n    margin-top: 0.5rem;\\n    font-size: 0.9rem;\\n    font-style: italic;\\n  }\\n\\n  .character-count {\\n    text-align: right;\\n    font-size: 0.8rem;\\n    color: #666;\\n    margin-top: 0.25rem;\\n  }\\n\\n  .brewer-info {\\n    background: #f8f9fa;\\n    border: 2px solid #ddd;\\n    border-radius: 6px;\\n    padding: 0.75rem;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .brewer-name {\\n    font-weight: 600;\\n  }\\n\\n  .auto-filled {\\n    font-size: 0.8rem;\\n    color: #666;\\n    font-style: italic;\\n  }\\n\\n  .error-message {\\n    background: #fee;\\n    border: 1px solid #dc2626;\\n    border-radius: 6px;\\n    padding: 1rem;\\n    margin-bottom: 1rem;\\n  }\\n\\n  .error-message p {\\n    margin: 0;\\n    color: #dc2626;\\n  }\\n\\n  .form-actions {\\n    display: flex;\\n    gap: 1rem;\\n    justify-content: flex-end;\\n    margin-top: 2rem;\\n  }\\n\\n  .form-help {\\n    margin-top: 2rem;\\n    padding-top: 2rem;\\n    border-top: 1px solid #dee2e6;\\n  }\\n\\n  .form-help h3 {\\n    color: #ff3e00;\\n    font-size: 1.1rem;\\n    margin: 0 0 1rem 0;\\n  }\\n\\n  .form-help ul {\\n    margin: 0;\\n    padding-left: 1.5rem;\\n  }\\n\\n  .form-help li {\\n    margin-bottom: 0.5rem;\\n    color: #555;\\n  }\\n\\n  @media (max-width: 768px) {\\n\\n    .form-container {\\n      padding: 1.5rem;\\n    }\\n\\n    .form-actions {\\n      flex-direction: column;\\n    }\\n\\n    .form-actions button {\\n      width: 100%;\\n    }\\n\\n    .brewer-info {\\n      flex-direction: column;\\n      align-items: flex-start;\\n      gap: 0.5rem;\\n    }\\n  }\\n\\n  @media (max-width: 480px) {\\n    .form-container {\\n      padding: 1rem;\\n    }\\n\\n    .error-container {\\n      padding: 2rem 1rem;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let allowedCategoryIds;
  let availableMainCategories;
  let selectedCompetitionObj;
  let canSubmit;
  let $error, $$unsubscribe_error;
  let $isLoading, $$unsubscribe_isLoading;
  let $isLoaded, $$unsubscribe_isLoaded;
  let $mainCategories, $$unsubscribe_mainCategories;
  let $activeCompetitions, $$unsubscribe_activeCompetitions;
  let $competitions, $$unsubscribe_competitions;
  let $bjcpCategories, $$unsubscribe_bjcpCategories;
  let $userProfile, $$unsubscribe_userProfile;
  let $categoriesByNumber, $$unsubscribe_categoriesByNumber;
  $$unsubscribe_error = subscribe(error, (value) => $error = value);
  $$unsubscribe_isLoading = subscribe(isLoading, (value) => $isLoading = value);
  $$unsubscribe_isLoaded = subscribe(isLoaded, (value) => $isLoaded = value);
  $$unsubscribe_mainCategories = subscribe(mainCategories, (value) => $mainCategories = value);
  $$unsubscribe_activeCompetitions = subscribe(activeCompetitions, (value) => $activeCompetitions = value);
  $$unsubscribe_competitions = subscribe(competitions, (value) => $competitions = value);
  $$unsubscribe_bjcpCategories = subscribe(bjcpCategories, (value) => $bjcpCategories = value);
  $$unsubscribe_userProfile = subscribe(userProfile, (value) => $userProfile = value);
  $$unsubscribe_categoriesByNumber = subscribe(categoriesByNumber, (value) => $categoriesByNumber = value);
  let selectedCompetition = "";
  let beerName = "";
  let beerNotes = "";
  let submitSuccess = false;
  $$result.css.add(css);
  selectedCompetitionObj = null;
  allowedCategoryIds = selectedCompetitionObj?.category_system === "custom" ? selectedCompetitionObj.category_restrictions || [] : null;
  availableMainCategories = allowedCategoryIds ? $mainCategories.filter((category) => {
    const categorySubcategories = $categoriesByNumber[category.number]?.subcategories || [];
    return categorySubcategories.some((sub) => allowedCategoryIds.includes(sub.id));
  }) : $mainCategories;
  canSubmit = selectedCompetition;
  {
    console.log("üìä Store Debug:", {
      bjcpCategories: $bjcpCategories.length,
      competitions: $competitions.length,
      activeCompetitions: $activeCompetitions.length,
      mainCategories: $mainCategories.length,
      isLoaded: $isLoaded,
      isLoading: $isLoading,
      error: $error
    });
  }
  $$unsubscribe_error();
  $$unsubscribe_isLoading();
  $$unsubscribe_isLoaded();
  $$unsubscribe_mainCategories();
  $$unsubscribe_activeCompetitions();
  $$unsubscribe_competitions();
  $$unsubscribe_bjcpCategories();
  $$unsubscribe_userProfile();
  $$unsubscribe_categoriesByNumber();
  return `${$$result.head += `<!-- HEAD_svelte-1m0qu2i_START -->${$$result.title = `<title>Submit Competition Entry | JAX Members Portal</title>`, ""}<!-- HEAD_svelte-1m0qu2i_END -->`, ""} ${validate_component(Container, "Container").$$render($$result, { size: "md" }, {}, {
    default: () => {
      return `${validate_component(Hero, "Hero").$$render(
        $$result,
        {
          title: "SUBMIT COMPETITION ENTRY",
          subtitle: "Enter your beer into a JAX club competition",
          icon: "üèÜ",
          center: true
        },
        {},
        {}
      )}  ${$isLoading && !$isLoaded ? `${validate_component(LoadingSpinner, "LoadingSpinner").$$render($$result, { message: "Loading competition data..." }, {}, {})} ` : `${$error ? `<div class="error-container svelte-ncefe"><h2 data-svelte-h="svelte-s8iwac">‚ùå Error Loading Data</h2> <p>${escape($error)}</p> ${validate_component(Button, "Button").$$render($$result, { variant: "primary" }, {}, {
        default: () => {
          return `üîÑ Retry`;
        }
      })}</div> ` : `${$isLoaded && $activeCompetitions.length === 0 ? `${validate_component(EmptyState, "EmptyState").$$render(
        $$result,
        {
          icon: "üìÖ",
          title: "No Active Competitions",
          message: "There are currently no competitions accepting entries. Check back later or contact an officer for more information."
        },
        {},
        {
          default: () => {
            return `${validate_component(Button, "Button").$$render($$result, { variant: "primary" }, {}, {
              default: () => {
                return `üìã View All Competitions`;
              }
            })}`;
          }
        }
      )} ` : `${$isLoaded ? `<div class="form-container svelte-ncefe"> ${``}  <form class="entry-form svelte-ncefe"> <div class="form-group svelte-ncefe"><label for="competition" class="svelte-ncefe" data-svelte-h="svelte-16txpgy">Competition *</label> <select id="competition" ${""} required class="svelte-ncefe"><option value="" data-svelte-h="svelte-iqpod6">Select a competition...</option>${each($activeCompetitions, (competition) => {
        return `<option${add_attribute("value", competition.id, 0)}>${escape(competition.name)} ${competition.days_until_deadline !== void 0 ? `(${escape(competition.days_until_deadline)} days left)` : ``} </option>`;
      })}</select> ${selectedCompetitionObj ? `<div class="competition-info svelte-ncefe"><p class="svelte-ncefe"><strong data-svelte-h="svelte-itlo74">Entry Deadline:</strong> ${escape(formatDeadline(selectedCompetitionObj))}</p> ${selectedCompetitionObj.description ? `<p class="svelte-ncefe"><strong data-svelte-h="svelte-1scoy10">Description:</strong> ${escape(selectedCompetitionObj.description)}</p>` : ``} ${selectedCompetitionObj.category_system === "custom" ? `<div class="custom-categories-notice svelte-ncefe" data-svelte-h="svelte-10b7ryr"><p class="svelte-ncefe"><strong>üìã Custom Categories:</strong> This competition only accepts specific BJCP categories. Only allowed categories will be shown in the selection below.</p></div>` : ``}</div>` : ``}</div>  <div class="form-group svelte-ncefe"><label for="main-category" class="svelte-ncefe" data-svelte-h="svelte-17h6qfx">BJCP Category *</label> <select id="main-category" ${"disabled"} required class="svelte-ncefe"><option value="" data-svelte-h="svelte-1u12wbr">Select main category...</option>${each(availableMainCategories, (category) => {
        return `<option${add_attribute("value", category.number, 0)}>${escape(category.number)} - ${escape(category.name)} </option>`;
      })}</select></div>  ${``}  <div class="form-group svelte-ncefe"><label for="beer-name" class="svelte-ncefe" data-svelte-h="svelte-bo7a13">Beer Name *</label> <input type="text" id="beer-name" placeholder="Enter your beer name..." ${""} maxlength="100" required class="svelte-ncefe"${add_attribute("value", beerName, 0)}></div>  <div class="form-group svelte-ncefe"><label for="beer-notes" class="svelte-ncefe" data-svelte-h="svelte-sobiei">Beer Notes (Optional)</label> <textarea id="beer-notes" placeholder="Special ingredients, techniques, or notes for judges..." ${""} rows="4" maxlength="500" class="svelte-ncefe">${escape("")}</textarea> <div class="character-count svelte-ncefe">${escape(beerNotes.length)}/500 characters</div></div>  <div class="form-group svelte-ncefe"><label class="svelte-ncefe" data-svelte-h="svelte-13vcfxt">Brewer</label> <div class="brewer-info svelte-ncefe"><span class="brewer-name svelte-ncefe">${escape($userProfile?.name || $userProfile?.email)}</span> <span class="auto-filled svelte-ncefe" data-svelte-h="svelte-1rfbwqt">(automatically filled)</span></div></div>  ${``}  <div class="form-actions svelte-ncefe">${validate_component(Button, "Button").$$render(
        $$result,
        {
          type: "button",
          variant: "secondary",
          disabled: submitSuccess
        },
        {},
        {
          default: () => {
            return `üîÑ Reset Form`;
          }
        }
      )} ${validate_component(Button, "Button").$$render(
        $$result,
        {
          type: "submit",
          variant: "primary",
          disabled: !canSubmit || submitSuccess
        },
        {},
        {
          default: () => {
            return `${`${`üç∫ Submit Entry`}`}`;
          }
        }
      )}</div>  <div class="form-help svelte-ncefe" data-svelte-h="svelte-17973si"><h3 class="svelte-ncefe">üìù Entry Guidelines</h3> <ul class="svelte-ncefe"><li class="svelte-ncefe">Entries must be submitted before the deadline</li> <li class="svelte-ncefe">One entry per category per brewer per competition</li> <li class="svelte-ncefe">Entry fees may apply (check with officers)</li> <li class="svelte-ncefe">You&#39;ll receive a random entry number for anonymity</li> <li class="svelte-ncefe">You can edit entries until the deadline</li></ul></div></form></div>` : ``}`}`}`}`;
    }
  })}`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BCZnfgYT.js.map
