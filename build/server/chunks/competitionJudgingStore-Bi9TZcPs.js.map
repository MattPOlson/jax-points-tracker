{"version":3,"file":"competitionJudgingStore-Bi9TZcPs.js","sources":["../../../.svelte-kit/adapter-node/chunks/competitionJudgingStore.js"],"sourcesContent":["import { d as derived, w as writable } from \"./index.js\";\nimport { s as supabase } from \"./supabaseClient.js\";\nimport { j as get_store_value } from \"./ssr.js\";\nconst judgeStore = writable({\n  judges: [],\n  loading: false,\n  error: null,\n  lastUpdate: null\n});\nconst judgingSessionStore = writable({\n  activeCompetition: null,\n  assignedEntries: [],\n  currentEntry: null,\n  judgeId: null,\n  sessionActive: false,\n  loading: false,\n  error: null\n});\nconst JUDGE_ROLES = {\n  BJCP_JUDGE: \"bjcp_judge\",\n  CLUB_JUDGE: \"club_judge\",\n  GUEST_JUDGE: \"guest_judge\"\n};\nclass CompetitionJudgingStore {\n  // Load judges for a competition\n  async loadJudges(competitionId) {\n    judgeStore.update((store) => ({ ...store, loading: true, error: null }));\n    try {\n      const { data, error } = await supabase.from(\"competition_judges\").select(`\n          *,\n          judge:members!competition_judges_judge_id_fkey(id, name, email, phone),\n          competition:competitions(id, name, judging_date)\n        `).eq(\"competition_id\", competitionId).order(\"assigned_at\", { ascending: false });\n      if (error) throw error;\n      judgeStore.update((store) => ({\n        ...store,\n        judges: data || [],\n        loading: false,\n        lastUpdate: Date.now()\n      }));\n      return data;\n    } catch (err) {\n      console.error(\"Error loading judges:\", err);\n      judgeStore.update((store) => ({\n        ...store,\n        loading: false,\n        error: err.message\n      }));\n      throw err;\n    }\n  }\n  // Assign a judge to a competition\n  async assignJudge(competitionId, judgeData) {\n    try {\n      const assignmentData = {\n        competition_id: competitionId,\n        judge_id: judgeData.judge_id,\n        judge_role: judgeData.judge_role || JUDGE_ROLES.CLUB_JUDGE,\n        assignment_notes: judgeData.assignment_notes || null,\n        assigned_at: (/* @__PURE__ */ new Date()).toISOString(),\n        assigned_by: judgeData.assigned_by,\n        active: true\n      };\n      const { data, error } = await supabase.from(\"competition_judges\").insert([assignmentData]).select(`\n          *,\n          judge:members!competition_judges_judge_id_fkey(id, name, email, phone),\n          competition:competitions(id, name, judging_date)\n        `).single();\n      if (error) throw error;\n      judgeStore.update((store) => ({\n        ...store,\n        judges: [...store.judges, data]\n      }));\n      return data;\n    } catch (err) {\n      console.error(\"Error assigning judge:\", err);\n      throw err;\n    }\n  }\n  // Remove judge assignment\n  async removeJudge(assignmentId) {\n    try {\n      const { error } = await supabase.from(\"competition_judges\").update({ active: false, removed_at: (/* @__PURE__ */ new Date()).toISOString() }).eq(\"id\", assignmentId);\n      if (error) throw error;\n      judgeStore.update((store) => ({\n        ...store,\n        judges: store.judges.filter((j) => j.id !== assignmentId)\n      }));\n    } catch (err) {\n      console.error(\"Error removing judge:\", err);\n      throw err;\n    }\n  }\n  // Start judging session for a judge\n  async startJudgingSession(competitionId, judgeId) {\n    this.endSession();\n    judgingSessionStore.update((store) => ({ ...store, loading: true, error: null }));\n    try {\n      const { data: assignment, error: assignmentError } = await supabase.from(\"competition_judges\").select(\"*\").eq(\"competition_id\", competitionId).eq(\"judge_id\", judgeId).eq(\"active\", true).single();\n      if (assignmentError || !assignment) {\n        throw new Error(\"Judge not assigned to this competition\");\n      }\n      const { data: competition, error: compError } = await supabase.from(\"competitions\").select(\"*\").eq(\"id\", competitionId).single();\n      if (compError) throw compError;\n      const now = /* @__PURE__ */ new Date();\n      const deadline = new Date(competition.entry_deadline);\n      const judgingDate = new Date(competition.judging_date);\n      if (now < deadline) {\n        throw new Error(\"Competition entry deadline has not passed yet\");\n      }\n      const { data: entries, error: entriesError } = await supabase.from(\"competition_entries\").select(`\n          *,\n          category:bjcp_categories(id, category_name, category_number, subcategory_letter, subcategory_name)\n        `).eq(\"competition_id\", competitionId).order(\"bjcp_category_id\", { ascending: true }).order(\"entry_number\", { ascending: true });\n      if (entriesError) throw entriesError;\n      const { data: existingJudging, error: judgingError } = await supabase.from(\"competition_judging_sessions\").select(\"*\").eq(\"competition_id\", competitionId).eq(\"judge_id\", judgeId);\n      if (judgingError) {\n        console.warn(\"Error loading existing judging sessions:\", judgingError);\n      }\n      const entriesWithJudging = entries.map((entry) => {\n        const judgingSession = existingJudging?.find((j) => j.entry_id === entry.id);\n        const hasValidScores = judgingSession && (judgingSession.aroma_score !== null || judgingSession.appearance_score !== null || judgingSession.flavor_score !== null || judgingSession.mouthfeel_score !== null || judgingSession.overall_score !== null);\n        return {\n          ...entry,\n          judging: judgingSession || null,\n          hasBeenJudged: !!hasValidScores\n        };\n      });\n      judgingSessionStore.update((store) => ({\n        ...store,\n        activeCompetition: competition,\n        assignedEntries: entriesWithJudging,\n        judgeId,\n        sessionActive: true,\n        loading: false,\n        currentEntry: entriesWithJudging[0] || null\n      }));\n      return {\n        competition,\n        entries: entriesWithJudging,\n        assignment\n      };\n    } catch (err) {\n      console.error(\"Error starting judging session:\", err);\n      judgingSessionStore.update((store) => ({\n        ...store,\n        loading: false,\n        error: err.message,\n        sessionActive: false\n      }));\n      throw err;\n    }\n  }\n  // Save judging results for an entry\n  async saveJudgingResults(entryId, judgingData) {\n    try {\n      const sessionStore = get_store_value(judgingSessionStore);\n      const judgingSession = {\n        competition_id: sessionStore.activeCompetition.id,\n        entry_id: entryId,\n        judge_id: sessionStore.judgeId,\n        aroma_score: judgingData.aroma_score || null,\n        appearance_score: judgingData.appearance_score || null,\n        flavor_score: judgingData.flavor_score || null,\n        mouthfeel_score: judgingData.mouthfeel_score || null,\n        overall_score: judgingData.overall_score || null,\n        // total_score is auto-calculated by database as a generated column\n        judge_notes: judgingData.judge_notes || null,\n        private_notes: judgingData.private_notes || null,\n        scoresheet_data: judgingData.scoresheet_data || null,\n        // Store full scoresheet data\n        judged_at: (/* @__PURE__ */ new Date()).toISOString(),\n        updated_at: (/* @__PURE__ */ new Date()).toISOString()\n      };\n      const { data: existing } = await supabase.from(\"competition_judging_sessions\").select(\"id\").eq(\"competition_id\", sessionStore.activeCompetition.id).eq(\"entry_id\", entryId).eq(\"judge_id\", sessionStore.judgeId).single();\n      let result;\n      if (existing) {\n        result = await supabase.from(\"competition_judging_sessions\").update(judgingSession).eq(\"id\", existing.id).select().single();\n      } else {\n        result = await supabase.from(\"competition_judging_sessions\").insert([judgingSession]).select().single();\n      }\n      if (result.error) throw result.error;\n      judgingSessionStore.update((store) => {\n        const updatedEntries = store.assignedEntries.map((entry) => {\n          if (entry.id === entryId) {\n            const hasValidScores = result.data && (result.data.aroma_score !== null || result.data.appearance_score !== null || result.data.flavor_score !== null || result.data.mouthfeel_score !== null || result.data.overall_score !== null);\n            return {\n              ...entry,\n              judging: result.data,\n              hasBeenJudged: !!hasValidScores\n            };\n          }\n          return entry;\n        });\n        let updatedCurrentEntry = store.currentEntry;\n        if (store.currentEntry && store.currentEntry.id === entryId) {\n          updatedCurrentEntry = updatedEntries.find((e) => e.id === entryId);\n        }\n        return {\n          ...store,\n          assignedEntries: updatedEntries,\n          currentEntry: updatedCurrentEntry\n        };\n      });\n      return result.data;\n    } catch (err) {\n      console.error(\"Error saving judging results:\", err);\n      throw err;\n    }\n  }\n  // Get judging progress for a judge\n  getJudgingProgress() {\n    const sessionStore = get_store_value(judgingSessionStore);\n    if (!sessionStore.assignedEntries.length) {\n      return { total: 0, completed: 0, percentage: 0 };\n    }\n    const total = sessionStore.assignedEntries.length;\n    const completed = sessionStore.assignedEntries.filter((e) => e.hasBeenJudged).length;\n    const percentage = Math.round(completed / total * 100);\n    return { total, completed, percentage };\n  }\n  // Navigate to next/previous entry\n  setCurrentEntry(entryIndex) {\n    judgingSessionStore.update((store) => {\n      const entry = store.assignedEntries[entryIndex] || null;\n      return {\n        ...store,\n        currentEntry: entry\n      };\n    });\n  }\n  // End judging session\n  endSession() {\n    judgingSessionStore.update((store) => ({\n      activeCompetition: null,\n      assignedEntries: [],\n      currentEntry: null,\n      judgeId: null,\n      sessionActive: false,\n      loading: false,\n      error: null\n    }));\n  }\n  // Clear errors\n  clearError() {\n    judgeStore.update((store) => ({ ...store, error: null }));\n    judgingSessionStore.update((store) => ({ ...store, error: null }));\n  }\n}\nconst competitionJudgingStore = new CompetitionJudgingStore();\nconst judgeList = derived(judgeStore, ($store) => $store.judges);\nconst isLoadingJudges = derived(judgeStore, ($store) => $store.loading);\nconst judgeError = derived(judgeStore, ($store) => $store.error);\nconst activeSession = derived(judgingSessionStore, ($store) => $store);\nconst isJudging = derived(judgingSessionStore, ($store) => $store.sessionActive);\nconst currentEntry = derived(judgingSessionStore, ($store) => $store.currentEntry);\nexport {\n  activeSession as a,\n  competitionJudgingStore as b,\n  currentEntry as c,\n  isLoadingJudges as d,\n  judgeError as e,\n  isJudging as i,\n  judgeList as j\n};\n"],"names":[],"mappings":"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"}