{"version":3,"file":"_page.svelte-CS5Lhdg4.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/submit/_page.svelte.js"],"sourcesContent":["import { c as create_ssr_component, h as subscribe, o as onDestroy, v as validate_component, i as each, g as add_attribute, e as escape } from \"../../../chunks/ssr.js\";\nimport \"../../../chunks/supabaseClient.js\";\nimport \"../../../chunks/Toaster.svelte_svelte_type_style_lang.js\";\nimport { i as isLoading, a as isLoaded, c as categories, b as clubEventTypes, f as floridaCircuitEvents, m as monthlyEvents, p as placementOptions } from \"../../../chunks/categoryStore.js\";\nimport { i as isLoadingProfile, u as userProfile } from \"../../../chunks/userProfile.js\";\nimport \"../../../chunks/client.js\";\nimport { B as Button } from \"../../../chunks/Button.js\";\nimport { C as Container, H as Hero } from \"../../../chunks/Modal.svelte_svelte_type_style_lang.js\";\nimport { L as LoadingSpinner, E as EmptyState } from \"../../../chunks/EmptyState.js\";\nconst css = {\n  code: 'form.svelte-1aouwrr.svelte-1aouwrr{display:flex;flex-direction:column;gap:1rem}label.svelte-1aouwrr.svelte-1aouwrr{display:flex;flex-direction:column;font-weight:500;color:#333;text-align:left}select.svelte-1aouwrr.svelte-1aouwrr,input[type=\"date\"].svelte-1aouwrr.svelte-1aouwrr{padding:0.5rem;margin-top:0.25rem;font-size:1rem;border:1px solid #ccc;border-radius:4px;width:100%;box-sizing:border-box;transition:border-color 0.2s}select.svelte-1aouwrr.svelte-1aouwrr:focus,input[type=\"date\"].svelte-1aouwrr.svelte-1aouwrr:focus{outline:none;border-color:#2563eb}.points-display.svelte-1aouwrr.svelte-1aouwrr{background-color:#f8fafc;padding:1rem;border-radius:6px;border:1px solid #e2e8f0}.points-display.svelte-1aouwrr p.svelte-1aouwrr{margin:0;color:#1e293b}textarea.svelte-1aouwrr.svelte-1aouwrr{padding:0.5rem;margin-top:0.25rem;font-size:1rem;border:1px solid #ccc;border-radius:4px;width:100%;box-sizing:border-box;transition:border-color 0.2s;resize:vertical;min-height:80px}textarea.svelte-1aouwrr.svelte-1aouwrr:focus{outline:none;border-color:#2563eb}.placement-question.svelte-1aouwrr.svelte-1aouwrr{display:flex;flex-direction:column;gap:0.5rem}.question-label.svelte-1aouwrr.svelte-1aouwrr{font-weight:500;color:#333;margin-bottom:0.5rem}.radio-group.svelte-1aouwrr.svelte-1aouwrr{display:flex;flex-direction:column;gap:0.75rem}.radio-option.svelte-1aouwrr.svelte-1aouwrr{display:flex;align-items:center;gap:0.75rem;padding:0.75rem 1rem;border:2px solid #e5e7eb;border-radius:6px;cursor:pointer;transition:all 0.2s ease;background:white}.radio-option.svelte-1aouwrr.svelte-1aouwrr:hover{border-color:#ff3e00;background-color:#fef2f2}.radio-option.svelte-1aouwrr.svelte-1aouwrr:has(.radio-input:checked){border-color:#ff3e00;background-color:#fef2f2}.radio-input.svelte-1aouwrr.svelte-1aouwrr{width:20px;height:20px;accent-color:#ff3e00;cursor:pointer}.radio-text.svelte-1aouwrr.svelte-1aouwrr{font-weight:500;color:#333;cursor:pointer;flex-grow:1}@media(max-width: 480px){.radio-option.svelte-1aouwrr.svelte-1aouwrr{min-height:44px;padding:1rem 0.75rem}.radio-input.svelte-1aouwrr.svelte-1aouwrr{min-width:44px;min-height:44px}}.description-display.svelte-1aouwrr.svelte-1aouwrr{display:flex;flex-direction:column;gap:0.5rem}.form-label.svelte-1aouwrr.svelte-1aouwrr{font-weight:500;color:#333}.read-only-field.svelte-1aouwrr.svelte-1aouwrr{padding:0.5rem;margin-top:0.25rem;font-size:1rem;border:1px solid #d1d5db;border-radius:4px;width:100%;box-sizing:border-box;background-color:#f8fafc;color:#6b7280;font-style:italic;cursor:not-allowed}',\n  map: '{\"version\":3,\"file\":\"+page.svelte\",\"sources\":[\"+page.svelte\"],\"sourcesContent\":[\"<script>\\\\n  import { onMount, onDestroy } from \\\\\"svelte\\\\\";\\\\n  import { supabase } from \\\\\"$lib/supabaseClient\\\\\";\\\\n  import toast from \\\\\"svelte-french-toast\\\\\";\\\\n  import {\\\\n    categories,\\\\n    placementOptions,\\\\n    monthlyEvents,\\\\n    floridaCircuitEvents,\\\\n    isLoaded,\\\\n    isLoading,\\\\n    loadCategoryData,\\\\n    clubEventTypes,\\\\n  } from \\\\\"$lib/stores/categoryStore.js\\\\\";\\\\n  import {\\\\n    userProfile,\\\\n    loadUserProfile,\\\\n    isLoadingProfile,\\\\n  } from \\\\\"$lib/stores/userProfile\\\\\";\\\\n  import { get } from \\\\\"svelte/store\\\\\";\\\\n  import { page } from \\\\\"$app/stores\\\\\";\\\\n  import { Hero, Container, LoadingSpinner, EmptyState, Button, FormSelect, FormTextarea } from \\'$lib/components/ui\\';\\\\n\\\\n  // Form state\\\\n  let selectedCategory = \\\\\"\\\\\";\\\\n  let selectedEvent = \\\\\"\\\\\";\\\\n  let selectedFloridaEvent = \\\\\"\\\\\";\\\\n  let selectedPlacement = \\\\\"\\\\\";\\\\n  let eventDate = \\\\\"\\\\\";\\\\n  let isSubmitting = false;\\\\n  let customDescription = \\\\\"\\\\\";\\\\n  let selectedClubEvent = \\\\\"\\\\\";\\\\n  \\\\n  // NEW: Florida Circuit enhancement variables\\\\n  let didPlaceInEvent = null; // \\\\\"Yes\\\\\" | \\\\\"No\\\\\" | null\\\\n  let pointsBreakdown = \\\\\"\\\\\";\\\\n  let points = null; // Add missing points variable\\\\n\\\\n  // Cleanup functions\\\\n  let cleanupFunctions = [];\\\\n\\\\n  // Derived values\\\\n  $: user = $userProfile;\\\\n  \\\\n  // Enhanced points calculation with Florida Circuit logic\\\\n  $: if (selectedCategory === \\\\\"Florida Circuit\\\\\" && selectedFloridaEvent) {\\\\n    if (didPlaceInEvent === \\\\\"No\\\\\") {\\\\n      points = 1; // Participation only\\\\n      pointsBreakdown = \\\\\"1 point (Participation)\\\\\";\\\\n    } else if (didPlaceInEvent === \\\\\"Yes\\\\\" && selectedPlacement) {\\\\n      const placementPoints = $placementOptions.find(p => p.value === selectedPlacement)?.points ?? 0;\\\\n      points = 1 + placementPoints;\\\\n      pointsBreakdown = `1 (Participation) + ${placementPoints} (${selectedPlacement}) = ${points} points`;\\\\n    } else {\\\\n      points = null;\\\\n      pointsBreakdown = \\\\\"\\\\\";\\\\n    }\\\\n  } else {\\\\n    // Existing logic for other categories\\\\n    points = selectedPlacement\\\\n      ? ($placementOptions.find((p) => p.value === selectedPlacement)?.points ?? null)\\\\n      : selectedCategory && $isLoaded\\\\n        ? ($placementOptions.find(\\\\n            (p) => p.category === selectedCategory && (p.value === \\\\\"EMPTY\\\\\" || p.value === \\\\\"\\\\\"),\\\\n          )?.points ?? null)\\\\n        : null;\\\\n    \\\\n    pointsBreakdown = points ? `${points} points` : \\\\\"\\\\\";\\\\n  }\\\\n\\\\n  // Filter data based on category selection\\\\n  $: filteredPlacements =\\\\n    selectedCategory && $isLoaded\\\\n      ? $placementOptions.filter((p) => p.category === selectedCategory)\\\\n      : [];\\\\n\\\\n  $: filteredMonthlyEvents =\\\\n    selectedCategory === \\\\\"Monthly Challenge\\\\\" && $isLoaded ? $monthlyEvents : [];\\\\n\\\\n  $: filteredFloridaEvents =\\\\n    selectedCategory === \\\\\"Florida Circuit\\\\\" && $isLoaded\\\\n      ? $floridaCircuitEvents\\\\n      : [];\\\\n\\\\n  $: filteredClubEvents =\\\\n    selectedCategory === \\\\\"Jax Club Event\\\\\" && $isLoaded ? $clubEventTypes : [];\\\\n\\\\n  // Check if category needs placement selection\\\\n  $: needsPlacement =\\\\n    selectedCategory && $isLoaded\\\\n      ? $categories.find((c) => c.name === selectedCategory)?.placement === true\\\\n      : false;\\\\n\\\\n  // Check if category needs custom description\\\\n  $: needsDescription =\\\\n    selectedCategory && $isLoaded\\\\n      ? $categories.find((c) => c.name === selectedCategory)?.placement ===\\\\n          false && selectedCategory !== \\\\\"Jax Club Event\\\\\" && selectedCategory !== \\\\\"Volunteer\\\\\"\\\\n      : false;\\\\n\\\\n  // NEW: Show placement dropdown for Florida Circuit only when user placed\\\\n  $: showPlacementDropdown = selectedCategory === \\\\\"Florida Circuit\\\\\" && \\\\n                            selectedFloridaEvent && \\\\n                            didPlaceInEvent === \\\\\"Yes\\\\\";\\\\n\\\\n  // Reset dependent fields when category changes\\\\n  $: if (selectedCategory) {\\\\n    selectedEvent = \\\\\"\\\\\";\\\\n    selectedFloridaEvent = \\\\\"\\\\\";\\\\n    selectedClubEvent = \\\\\"\\\\\";\\\\n    selectedPlacement = \\\\\"\\\\\";\\\\n    eventDate = \\\\\"\\\\\";\\\\n    didPlaceInEvent = null; // Reset participation choice\\\\n  }\\\\n\\\\n  // Reset placement when event changes\\\\n  $: if (selectedEvent || selectedFloridaEvent) {\\\\n    selectedPlacement = \\\\\"\\\\\";\\\\n    eventDate = \\\\\"\\\\\";\\\\n    if (selectedFloridaEvent && selectedCategory === \\\\\"Florida Circuit\\\\\") {\\\\n      didPlaceInEvent = null; // Reset participation choice when changing Florida Circuit events\\\\n    }\\\\n  }\\\\n\\\\n  // Reset placement when switching to participation only\\\\n  $: if (didPlaceInEvent === \\\\\"No\\\\\") {\\\\n    selectedPlacement = null;\\\\n  }\\\\n\\\\n  // Data loading function\\\\n  async function loadData(force = false) {\\\\n    console.log(\\\\n      \\\\\"🔄 Loading data, force:\\\\\",\\\\n      force,\\\\n      \\\\\"isLoaded:\\\\\",\\\\n      $isLoaded,\\\\n      \\\\\"isLoading:\\\\\",\\\\n      $isLoading,\\\\n    );\\\\n\\\\n    try {\\\\n      await Promise.all([loadCategoryData(force), loadUserProfile(force)]);\\\\n\\\\n      console.log(\\\\\"✅ All data loaded successfully\\\\\");\\\\n    } catch (error) {\\\\n      console.error(\\\\\"❌ Error loading data:\\\\\", error);\\\\n      toast.error(\\\\\"Failed to load data. Please try again.\\\\\");\\\\n    }\\\\n  }\\\\n\\\\n  // Removed tab focus handler - causes issues with Supabase tab switching\\\\n  function setupEventHandlers() {\\\\n    // Tab visibility handling removed for better Supabase compatibility\\\\n    return () => {\\\\n      // No cleanup needed now\\\\n    };\\\\n  }\\\\n\\\\n  // Enhanced form validation with Florida Circuit logic\\\\n  function validateForm() {\\\\n    const errors = [];\\\\n\\\\n    if (!selectedCategory) errors.push(\\\\\"Please select a category\\\\\");\\\\n    if (!eventDate) errors.push(\\\\\"Please select an event date\\\\\");\\\\n    \\\\n    // Florida Circuit specific validation\\\\n    if (selectedCategory === \\\\\"Florida Circuit\\\\\") {\\\\n      if (!selectedFloridaEvent) errors.push(\\\\\"Please select a Florida Circuit event\\\\\");\\\\n      if (didPlaceInEvent === null) errors.push(\\\\\"Please indicate if you placed in this event\\\\\");\\\\n      if (didPlaceInEvent === \\\\\"Yes\\\\\" && !selectedPlacement) errors.push(\\\\\"Please select your placement\\\\\");\\\\n    } else {\\\\n      // Existing validation for other categories\\\\n      if (needsPlacement && !selectedPlacement) {\\\\n        errors.push(\\\\\"Please select a placement\\\\\");\\\\n      }\\\\n    }\\\\n\\\\n    if (selectedCategory === \\\\\"Monthly Challenge\\\\\" && !selectedEvent) {\\\\n      errors.push(\\\\\"Please select a monthly event\\\\\");\\\\n    }\\\\n\\\\n    if (selectedCategory === \\\\\"Volunteer\\\\\" && !selectedFloridaEvent) {\\\\n      errors.push(\\\\\"Please select a Florida Circuit event to volunteer at\\\\\");\\\\n    }\\\\n\\\\n    if (!user?.id) {\\\\n      errors.push(\\\\\"User profile not loaded. Please wait a moment.\\\\\");\\\\n    }\\\\n\\\\n    if (needsDescription && !customDescription.trim()) {\\\\n      errors.push(`Please provide a description for ${selectedCategory}`);\\\\n    }\\\\n\\\\n    if (selectedCategory === \\\\\"Jax Club Event\\\\\" && !selectedClubEvent) {\\\\n      errors.push(\\\\\"Please select a club event\\\\\");\\\\n    }\\\\n\\\\n    return errors;\\\\n  }\\\\n\\\\n  // Reset form\\\\n  function resetForm() {\\\\n    selectedCategory = \\\\\"\\\\\";\\\\n    selectedEvent = \\\\\"\\\\\";\\\\n    selectedFloridaEvent = \\\\\"\\\\\";\\\\n    selectedPlacement = \\\\\"\\\\\";\\\\n    eventDate = \\\\\"\\\\\";\\\\n    customDescription = \\\\\"\\\\\";\\\\n    selectedClubEvent = \\\\\"\\\\\";\\\\n    didPlaceInEvent = null; // Reset participation choice\\\\n  }\\\\n\\\\n  // Enhanced description building\\\\n  function getSubmissionDescription() {\\\\n    if (selectedCategory === \\\\\"Florida Circuit\\\\\") {\\\\n      const baseDescription = selectedFloridaEvent;\\\\n      const placementText = didPlaceInEvent === \\\\\"Yes\\\\\" && selectedPlacement \\\\n        ? ` - ${selectedPlacement}` \\\\n        : didPlaceInEvent === \\\\\"No\\\\\" \\\\n          ? \\\\\" - Participation Only\\\\\"\\\\n          : \\\\\"\\\\\";\\\\n      return baseDescription + placementText;\\\\n    } else if (selectedCategory === \\\\\"Monthly Challenge\\\\\") {\\\\n      return selectedEvent;\\\\n    } else if (selectedCategory === \\\\\"Volunteer\\\\\") {\\\\n      return `Volunteered at ${selectedFloridaEvent}`;\\\\n    } else if (selectedCategory === \\\\\"Jax Club Event\\\\\") {\\\\n      return selectedClubEvent;\\\\n    } else if (\\\\n      selectedCategory === \\\\\"Brew Pick of Destiny\\\\\" ||\\\\n      selectedCategory === \\\\\"Officer Position\\\\\" ||\\\\n      selectedCategory === \\\\\"JAX Presentation\\\\\" ||\\\\n      selectedCategory === \\\\\"Host Group Brew\\\\\"\\\\n    ) {\\\\n      return customDescription.trim();\\\\n    }\\\\n    return \\\\\"\\\\\";\\\\n  }\\\\n\\\\n  // Submit handler\\\\n  async function handleSubmit() {\\\\n    if (isSubmitting) return;\\\\n\\\\n    const errors = validateForm();\\\\n    if (errors.length > 0) {\\\\n      toast.error(errors[0]);\\\\n      return;\\\\n    }\\\\n\\\\n    isSubmitting = true;\\\\n\\\\n    try {\\\\n      const description = getSubmissionDescription();\\\\n\\\\n      const payload = {\\\\n        member_id: user.id,\\\\n        category: selectedCategory,\\\\n        description,\\\\n        points,\\\\n        event_date: eventDate,\\\\n        submitted_at: new Date().toISOString(),\\\\n      };\\\\n\\\\n      const { error } = await supabase\\\\n        .from(\\\\\"point_submissions\\\\\")\\\\n        .insert([payload]);\\\\n\\\\n      if (error) {\\\\n        console.error(\\\\\"Submission error:\\\\\", error);\\\\n        toast.error(`Submission failed: ${error.message}`);\\\\n      } else {\\\\n        toast.success(\\\\\"Points submitted successfully!\\\\\");\\\\n        resetForm();\\\\n      }\\\\n    } catch (error) {\\\\n      console.error(\\\\\"Unexpected error:\\\\\", error);\\\\n      toast.error(\\\\\"An unexpected error occurred. Please try again.\\\\\");\\\\n    } finally {\\\\n      isSubmitting = false;\\\\n    }\\\\n  }\\\\n\\\\n  // Enhanced form validation for submission\\\\n  $: canSubmit =\\\\n    selectedCategory &&\\\\n    eventDate &&\\\\n    user?.id &&\\\\n    !isSubmitting &&\\\\n    !$isLoading &&\\\\n    !$isLoadingProfile &&\\\\n    // Florida Circuit specific validation\\\\n    (selectedCategory !== \\\\\"Florida Circuit\\\\\" || \\\\n     (selectedFloridaEvent && didPlaceInEvent && \\\\n      (didPlaceInEvent === \\\\\"No\\\\\" || selectedPlacement))) &&\\\\n    // Existing validations for other categories\\\\n    ((selectedCategory === \\\\\"Monthly Challenge\\\\\" &&\\\\n      selectedEvent &&\\\\n      selectedPlacement) ||\\\\n      (selectedCategory === \\\\\"Florida Circuit\\\\\") || // Handled above\\\\n      (selectedCategory === \\\\\"Jax Club Event\\\\\" && selectedClubEvent) ||\\\\n      (selectedCategory === \\\\\"Volunteer\\\\\" && selectedFloridaEvent) ||\\\\n      ((selectedCategory === \\\\\"Brew Pick of Destiny\\\\\" ||\\\\n        selectedCategory === \\\\\"Officer Position\\\\\" ||\\\\n        selectedCategory === \\\\\"JAX Presentation\\\\\" ||\\\\n        selectedCategory === \\\\\"Host Group Brew\\\\\") &&\\\\n        customDescription.trim()) ||\\\\n      (selectedCategory !== \\\\\"Monthly Challenge\\\\\" &&\\\\n        selectedCategory !== \\\\\"Florida Circuit\\\\\" &&\\\\n        selectedCategory !== \\\\\"Jax Club Event\\\\\" &&\\\\n        selectedCategory !== \\\\\"Volunteer\\\\\" &&\\\\n        selectedCategory !== \\\\\"Brew Pick of Destiny\\\\\" &&\\\\n        selectedCategory !== \\\\\"Officer Position\\\\\" &&\\\\n        selectedCategory !== \\\\\"JAX Presentation\\\\\" &&\\\\n        selectedCategory !== \\\\\"Host Group Brew\\\\\" &&\\\\n        selectedPlacement));\\\\n\\\\n  // Lifecycle hooks\\\\n  onMount(() => {\\\\n    // Initial data load\\\\n    loadData(true);\\\\n\\\\n    // Setup tab focus handling\\\\n    const cleanup = setupEventHandlers();\\\\n    cleanupFunctions.push(cleanup);\\\\n  });\\\\n\\\\n  onDestroy(() => {\\\\n    // Cleanup all event listeners\\\\n    cleanupFunctions.forEach((cleanup) => cleanup());\\\\n  });\\\\n<\\/script>\\\\n\\\\n<Container size=\\\\\"sm\\\\\">\\\\n  <Hero title=\\\\\"Submit Points\\\\\" center={true} />\\\\n\\\\n  {#if $isLoading || $isLoadingProfile}\\\\n    <LoadingSpinner message=\\\\\"Loading data...\\\\\" />\\\\n    <div style=\\\\\"text-align: center; margin-top: var(--space-4);\\\\\">\\\\n      <Button variant=\\\\\"success\\\\\" on:click={() => loadData(true)}>\\\\n        Force Refresh\\\\n      </Button>\\\\n    </div>\\\\n  {:else if $categories.length > 0}\\\\n    <form on:submit|preventDefault={handleSubmit}>\\\\n      <label>\\\\n        Category *\\\\n        <select bind:value={selectedCategory} required>\\\\n          <option value=\\\\\"\\\\\">Select a category</option>\\\\n          {#each $categories as cat}\\\\n            <option value={cat.name}>{cat.name}</option>\\\\n          {/each}\\\\n        </select>\\\\n      </label>\\\\n\\\\n      {#if selectedCategory === \\\\\"Brew Pick of Destiny\\\\\" || selectedCategory === \\\\\"Officer Position\\\\\" || selectedCategory === \\\\\"JAX Presentation\\\\\" || selectedCategory === \\\\\"Host Group Brew\\\\\"}\\\\n        <label>\\\\n          Description *\\\\n          <textarea\\\\n            bind:value={customDescription}\\\\n            placeholder=\\\\\"Describe your {selectedCategory} achievement\\\\\"\\\\n            rows=\\\\\"3\\\\\"\\\\n            required\\\\n          ></textarea>\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      {#if selectedCategory === \\\\\"Florida Circuit\\\\\"}\\\\n        <label>\\\\n          Florida Circuit Event *\\\\n          <select bind:value={selectedFloridaEvent} required>\\\\n            <option value=\\\\\"\\\\\">Select Florida Circuit event</option>\\\\n            {#each filteredFloridaEvents as ev}\\\\n              <option value={ev.name}>{ev.name}</option>\\\\n            {/each}\\\\n          </select>\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      <!-- NEW: Florida Circuit Placement Question -->\\\\n      {#if selectedCategory === \\\\\"Florida Circuit\\\\\" && selectedFloridaEvent}\\\\n        <div class=\\\\\"placement-question\\\\\">\\\\n          <label class=\\\\\"question-label\\\\\">Did you place in this event? *</label>\\\\n          <div class=\\\\\"radio-group\\\\\">\\\\n            <label class=\\\\\"radio-option\\\\\">\\\\n              <input\\\\n                type=\\\\\"radio\\\\\"\\\\n                bind:group={didPlaceInEvent}\\\\n                value=\\\\\"No\\\\\"\\\\n                class=\\\\\"radio-input\\\\\"\\\\n              />\\\\n              <span class=\\\\\"radio-text\\\\\">No - Participation Only</span>\\\\n            </label>\\\\n            <label class=\\\\\"radio-option\\\\\">\\\\n              <input\\\\n                type=\\\\\"radio\\\\\"\\\\n                bind:group={didPlaceInEvent}\\\\n                value=\\\\\"Yes\\\\\"\\\\n                class=\\\\\"radio-input\\\\\"\\\\n              />\\\\n              <span class=\\\\\"radio-text\\\\\">Yes - I placed in this event</span>\\\\n            </label>\\\\n          </div>\\\\n        </div>\\\\n      {/if}\\\\n\\\\n      {#if selectedCategory === \\\\\"Monthly Challenge\\\\\"}\\\\n        <label>\\\\n          Monthly Event *\\\\n          <select bind:value={selectedEvent} required>\\\\n            <option value=\\\\\"\\\\\">Select event</option>\\\\n            {#each filteredMonthlyEvents as ev}\\\\n              <option value={ev.name}>{ev.name}</option>\\\\n            {/each}\\\\n          </select>\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      {#if selectedCategory === \\\\\"Jax Club Event\\\\\"}\\\\n        <label>\\\\n          Club Event Type *\\\\n          <select bind:value={selectedClubEvent} required>\\\\n            <option value=\\\\\"\\\\\">Select club event type</option>\\\\n            {#each filteredClubEvents as ev}\\\\n              <option value={ev.event_type}>{ev.event_type}</option>\\\\n            {/each}\\\\n          </select>\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      {#if selectedCategory === \\\\\"Volunteer\\\\\"}\\\\n        <label>\\\\n          Florida Circuit Event (Volunteer) *\\\\n          <select bind:value={selectedFloridaEvent} required>\\\\n            <option value=\\\\\"\\\\\">Select event Volunteered at </option>\\\\n            {#each $floridaCircuitEvents as ev}\\\\n              <option value={ev.name}>{ev.name}</option>\\\\n            {/each}\\\\n          </select>\\\\n        </label>\\\\n        \\\\n        <!-- Read-only description display for Volunteer -->\\\\n        {#if selectedFloridaEvent}\\\\n          <div class=\\\\\"description-display\\\\\">\\\\n            <label class=\\\\\"form-label\\\\\">Description</label>\\\\n            <div class=\\\\\"read-only-field\\\\\">Volunteered at {selectedFloridaEvent}</div>\\\\n          </div>\\\\n        {/if}\\\\n      {/if}\\\\n\\\\n      <!-- Enhanced placement selection logic -->\\\\n      {#if (filteredPlacements.length > 0 && needsPlacement && (selectedCategory !== \\\\\"Monthly Challenge\\\\\" || selectedEvent) && (selectedCategory !== \\\\\"Florida Circuit\\\\\" || showPlacementDropdown) && (selectedCategory !== \\\\\"Jax Club Event\\\\\" || selectedClubEvent)) || showPlacementDropdown}\\\\n        <label>\\\\n          Placement *\\\\n          <select bind:value={selectedPlacement} required>\\\\n            <option value=\\\\\"\\\\\">Select placement</option>\\\\n            {#each filteredPlacements as opt}\\\\n              <option value={opt.value}>{opt.label}</option>\\\\n            {/each}\\\\n          </select>\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      <!-- Enhanced points and date display -->\\\\n      {#if selectedPlacement || (selectedCategory === \\\\\"Florida Circuit\\\\\" && didPlaceInEvent === \\\\\"No\\\\\") || (selectedCategory === \\\\\"Volunteer\\\\\" && selectedFloridaEvent) || (selectedCategory === \\\\\"Jax Club Event\\\\\" && selectedClubEvent) || ((selectedCategory === \\\\\"Brew Pick of Destiny\\\\\" || selectedCategory === \\\\\"Officer Position\\\\\" || selectedCategory === \\\\\"JAX Presentation\\\\\" || selectedCategory === \\\\\"Host Group Brew\\\\\") && customDescription.trim())}\\\\n        <div class=\\\\\"points-display\\\\\">\\\\n          <p><strong>Points: {pointsBreakdown || (points ? `${points} points` : \\\\\"—\\\\\")}</strong></p>\\\\n        </div>\\\\n\\\\n        <label>\\\\n          Event Date *\\\\n          <input type=\\\\\"date\\\\\" bind:value={eventDate} required />\\\\n        </label>\\\\n      {/if}\\\\n\\\\n      <Button\\\\n        type=\\\\\"submit\\\\\"\\\\n        variant=\\\\\"primary\\\\\"\\\\n        disabled={!canSubmit}\\\\n        fullWidth\\\\n      >\\\\n        {isSubmitting ? \\\\\"Submitting...\\\\\" : \\\\\"Submit Points\\\\\"}\\\\n      </Button>\\\\n    </form>\\\\n  {:else}\\\\n    <EmptyState\\\\n      icon=\\\\\"⚠️\\\\\"\\\\n      title=\\\\\"Failed to Load\\\\\"\\\\n      message=\\\\\"Failed to load categories. Please refresh the page.\\\\\"\\\\n      actionLabel=\\\\\"Retry\\\\\"\\\\n      on:action={() => loadData(true)}\\\\n    />\\\\n  {/if}\\\\n</Container>\\\\n\\\\n<style>\\\\n\\\\n  form {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    gap: 1rem;\\\\n  }\\\\n\\\\n  label {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    font-weight: 500;\\\\n    color: #333;\\\\n    text-align: left;\\\\n  }\\\\n\\\\n  select,\\\\n  input[type=\\\\\"date\\\\\"] {\\\\n    padding: 0.5rem;\\\\n    margin-top: 0.25rem;\\\\n    font-size: 1rem;\\\\n    border: 1px solid #ccc;\\\\n    border-radius: 4px;\\\\n    width: 100%;\\\\n    box-sizing: border-box;\\\\n    transition: border-color 0.2s;\\\\n  }\\\\n\\\\n  select:focus,\\\\n  input[type=\\\\\"date\\\\\"]:focus {\\\\n    outline: none;\\\\n    border-color: #2563eb;\\\\n  }\\\\n\\\\n  .points-display {\\\\n    background-color: #f8fafc;\\\\n    padding: 1rem;\\\\n    border-radius: 6px;\\\\n    border: 1px solid #e2e8f0;\\\\n  }\\\\n\\\\n  .points-display p {\\\\n    margin: 0;\\\\n    color: #1e293b;\\\\n  }\\\\n\\\\n\\\\n  textarea {\\\\n    padding: 0.5rem;\\\\n    margin-top: 0.25rem;\\\\n    font-size: 1rem;\\\\n    border: 1px solid #ccc;\\\\n    border-radius: 4px;\\\\n    width: 100%;\\\\n    box-sizing: border-box;\\\\n    transition: border-color 0.2s;\\\\n    resize: vertical;\\\\n    min-height: 80px;\\\\n  }\\\\n\\\\n  textarea:focus {\\\\n    outline: none;\\\\n    border-color: #2563eb;\\\\n  }\\\\n\\\\n  /* NEW: Florida Circuit Radio Button Styling */\\\\n  .placement-question {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    gap: 0.5rem;\\\\n  }\\\\n\\\\n  .question-label {\\\\n    font-weight: 500;\\\\n    color: #333;\\\\n    margin-bottom: 0.5rem;\\\\n  }\\\\n\\\\n  .radio-group {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    gap: 0.75rem;\\\\n  }\\\\n\\\\n  .radio-option {\\\\n    display: flex;\\\\n    align-items: center;\\\\n    gap: 0.75rem;\\\\n    padding: 0.75rem 1rem;\\\\n    border: 2px solid #e5e7eb;\\\\n    border-radius: 6px;\\\\n    cursor: pointer;\\\\n    transition: all 0.2s ease;\\\\n    background: white;\\\\n  }\\\\n\\\\n  .radio-option:hover {\\\\n    border-color: #ff3e00;\\\\n    background-color: #fef2f2;\\\\n  }\\\\n\\\\n  .radio-option:has(.radio-input:checked) {\\\\n    border-color: #ff3e00;\\\\n    background-color: #fef2f2;\\\\n  }\\\\n\\\\n  .radio-input {\\\\n    width: 20px;\\\\n    height: 20px;\\\\n    accent-color: #ff3e00;\\\\n    cursor: pointer;\\\\n  }\\\\n\\\\n  .radio-text {\\\\n    font-weight: 500;\\\\n    color: #333;\\\\n    cursor: pointer;\\\\n    flex-grow: 1;\\\\n  }\\\\n\\\\n  /* Mobile responsive */\\\\n  @media (max-width: 480px) {\\\\n    .radio-option {\\\\n      min-height: 44px; /* Touch target requirement */\\\\n      padding: 1rem 0.75rem;\\\\n    }\\\\n    \\\\n    .radio-input {\\\\n      min-width: 44px;\\\\n      min-height: 44px;\\\\n    }\\\\n  }\\\\n\\\\n  /* NEW: Read-only description field styling for Volunteer category */\\\\n  .description-display {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    gap: 0.5rem;\\\\n  }\\\\n\\\\n  .form-label {\\\\n    font-weight: 500;\\\\n    color: #333;\\\\n  }\\\\n\\\\n  .read-only-field {\\\\n    padding: 0.5rem;\\\\n    margin-top: 0.25rem;\\\\n    font-size: 1rem;\\\\n    border: 1px solid #d1d5db;\\\\n    border-radius: 4px;\\\\n    width: 100%;\\\\n    box-sizing: border-box;\\\\n    background-color: #f8fafc;\\\\n    color: #6b7280;\\\\n    font-style: italic;\\\\n    cursor: not-allowed;\\\\n  }\\\\n</style>\"],\"names\":[],\"mappings\":\"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\"}'\n};\nconst Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let filteredPlacements;\n  let needsPlacement;\n  let showPlacementDropdown;\n  let canSubmit;\n  let $isLoadingProfile, $$unsubscribe_isLoadingProfile;\n  let $isLoading, $$unsubscribe_isLoading;\n  let $$unsubscribe_isLoaded;\n  let $categories, $$unsubscribe_categories;\n  let $$unsubscribe_clubEventTypes;\n  let $$unsubscribe_floridaCircuitEvents;\n  let $$unsubscribe_monthlyEvents;\n  let $$unsubscribe_placementOptions;\n  let $$unsubscribe_userProfile;\n  $$unsubscribe_isLoadingProfile = subscribe(isLoadingProfile, (value) => $isLoadingProfile = value);\n  $$unsubscribe_isLoading = subscribe(isLoading, (value) => $isLoading = value);\n  $$unsubscribe_isLoaded = subscribe(isLoaded, (value) => value);\n  $$unsubscribe_categories = subscribe(categories, (value) => $categories = value);\n  $$unsubscribe_clubEventTypes = subscribe(clubEventTypes, (value) => value);\n  $$unsubscribe_floridaCircuitEvents = subscribe(floridaCircuitEvents, (value) => value);\n  $$unsubscribe_monthlyEvents = subscribe(monthlyEvents, (value) => value);\n  $$unsubscribe_placementOptions = subscribe(placementOptions, (value) => value);\n  $$unsubscribe_userProfile = subscribe(userProfile, (value) => value);\n  let selectedCategory = \"\";\n  let cleanupFunctions = [];\n  onDestroy(() => {\n    cleanupFunctions.forEach((cleanup) => cleanup());\n  });\n  $$result.css.add(css);\n  filteredPlacements = [];\n  needsPlacement = false;\n  showPlacementDropdown = selectedCategory === \"Florida Circuit\";\n  canSubmit = selectedCategory;\n  $$unsubscribe_isLoadingProfile();\n  $$unsubscribe_isLoading();\n  $$unsubscribe_isLoaded();\n  $$unsubscribe_categories();\n  $$unsubscribe_clubEventTypes();\n  $$unsubscribe_floridaCircuitEvents();\n  $$unsubscribe_monthlyEvents();\n  $$unsubscribe_placementOptions();\n  $$unsubscribe_userProfile();\n  return `${validate_component(Container, \"Container\").$$render($$result, { size: \"sm\" }, {}, {\n    default: () => {\n      return `${validate_component(Hero, \"Hero\").$$render($$result, { title: \"Submit Points\", center: true }, {}, {})} ${$isLoading || $isLoadingProfile ? `${validate_component(LoadingSpinner, \"LoadingSpinner\").$$render($$result, { message: \"Loading data...\" }, {}, {})} <div style=\"text-align: center; margin-top: var(--space-4);\">${validate_component(Button, \"Button\").$$render($$result, { variant: \"success\" }, {}, {\n        default: () => {\n          return `Force Refresh`;\n        }\n      })}</div>` : `${$categories.length > 0 ? `<form class=\"svelte-1aouwrr\"><label class=\"svelte-1aouwrr\">Category *\n        <select required class=\"svelte-1aouwrr\"><option value=\"\" data-svelte-h=\"svelte-15swqsp\">Select a category</option>${each($categories, (cat) => {\n        return `<option${add_attribute(\"value\", cat.name, 0)}>${escape(cat.name)}</option>`;\n      })}</select></label> ${``} ${``}  ${``} ${``} ${``} ${``}  ${filteredPlacements.length > 0 && needsPlacement && selectedCategory !== \"Monthly Challenge\" && selectedCategory !== \"Florida Circuit\" && selectedCategory !== \"Jax Club Event\" || showPlacementDropdown ? `<label class=\"svelte-1aouwrr\">Placement *\n          <select required class=\"svelte-1aouwrr\"><option value=\"\" data-svelte-h=\"svelte-7kx7jf\">Select placement</option>${each(filteredPlacements, (opt) => {\n        return `<option${add_attribute(\"value\", opt.value, 0)}>${escape(opt.label)}</option>`;\n      })}</select></label>` : ``}  ${``} ${validate_component(Button, \"Button\").$$render(\n        $$result,\n        {\n          type: \"submit\",\n          variant: \"primary\",\n          disabled: !canSubmit,\n          fullWidth: true\n        },\n        {},\n        {\n          default: () => {\n            return `${escape(\"Submit Points\")}`;\n          }\n        }\n      )}</form>` : `${validate_component(EmptyState, \"EmptyState\").$$render(\n        $$result,\n        {\n          icon: \"⚠️\",\n          title: \"Failed to Load\",\n          message: \"Failed to load categories. Please refresh the page.\",\n          actionLabel: \"Retry\"\n        },\n        {},\n        {}\n      )}`}`}`;\n    }\n  })}`;\n});\nexport {\n  Page as default\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;AASA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,6/EAA6/E;AACrgF,EAAE,GAAG,EAAE;AACP,CAAC;AACI,MAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAC5E,EAAE,IAAI,kBAAkB;AACxB,EAAE,IAAI,cAAc;AACpB,EAAE,IAAI,qBAAqB;AAC3B,EAAE,IAAI,SAAS;AACf,EAAE,IAAI,iBAAiB,EAAE,8BAA8B;AACvD,EAAE,IAAI,UAAU,EAAE,uBAAuB;AACzC,EAAE,IAAI,sBAAsB;AAC5B,EAAE,IAAI,WAAW,EAAE,wBAAwB;AAC3C,EAAE,IAAI,4BAA4B;AAClC,EAAE,IAAI,kCAAkC;AACxC,EAAE,IAAI,2BAA2B;AACjC,EAAE,IAAI,8BAA8B;AACpC,EAAE,IAAI,yBAAyB;AAC/B,EAAE,8BAA8B,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,KAAK,KAAK,iBAAiB,GAAG,KAAK,CAAC;AACpG,EAAE,uBAAuB,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC,KAAK,KAAK,UAAU,GAAG,KAAK,CAAC;AAC/E,EAAE,sBAAsB,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AAChE,EAAE,wBAAwB,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC,KAAK,KAAK,WAAW,GAAG,KAAK,CAAC;AAClF,EAAE,4BAA4B,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AAC5E,EAAE,kCAAkC,GAAG,SAAS,CAAC,oBAAoB,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACxF,EAAE,2BAA2B,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AAC1E,EAAE,8BAA8B,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AAChF,EAAE,yBAAyB,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACtE,EAAE,IAAI,gBAAgB,GAAG,EAAE;AAC3B,EAAE,IAAI,gBAAgB,GAAG,EAAE;AAC3B,EAAE,SAAS,CAAC,MAAM;AAClB,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE,CAAC;AACpD,GAAG,CAAC;AACJ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACvB,EAAE,kBAAkB,GAAG,EAAE;AACzB,EAAE,cAAc,GAAG,KAAK;AACxB,EAAE,qBAAqB,GAAG,gBAAgB,KAAK,iBAAiB;AAChE,EAAE,SAAS,GAAG,gBAAgB;AAC9B,EAAE,8BAA8B,EAAE;AAClC,EAAE,uBAAuB,EAAE;AAC3B,EAAE,sBAAsB,EAAE;AAC1B,EAAE,wBAAwB,EAAE;AAC5B,EAAE,4BAA4B,EAAE;AAChC,EAAE,kCAAkC,EAAE;AACtC,EAAE,2BAA2B,EAAE;AAC/B,EAAE,8BAA8B,EAAE;AAClC,EAAE,yBAAyB,EAAE;AAC7B,EAAE,OAAO,CAAC,EAAE,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;AAC9F,IAAI,OAAO,EAAE,MAAM;AACnB,MAAM,OAAO,CAAC,EAAE,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,IAAI,iBAAiB,GAAG,CAAC,EAAE,kBAAkB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,8DAA8D,EAAE,kBAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE;AACla,QAAQ,OAAO,EAAE,MAAM;AACvB,UAAU,OAAO,CAAC,aAAa,CAAC;AAChC;AACA,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAChD,0HAA0H,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK;AACvJ,QAAQ,OAAO,CAAC,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;AAC3F,OAAO,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,kBAAkB,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,IAAI,gBAAgB,KAAK,mBAAmB,IAAI,gBAAgB,KAAK,iBAAiB,IAAI,gBAAgB,KAAK,gBAAgB,IAAI,qBAAqB,GAAG,CAAC;AAC9Q,0HAA0H,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,GAAG,KAAK;AAC9J,QAAQ,OAAO,CAAC,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;AAC7F,OAAO,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ;AACxF,QAAQ,QAAQ;AAChB,QAAQ;AACR,UAAU,IAAI,EAAE,QAAQ;AACxB,UAAU,OAAO,EAAE,SAAS;AAC5B,UAAU,QAAQ,EAAE,CAAC,SAAS;AAC9B,UAAU,SAAS,EAAE;AACrB,SAAS;AACT,QAAQ,EAAE;AACV,QAAQ;AACR,UAAU,OAAO,EAAE,MAAM;AACzB,YAAY,OAAO,CAAC,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/C;AACA;AACA,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,kBAAkB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,QAAQ;AAC3E,QAAQ,QAAQ;AAChB,QAAQ;AACR,UAAU,IAAI,EAAE,IAAI;AACpB,UAAU,KAAK,EAAE,gBAAgB;AACjC,UAAU,OAAO,EAAE,qDAAqD;AACxE,UAAU,WAAW,EAAE;AACvB,SAAS;AACT,QAAQ,EAAE;AACV,QAAQ;AACR,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;AACA,GAAG,CAAC,CAAC,CAAC;AACN,CAAC;;;;"}