{"version":3,"file":"_page.svelte-0X2zvTeA.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/officers/manage-competitions/edit/_id_/_page.svelte.js"],"sourcesContent":["import { c as create_ssr_component, h as subscribe, o as onDestroy } from \"../../../../../../chunks/ssr.js\";\nimport { g as goto } from \"../../../../../../chunks/client.js\";\nimport { p as page } from \"../../../../../../chunks/stores.js\";\nimport { u as userProfile } from \"../../../../../../chunks/userProfile.js\";\nimport \"../../../../../../chunks/competitionManagementStore.js\";\nimport \"../../../../../../chunks/bjcpCategoryStore.js\";\n/* empty css                                                                         */\nimport \"../../../../../../chunks/supabaseClient.js\";\nconst css = {\n  code: `.container.svelte-xvlhfg.svelte-xvlhfg{max-width:800px;margin:0 auto;padding:1rem}.hero.svelte-xvlhfg.svelte-xvlhfg{text-align:center;margin-bottom:3rem}.hero.svelte-xvlhfg h1.svelte-xvlhfg{color:#ff3e00;text-transform:uppercase;font-size:4rem;font-weight:100;margin:0 0 0.25em;line-height:1.1;display:flex;align-items:center;justify-content:center;gap:1rem}.hero.svelte-xvlhfg h1 .emoji.svelte-xvlhfg{font-size:1em}.hero.svelte-xvlhfg .subtitle.svelte-xvlhfg{font-size:1.2rem;color:#333;font-weight:500}.loading.svelte-xvlhfg.svelte-xvlhfg{text-align:center;padding:3rem}.spinner.svelte-xvlhfg.svelte-xvlhfg{display:inline-block;width:40px;height:40px;border:4px solid #f3f3f3;border-top:4px solid #ff3e00;border-radius:50%;animation:svelte-xvlhfg-spin 1s linear infinite}@keyframes svelte-xvlhfg-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.form-card.svelte-xvlhfg.svelte-xvlhfg{background:white;padding:2rem;border-radius:6px;box-shadow:0 2px 4px rgba(0, 0, 0, 0.1);border-left:4px solid #ff3e00}.warning-banner.svelte-xvlhfg.svelte-xvlhfg{background:#fef3c7;border:1px solid #f59e0b;border-radius:6px;padding:1rem;margin-bottom:1.5rem;color:#92400e}.warning-banner.svelte-xvlhfg strong.svelte-xvlhfg{display:block;margin-bottom:0.25rem}.form-group.svelte-xvlhfg.svelte-xvlhfg{margin-bottom:1.5rem}.form-group.svelte-xvlhfg label.svelte-xvlhfg{display:block;margin-bottom:0.5rem;font-weight:600;color:#333}.required.svelte-xvlhfg.svelte-xvlhfg::after{content:' *';color:#dc2626}.form-control.svelte-xvlhfg.svelte-xvlhfg{width:100%;padding:0.75rem;border:1px solid #ddd;border-radius:6px;font-size:1rem;transition:border-color 0.3s ease}.form-control.svelte-xvlhfg.svelte-xvlhfg:focus{outline:none;border-color:#ff3e00;box-shadow:0 0 0 3px rgba(255, 62, 0, 0.1)}.form-control.error.svelte-xvlhfg.svelte-xvlhfg{border-color:#dc2626}.form-control.svelte-xvlhfg.svelte-xvlhfg:disabled{background:#f5f5f5;cursor:not-allowed}textarea.form-control.svelte-xvlhfg.svelte-xvlhfg{resize:vertical;min-height:100px}.error-message.svelte-xvlhfg.svelte-xvlhfg{color:#dc2626;font-size:0.875rem;margin-top:0.25rem}.form-row.svelte-xvlhfg.svelte-xvlhfg{display:grid;grid-template-columns:1fr 1fr;gap:1rem}.datetime-inputs.svelte-xvlhfg.svelte-xvlhfg{display:flex;gap:0.5rem}.datetime-inputs.svelte-xvlhfg .form-control.svelte-xvlhfg{width:100%}.time-input.svelte-xvlhfg.svelte-xvlhfg{flex:0 0 120px}.checkbox-group.svelte-xvlhfg.svelte-xvlhfg{display:flex;align-items:center;gap:0.5rem;margin-top:0.5rem}.checkbox-group.svelte-xvlhfg input[type=\"checkbox\"].svelte-xvlhfg{width:20px;height:20px;cursor:pointer}.checkbox-group.svelte-xvlhfg label.svelte-xvlhfg{margin-bottom:0;cursor:pointer;user-select:none}.help-text.svelte-xvlhfg.svelte-xvlhfg{color:#666;font-size:0.875rem;margin-top:0.25rem}.form-actions.svelte-xvlhfg.svelte-xvlhfg{display:flex;gap:1rem;justify-content:flex-end;margin-top:2rem;padding-top:2rem;border-top:1px solid #eee}.btn.svelte-xvlhfg.svelte-xvlhfg{padding:0.75rem 1.5rem;border:none;border-radius:6px;font-size:1rem;cursor:pointer;transition:all 0.3s ease}.btn.svelte-xvlhfg.svelte-xvlhfg:disabled{opacity:0.6;cursor:not-allowed}.btn-primary.svelte-xvlhfg.svelte-xvlhfg{background:#ff3e00;color:white}.btn-primary.svelte-xvlhfg.svelte-xvlhfg:hover:not(:disabled){background:#e63600}.btn-secondary.svelte-xvlhfg.svelte-xvlhfg{background:#6b7280;color:white}.btn-secondary.svelte-xvlhfg.svelte-xvlhfg:hover:not(:disabled){background:#4b5563}.section-title.svelte-xvlhfg.svelte-xvlhfg{font-size:1.25rem;font-weight:600;color:#333;margin-bottom:1rem;padding-bottom:0.5rem;border-bottom:2px solid #ff3e00}.entry-stats.svelte-xvlhfg.svelte-xvlhfg{background:#f9fafb;padding:1rem;border-radius:6px;margin-bottom:1.5rem;display:flex;align-items:center;gap:2rem}.stat.svelte-xvlhfg.svelte-xvlhfg{display:flex;flex-direction:column}.stat-label.svelte-xvlhfg.svelte-xvlhfg{font-size:0.875rem;color:#666}.stat-value.svelte-xvlhfg.svelte-xvlhfg{font-size:1.5rem;font-weight:bold;color:#ff3e00}@media(max-width: 480px){.hero.svelte-xvlhfg h1.svelte-xvlhfg{font-size:2.5rem}.hero.svelte-xvlhfg .subtitle.svelte-xvlhfg{font-size:1rem}.form-card.svelte-xvlhfg.svelte-xvlhfg{padding:1.5rem}.form-row.svelte-xvlhfg.svelte-xvlhfg{grid-template-columns:1fr}.datetime-inputs.svelte-xvlhfg.svelte-xvlhfg{flex-direction:column}.time-input.svelte-xvlhfg.svelte-xvlhfg{flex:1}.form-actions.svelte-xvlhfg.svelte-xvlhfg{flex-direction:column-reverse}.btn.svelte-xvlhfg.svelte-xvlhfg{width:100%}.entry-stats.svelte-xvlhfg.svelte-xvlhfg{flex-direction:column;align-items:flex-start;gap:1rem}}@media(max-width: 768px){.hero.svelte-xvlhfg h1.svelte-xvlhfg{font-size:3rem}.form-card.svelte-xvlhfg.svelte-xvlhfg{padding:1.5rem}.form-row.svelte-xvlhfg.svelte-xvlhfg{grid-template-columns:1fr}.form-actions.svelte-xvlhfg.svelte-xvlhfg{flex-direction:column-reverse}.btn.svelte-xvlhfg.svelte-xvlhfg{width:100%}.entry-stats.svelte-xvlhfg.svelte-xvlhfg{flex-direction:column;align-items:flex-start;gap:1rem}.custom-category-section.svelte-xvlhfg.svelte-xvlhfg{padding:1rem}}.radio-group.svelte-xvlhfg.svelte-xvlhfg{display:flex;flex-direction:column;gap:1rem}.radio-option.svelte-xvlhfg.svelte-xvlhfg{display:flex;align-items:flex-start;gap:0.75rem;padding:1rem;border:1px solid #e2e8f0;border-radius:8px;cursor:pointer;transition:all 0.2s ease}.radio-option.svelte-xvlhfg.svelte-xvlhfg:hover{border-color:#cbd5e1;background:#f8fafc}.radio-option.svelte-xvlhfg.svelte-xvlhfg:has(input:checked){border-color:#ff3e00;background:#fff5f5}.radio-label.svelte-xvlhfg.svelte-xvlhfg{flex:1}.radio-description.svelte-xvlhfg.svelte-xvlhfg{font-size:0.875rem;color:#666;margin-top:0.25rem}.custom-category-section.svelte-xvlhfg.svelte-xvlhfg{margin-top:1.5rem;padding:1.5rem;border:1px solid #e5e7eb;border-radius:8px;background:#f9fafb}`,\n  map: `{\"version\":3,\"file\":\"+page.svelte\",\"sources\":[\"+page.svelte\"],\"sourcesContent\":[\"<!-- src/routes/officers/manage-competitions/edit/[id]/+page.svelte -->\\\\n<script>\\\\n  import { onMount, onDestroy } from 'svelte';\\\\n  import { goto } from '$app/navigation';\\\\n  import { page } from '$app/stores';\\\\n  import { userProfile } from '$lib/stores/userProfile';\\\\n  import { competitionManagementStore, updateCompetition } from '$lib/stores/competitionManagementStore';\\\\n  import { bjcpCategories, categoriesByNumber, loadBjcpCategories } from '$lib/stores/bjcpCategoryStore';\\\\n  import CategorySelector from '$lib/components/CategorySelector.svelte';\\\\n  import RankingGroupManager from '$lib/components/RankingGroupManager.svelte';\\\\n  import { supabase } from '$lib/supabaseClient';\\\\n  \\\\n  // Check officer status\\\\n  $: if ($userProfile && !$userProfile.is_officer) {\\\\n    goto('/');\\\\n  }\\\\n\\\\n  // Get competition ID from URL\\\\n  $: competitionId = $page.params.id;\\\\n\\\\n  // Form fields\\\\n  let name = '';\\\\n  let description = '';\\\\n  let entryDeadline = '';\\\\n  let entryDeadlineTime = '00:00';\\\\n  let judgingDate = '';\\\\n  let judgingDateTime = '00:00';\\\\n  let entryFee = 5;\\\\n  let maxEntriesPerMember = 5;\\\\n  let isActive = true;\\\\n  let hideJudgingDate = false;\\\\n  \\\\n  // Category system settings\\\\n  let categorySystem = 'default'; // 'default' or 'custom'\\\\n  let selectedCategories = []; // Array of selected category IDs for custom system\\\\n  let rankingGroups = []; // Array of ranking groups for custom system\\\\n  \\\\n  let isLoading = true;\\\\n  let isSubmitting = false;\\\\n  let validationErrors = {};\\\\n  let competition = null;\\\\n\\\\n  onMount(async () => {\\\\n    // Load BJCP categories for category selection\\\\n    await loadBjcpCategories();\\\\n    \\\\n    loadCompetition();\\\\n    setupEventHandlers();\\\\n  });\\\\n\\\\n  // Removed tab switching reload - causes issues with Supabase tab switching\\\\n  function setupEventHandlers() {\\\\n    // Tab visibility handling removed for better Supabase compatibility\\\\n    return () => {\\\\n      // No cleanup needed now\\\\n    };\\\\n  }\\\\n\\\\n  onDestroy(() => {\\\\n    // Cleanup handled by setupEventHandlers return\\\\n  });\\\\n\\\\n  // Load competition data\\\\n  async function loadCompetition() {\\\\n    isLoading = true;\\\\n    \\\\n    try {\\\\n      const { data, error } = await supabase\\\\n        .from('competitions')\\\\n        .select(\\`\\\\n          *,\\\\n          competition_ranking_groups (\\\\n            id,\\\\n            group_name,\\\\n            group_description,\\\\n            bjcp_category_ids,\\\\n            group_order\\\\n          )\\\\n        \\`)\\\\n        .eq('id', competitionId)\\\\n        .single();\\\\n      \\\\n      if (error) throw error;\\\\n      \\\\n      if (data) {\\\\n        competition = data;\\\\n        name = data.name || '';\\\\n        description = data.description || '';\\\\n        \\\\n        const entryDeadlineDate = new Date(data.entry_deadline);\\\\n        entryDeadline = formatDateForInput(entryDeadlineDate);\\\\n        entryDeadlineTime = formatTimeForInput(entryDeadlineDate);\\\\n        \\\\n        const judgingDateDate = new Date(data.judging_date);\\\\n        judgingDate = formatDateForInput(judgingDateDate);\\\\n        judgingDateTime = formatTimeForInput(judgingDateDate);\\\\n        \\\\n        entryFee = data.entry_fee || 0;\\\\n        maxEntriesPerMember = data.max_entries_per_member || 5;\\\\n        isActive = data.active ?? true;\\\\n        hideJudgingDate = data.hide_judging_date ?? false;\\\\n        \\\\n        // Load category system settings\\\\n        categorySystem = data.category_system || 'default';\\\\n        \\\\n        if (categorySystem === 'custom' && data.category_restrictions) {\\\\n          selectedCategories = Array.isArray(data.category_restrictions) \\\\n            ? data.category_restrictions \\\\n            : JSON.parse(data.category_restrictions);\\\\n          \\\\n          if (data.competition_ranking_groups && data.competition_ranking_groups.length > 0) {\\\\n            rankingGroups = data.competition_ranking_groups.map(rg => ({\\\\n              id: rg.id,\\\\n              name: rg.group_name,\\\\n              description: rg.group_description || '',\\\\n              categories: Array.isArray(rg.bjcp_category_ids) \\\\n                ? rg.bjcp_category_ids \\\\n                : JSON.parse(rg.bjcp_category_ids)\\\\n            }));\\\\n          }\\\\n        } else {\\\\n          selectedCategories = [];\\\\n          rankingGroups = [];\\\\n        }\\\\n      }\\\\n    } catch (err) {\\\\n      console.error('Error loading competition:', err);\\\\n      alert('Failed to load competition');\\\\n      goto('/officers/manage-competitions');\\\\n    } finally {\\\\n      isLoading = false;\\\\n    }\\\\n  }\\\\n\\\\n  // Format date for form input\\\\n  function formatDateForInput(date) {\\\\n    const year = date.getFullYear();\\\\n    const month = String(date.getMonth() + 1).padStart(2, '0');\\\\n    const day = String(date.getDate()).padStart(2, '0');\\\\n    return \\`\\${year}-\\${month}-\\${day}\\`;\\\\n  }\\\\n\\\\n  // Format time for form input\\\\n  function formatTimeForInput(date) {\\\\n    const hours = String(date.getHours()).padStart(2, '0');\\\\n    const minutes = String(date.getMinutes()).padStart(2, '0');\\\\n    return \\`\\${hours}:\\${minutes}\\`;\\\\n  }\\\\n\\\\n  // Validate form\\\\n  function validateForm() {\\\\n    const errors = {};\\\\n    \\\\n    if (!name.trim()) {\\\\n      errors.name = 'Competition name is required';\\\\n    } else if (name.length > 100) {\\\\n      errors.name = 'Name must be 100 characters or less';\\\\n    }\\\\n    \\\\n    if (description && description.length > 500) {\\\\n      errors.description = 'Description must be 500 characters or less';\\\\n    }\\\\n    \\\\n    if (!entryDeadline) {\\\\n      errors.entryDeadline = 'Entry deadline is required';\\\\n    }\\\\n    \\\\n    if (!judgingDate) {\\\\n      errors.judgingDate = 'Judging date is required';\\\\n    } else {\\\\n      const judging = new Date(\\`\\${judgingDate}T\\${judgingDateTime}:00\\`);\\\\n      const deadline = new Date(\\`\\${entryDeadline}T\\${entryDeadlineTime}:00\\`);\\\\n      \\\\n      if (judging <= deadline) {\\\\n        errors.judgingDate = 'Judging date and time must be after entry deadline';\\\\n      }\\\\n    }\\\\n    \\\\n    if (entryFee < 0 || entryFee > 100) {\\\\n      errors.entryFee = 'Entry fee must be between $0 and $100';\\\\n    }\\\\n    \\\\n    if (maxEntriesPerMember < 1 || maxEntriesPerMember > 20) {\\\\n      errors.maxEntriesPerMember = 'Max entries must be between 1 and 20';\\\\n    }\\\\n    \\\\n    validationErrors = errors;\\\\n    return Object.keys(errors).length === 0;\\\\n  }\\\\n\\\\n  // Handle form submission\\\\n  async function handleSubmit() {\\\\n    if (!validateForm()) return;\\\\n    \\\\n    isSubmitting = true;\\\\n    \\\\n    try {\\\\n      // Update basic competition data including category system\\\\n      const basicUpdates = {\\\\n        name: name.trim(),\\\\n        description: description.trim() || null,\\\\n        entry_deadline: \\`\\${entryDeadline}T\\${entryDeadlineTime}:00\\`,\\\\n        judging_date: \\`\\${judgingDate}T\\${judgingDateTime}:00\\`,\\\\n        entry_fee: entryFee,\\\\n        max_entries_per_member: maxEntriesPerMember,\\\\n        active: isActive,\\\\n        hide_judging_date: hideJudgingDate,\\\\n        category_system: categorySystem,\\\\n        category_restrictions: categorySystem === 'custom' && selectedCategories.length > 0 \\\\n          ? selectedCategories \\\\n          : null\\\\n      };\\\\n      \\\\n      await updateCompetition(competitionId, basicUpdates);\\\\n      \\\\n      // Handle ranking group updates if not disabled due to existing entries\\\\n      if (!hasEntries) {\\\\n        // Remove existing ranking groups\\\\n        await supabase\\\\n          .from('competition_ranking_groups')\\\\n          .delete()\\\\n          .eq('competition_id', competitionId);\\\\n        \\\\n        // Add new ranking groups for custom system\\\\n        if (categorySystem === 'custom' && rankingGroups.length > 0) {\\\\n          const groupData = rankingGroups.map((group, index) => ({\\\\n            competition_id: competitionId,\\\\n            group_name: group.name,\\\\n            group_description: group.description || null,\\\\n            bjcp_category_ids: group.categories,\\\\n            group_order: index + 1\\\\n          }));\\\\n          \\\\n          const { error: groupError } = await supabase\\\\n            .from('competition_ranking_groups')\\\\n            .insert(groupData);\\\\n            \\\\n          if (groupError) throw groupError;\\\\n        }\\\\n      }\\\\n      \\\\n      goto('/officers/manage-competitions');\\\\n    } catch (error) {\\\\n      console.error('Error updating competition:', error);\\\\n      alert(\\`Error updating competition: \\${error.message}\\`);\\\\n      isSubmitting = false;\\\\n    }\\\\n  }\\\\n\\\\n  // Cancel and go back\\\\n  function handleCancel() {\\\\n    goto('/officers/manage-competitions');\\\\n  }\\\\n\\\\n  // Check if competition has entries (affects what can be edited)\\\\n  $: hasEntries = competition?.entry_count > 0;\\\\n<\\/script>\\\\n\\\\n<style>\\\\n  .container {\\\\n    max-width: 800px;\\\\n    margin: 0 auto;\\\\n    padding: 1rem;\\\\n  }\\\\n\\\\n  .hero {\\\\n    text-align: center;\\\\n    margin-bottom: 3rem;\\\\n  }\\\\n\\\\n  .hero h1 {\\\\n    color: #ff3e00;\\\\n    text-transform: uppercase;\\\\n    font-size: 4rem;\\\\n    font-weight: 100;\\\\n    margin: 0 0 0.25em;\\\\n    line-height: 1.1;\\\\n    display: flex;\\\\n    align-items: center;\\\\n    justify-content: center;\\\\n    gap: 1rem;\\\\n  }\\\\n\\\\n  .hero h1 .emoji {\\\\n    font-size: 1em;\\\\n  }\\\\n\\\\n  .hero .subtitle {\\\\n    font-size: 1.2rem;\\\\n    color: #333;\\\\n    font-weight: 500;\\\\n  }\\\\n\\\\n  .loading {\\\\n    text-align: center;\\\\n    padding: 3rem;\\\\n  }\\\\n\\\\n  .spinner {\\\\n    display: inline-block;\\\\n    width: 40px;\\\\n    height: 40px;\\\\n    border: 4px solid #f3f3f3;\\\\n    border-top: 4px solid #ff3e00;\\\\n    border-radius: 50%;\\\\n    animation: spin 1s linear infinite;\\\\n  }\\\\n\\\\n  @keyframes spin {\\\\n    0% { transform: rotate(0deg); }\\\\n    100% { transform: rotate(360deg); }\\\\n  }\\\\n\\\\n  .form-card {\\\\n    background: white;\\\\n    padding: 2rem;\\\\n    border-radius: 6px;\\\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\\\n    border-left: 4px solid #ff3e00;\\\\n  }\\\\n\\\\n  .warning-banner {\\\\n    background: #fef3c7;\\\\n    border: 1px solid #f59e0b;\\\\n    border-radius: 6px;\\\\n    padding: 1rem;\\\\n    margin-bottom: 1.5rem;\\\\n    color: #92400e;\\\\n  }\\\\n\\\\n  .warning-banner strong {\\\\n    display: block;\\\\n    margin-bottom: 0.25rem;\\\\n  }\\\\n\\\\n  .form-group {\\\\n    margin-bottom: 1.5rem;\\\\n  }\\\\n\\\\n  .form-group label {\\\\n    display: block;\\\\n    margin-bottom: 0.5rem;\\\\n    font-weight: 600;\\\\n    color: #333;\\\\n  }\\\\n\\\\n  .required::after {\\\\n    content: ' *';\\\\n    color: #dc2626;\\\\n  }\\\\n\\\\n  .form-control {\\\\n    width: 100%;\\\\n    padding: 0.75rem;\\\\n    border: 1px solid #ddd;\\\\n    border-radius: 6px;\\\\n    font-size: 1rem;\\\\n    transition: border-color 0.3s ease;\\\\n  }\\\\n\\\\n  .form-control:focus {\\\\n    outline: none;\\\\n    border-color: #ff3e00;\\\\n    box-shadow: 0 0 0 3px rgba(255, 62, 0, 0.1);\\\\n  }\\\\n\\\\n  .form-control.error {\\\\n    border-color: #dc2626;\\\\n  }\\\\n\\\\n  .form-control:disabled {\\\\n    background: #f5f5f5;\\\\n    cursor: not-allowed;\\\\n  }\\\\n\\\\n  textarea.form-control {\\\\n    resize: vertical;\\\\n    min-height: 100px;\\\\n  }\\\\n\\\\n  .error-message {\\\\n    color: #dc2626;\\\\n    font-size: 0.875rem;\\\\n    margin-top: 0.25rem;\\\\n  }\\\\n\\\\n  .form-row {\\\\n    display: grid;\\\\n    grid-template-columns: 1fr 1fr;\\\\n    gap: 1rem;\\\\n  }\\\\n\\\\n  .datetime-inputs {\\\\n    display: flex;\\\\n    gap: 0.5rem;\\\\n  }\\\\n\\\\n  .datetime-inputs .form-control {\\\\n    width: 100%;\\\\n  }\\\\n\\\\n  .time-input {\\\\n    flex: 0 0 120px;\\\\n  }\\\\n\\\\n  .checkbox-group {\\\\n    display: flex;\\\\n    align-items: center;\\\\n    gap: 0.5rem;\\\\n    margin-top: 0.5rem;\\\\n  }\\\\n\\\\n  .checkbox-group input[type=\\\\\"checkbox\\\\\"] {\\\\n    width: 20px;\\\\n    height: 20px;\\\\n    cursor: pointer;\\\\n  }\\\\n\\\\n  .checkbox-group label {\\\\n    margin-bottom: 0;\\\\n    cursor: pointer;\\\\n    user-select: none;\\\\n  }\\\\n\\\\n  .help-text {\\\\n    color: #666;\\\\n    font-size: 0.875rem;\\\\n    margin-top: 0.25rem;\\\\n  }\\\\n\\\\n  .form-actions {\\\\n    display: flex;\\\\n    gap: 1rem;\\\\n    justify-content: flex-end;\\\\n    margin-top: 2rem;\\\\n    padding-top: 2rem;\\\\n    border-top: 1px solid #eee;\\\\n  }\\\\n\\\\n  .btn {\\\\n    padding: 0.75rem 1.5rem;\\\\n    border: none;\\\\n    border-radius: 6px;\\\\n    font-size: 1rem;\\\\n    cursor: pointer;\\\\n    transition: all 0.3s ease;\\\\n  }\\\\n\\\\n  .btn:disabled {\\\\n    opacity: 0.6;\\\\n    cursor: not-allowed;\\\\n  }\\\\n\\\\n  .btn-primary {\\\\n    background: #ff3e00;\\\\n    color: white;\\\\n  }\\\\n\\\\n  .btn-primary:hover:not(:disabled) {\\\\n    background: #e63600;\\\\n  }\\\\n\\\\n  .btn-secondary {\\\\n    background: #6b7280;\\\\n    color: white;\\\\n  }\\\\n\\\\n  .btn-secondary:hover:not(:disabled) {\\\\n    background: #4b5563;\\\\n  }\\\\n\\\\n  .section-title {\\\\n    font-size: 1.25rem;\\\\n    font-weight: 600;\\\\n    color: #333;\\\\n    margin-bottom: 1rem;\\\\n    padding-bottom: 0.5rem;\\\\n    border-bottom: 2px solid #ff3e00;\\\\n  }\\\\n\\\\n  .entry-stats {\\\\n    background: #f9fafb;\\\\n    padding: 1rem;\\\\n    border-radius: 6px;\\\\n    margin-bottom: 1.5rem;\\\\n    display: flex;\\\\n    align-items: center;\\\\n    gap: 2rem;\\\\n  }\\\\n\\\\n  .stat {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n  }\\\\n\\\\n  .stat-label {\\\\n    font-size: 0.875rem;\\\\n    color: #666;\\\\n  }\\\\n\\\\n  .stat-value {\\\\n    font-size: 1.5rem;\\\\n    font-weight: bold;\\\\n    color: #ff3e00;\\\\n  }\\\\n\\\\n  /* Mobile styles */\\\\n  @media (max-width: 480px) {\\\\n    .hero h1 {\\\\n      font-size: 2.5rem;\\\\n    }\\\\n\\\\n    .hero .subtitle {\\\\n      font-size: 1rem;\\\\n    }\\\\n\\\\n    .form-card {\\\\n      padding: 1.5rem;\\\\n    }\\\\n\\\\n    .form-row {\\\\n      grid-template-columns: 1fr;\\\\n    }\\\\n\\\\n    .datetime-inputs {\\\\n      flex-direction: column;\\\\n    }\\\\n\\\\n    .time-input {\\\\n      flex: 1;\\\\n    }\\\\n\\\\n    .form-actions {\\\\n      flex-direction: column-reverse;\\\\n    }\\\\n\\\\n    .btn {\\\\n      width: 100%;\\\\n    }\\\\n\\\\n    .entry-stats {\\\\n      flex-direction: column;\\\\n      align-items: flex-start;\\\\n      gap: 1rem;\\\\n    }\\\\n  }\\\\n\\\\n  /* Tablet styles */\\\\n  @media (max-width: 768px) {\\\\n    .hero h1 {\\\\n      font-size: 3rem;\\\\n    }\\\\n\\\\n    .form-card {\\\\n      padding: 1.5rem;\\\\n    }\\\\n\\\\n    .form-row {\\\\n      grid-template-columns: 1fr;\\\\n    }\\\\n\\\\n    .form-actions {\\\\n      flex-direction: column-reverse;\\\\n    }\\\\n\\\\n    .btn {\\\\n      width: 100%;\\\\n    }\\\\n\\\\n    .entry-stats {\\\\n      flex-direction: column;\\\\n      align-items: flex-start;\\\\n      gap: 1rem;\\\\n    }\\\\n    \\\\n    .custom-category-section {\\\\n      padding: 1rem;\\\\n    }\\\\n  }\\\\n  \\\\n  /* Radio Group Styles */\\\\n  .radio-group {\\\\n    display: flex;\\\\n    flex-direction: column;\\\\n    gap: 1rem;\\\\n  }\\\\n  \\\\n  .radio-option {\\\\n    display: flex;\\\\n    align-items: flex-start;\\\\n    gap: 0.75rem;\\\\n    padding: 1rem;\\\\n    border: 1px solid #e2e8f0;\\\\n    border-radius: 8px;\\\\n    cursor: pointer;\\\\n    transition: all 0.2s ease;\\\\n  }\\\\n  \\\\n  .radio-option:hover {\\\\n    border-color: #cbd5e1;\\\\n    background: #f8fafc;\\\\n  }\\\\n  \\\\n  .radio-option:has(input:checked) {\\\\n    border-color: #ff3e00;\\\\n    background: #fff5f5;\\\\n  }\\\\n  \\\\n  .radio-label {\\\\n    flex: 1;\\\\n  }\\\\n  \\\\n  .radio-description {\\\\n    font-size: 0.875rem;\\\\n    color: #666;\\\\n    margin-top: 0.25rem;\\\\n  }\\\\n  \\\\n  .custom-category-section {\\\\n    margin-top: 1.5rem;\\\\n    padding: 1.5rem;\\\\n    border: 1px solid #e5e7eb;\\\\n    border-radius: 8px;\\\\n    background: #f9fafb;\\\\n  }\\\\n</style>\\\\n\\\\n<div class=\\\\\"container\\\\\">\\\\n  <!-- Hero Section -->\\\\n  <div class=\\\\\"hero\\\\\">\\\\n    <h1><span class=\\\\\"emoji\\\\\">✏️</span> Edit Competition</h1>\\\\n    <p class=\\\\\"subtitle\\\\\">Update competition details</p>\\\\n  </div>\\\\n\\\\n  {#if isLoading}\\\\n    <div class=\\\\\"loading\\\\\">\\\\n      <div class=\\\\\"spinner\\\\\"></div>\\\\n      <p>Loading competition...</p>\\\\n    </div>\\\\n  {:else if competition}\\\\n    <!-- Form Card -->\\\\n    <div class=\\\\\"form-card\\\\\">\\\\n      {#if hasEntries}\\\\n        <div class=\\\\\"warning-banner\\\\\">\\\\n          <strong>⚠️ This competition has entries</strong>\\\\n          Some fields cannot be modified after entries have been submitted.\\\\n        </div>\\\\n        \\\\n        <div class=\\\\\"entry-stats\\\\\">\\\\n          <div class=\\\\\"stat\\\\\">\\\\n            <span class=\\\\\"stat-label\\\\\">Total Entries</span>\\\\n            <span class=\\\\\"stat-value\\\\\">{competition.entry_count || 0}</span>\\\\n          </div>\\\\n        </div>\\\\n      {/if}\\\\n\\\\n      <form on:submit|preventDefault={handleSubmit}>\\\\n        <!-- Basic Information -->\\\\n        <div class=\\\\\"section-title\\\\\">Basic Information</div>\\\\n        \\\\n        <div class=\\\\\"form-group\\\\\">\\\\n          <label for=\\\\\"name\\\\\" class=\\\\\"required\\\\\">Competition Name</label>\\\\n          <input\\\\n            type=\\\\\"text\\\\\"\\\\n            id=\\\\\"name\\\\\"\\\\n            class=\\\\\"form-control {validationErrors.name ? 'error' : ''}\\\\\"\\\\n            bind:value={name}\\\\n            placeholder=\\\\\"e.g., Spring 2025 Homebrew Competition\\\\\"\\\\n            maxlength=\\\\\"100\\\\\"\\\\n            disabled={isSubmitting}\\\\n          />\\\\n          {#if validationErrors.name}\\\\n            <div class=\\\\\"error-message\\\\\">{validationErrors.name}</div>\\\\n          {/if}\\\\n        </div>\\\\n\\\\n        <div class=\\\\\"form-group\\\\\">\\\\n          <label for=\\\\\"description\\\\\">Description</label>\\\\n          <textarea\\\\n            id=\\\\\"description\\\\\"\\\\n            class=\\\\\"form-control {validationErrors.description ? 'error' : ''}\\\\\"\\\\n            bind:value={description}\\\\n            placeholder=\\\\\"Optional description or special instructions\\\\\"\\\\n            maxlength=\\\\\"500\\\\\"\\\\n            disabled={isSubmitting}\\\\n          />\\\\n          {#if validationErrors.description}\\\\n            <div class=\\\\\"error-message\\\\\">{validationErrors.description}</div>\\\\n          {/if}\\\\n          <div class=\\\\\"help-text\\\\\">Provide any additional details about the competition</div>\\\\n        </div>\\\\n\\\\n        <!-- Dates -->\\\\n        <div class=\\\\\"section-title\\\\\">Important Dates</div>\\\\n        \\\\n        <div class=\\\\\"form-row\\\\\">\\\\n          <div class=\\\\\"form-group\\\\\">\\\\n            <label for=\\\\\"entryDeadline\\\\\" class=\\\\\"required\\\\\">Entry Deadline</label>\\\\n            <div class=\\\\\"datetime-inputs\\\\\">\\\\n              <input\\\\n                type=\\\\\"date\\\\\"\\\\n                id=\\\\\"entryDeadline\\\\\"\\\\n                class=\\\\\"form-control {validationErrors.entryDeadline ? 'error' : ''}\\\\\"\\\\n                bind:value={entryDeadline}\\\\n                disabled={isSubmitting || hasEntries}\\\\n              />\\\\n              <input\\\\n                type=\\\\\"time\\\\\"\\\\n                id=\\\\\"entryDeadlineTime\\\\\"\\\\n                class=\\\\\"form-control time-input\\\\\"\\\\n                bind:value={entryDeadlineTime}\\\\n                disabled={isSubmitting || hasEntries}\\\\n              />\\\\n            </div>\\\\n            {#if validationErrors.entryDeadline}\\\\n              <div class=\\\\\"error-message\\\\\">{validationErrors.entryDeadline}</div>\\\\n            {/if}\\\\n            <div class=\\\\\"help-text\\\\\">\\\\n              {hasEntries ? 'Cannot change after entries submitted' : 'Date and time when entries close'}\\\\n            </div>\\\\n          </div>\\\\n\\\\n          <div class=\\\\\"form-group\\\\\">\\\\n            <label for=\\\\\"judgingDate\\\\\" class=\\\\\"required\\\\\">Judging Date</label>\\\\n            <div class=\\\\\"datetime-inputs\\\\\">\\\\n              <input\\\\n                type=\\\\\"date\\\\\"\\\\n                id=\\\\\"judgingDate\\\\\"\\\\n                class=\\\\\"form-control {validationErrors.judgingDate ? 'error' : ''}\\\\\"\\\\n                bind:value={judgingDate}\\\\n                disabled={isSubmitting}\\\\n              />\\\\n              <input\\\\n                type=\\\\\"time\\\\\"\\\\n                id=\\\\\"judgingDateTime\\\\\"\\\\n                class=\\\\\"form-control time-input\\\\\"\\\\n                bind:value={judgingDateTime}\\\\n                disabled={isSubmitting}\\\\n              />\\\\n            </div>\\\\n            {#if validationErrors.judgingDate}\\\\n              <div class=\\\\\"error-message\\\\\">{validationErrors.judgingDate}</div>\\\\n            {/if}\\\\n            <div class=\\\\\"help-text\\\\\">Date and time when judging will take place</div>\\\\n          </div>\\\\n        </div>\\\\n\\\\n        <div class=\\\\\"checkbox-group\\\\\">\\\\n          <input\\\\n            type=\\\\\"checkbox\\\\\"\\\\n            id=\\\\\"hideJudgingDate\\\\\"\\\\n            bind:checked={hideJudgingDate}\\\\n            disabled={isSubmitting}\\\\n          />\\\\n          <label for=\\\\\"hideJudgingDate\\\\\">\\\\n            Keep judging date private until after entry deadline\\\\n          </label>\\\\n        </div>\\\\n\\\\n        <!-- Entry Settings -->\\\\n        <div class=\\\\\"section-title\\\\\">Entry Settings</div>\\\\n        \\\\n        <div class=\\\\\"form-row\\\\\">\\\\n          <div class=\\\\\"form-group\\\\\">\\\\n            <label for=\\\\\"entryFee\\\\\">Entry Fee ($)</label>\\\\n            <input\\\\n              type=\\\\\"number\\\\\"\\\\n              id=\\\\\"entryFee\\\\\"\\\\n              class=\\\\\"form-control {validationErrors.entryFee ? 'error' : ''}\\\\\"\\\\n              bind:value={entryFee}\\\\n              min=\\\\\"0\\\\\"\\\\n              max=\\\\\"100\\\\\"\\\\n              step=\\\\\"1\\\\\"\\\\n              disabled={isSubmitting || hasEntries}\\\\n            />\\\\n            {#if validationErrors.entryFee}\\\\n              <div class=\\\\\"error-message\\\\\">{validationErrors.entryFee}</div>\\\\n            {/if}\\\\n            <div class=\\\\\"help-text\\\\\">\\\\n              {hasEntries ? 'Cannot change after entries submitted' : 'Fee per entry (0 for free)'}\\\\n            </div>\\\\n          </div>\\\\n\\\\n          <div class=\\\\\"form-group\\\\\">\\\\n            <label for=\\\\\"maxEntries\\\\\">Max Entries Per Member</label>\\\\n            <input\\\\n              type=\\\\\"number\\\\\"\\\\n              id=\\\\\"maxEntries\\\\\"\\\\n              class=\\\\\"form-control {validationErrors.maxEntriesPerMember ? 'error' : ''}\\\\\"\\\\n              bind:value={maxEntriesPerMember}\\\\n              min=\\\\\"1\\\\\"\\\\n              max=\\\\\"20\\\\\"\\\\n              disabled={isSubmitting || hasEntries}\\\\n            />\\\\n            {#if validationErrors.maxEntriesPerMember}\\\\n              <div class=\\\\\"error-message\\\\\">{validationErrors.maxEntriesPerMember}</div>\\\\n            {/if}\\\\n            <div class=\\\\\"help-text\\\\\">\\\\n              {hasEntries ? 'Cannot change after entries submitted' : 'Maximum entries allowed per member'}\\\\n            </div>\\\\n          </div>\\\\n        </div>\\\\n\\\\n        <!-- Category System -->\\\\n        <div class=\\\\\"section-title\\\\\">Category System</div>\\\\n        \\\\n        <div class=\\\\\"form-group\\\\\">\\\\n          <label>Ranking System</label>\\\\n          <div class=\\\\\"radio-group\\\\\">\\\\n            <label class=\\\\\"radio-option\\\\\">\\\\n              <input\\\\n                type=\\\\\"radio\\\\\"\\\\n                bind:group={categorySystem}\\\\n                value=\\\\\"default\\\\\"\\\\n                disabled={isSubmitting || hasEntries}\\\\n              />\\\\n              <span class=\\\\\"radio-label\\\\\">\\\\n                <strong>Default BJCP System</strong>\\\\n                <div class=\\\\\"radio-description\\\\\">\\\\n                  Allow all BJCP categories, rank each category individually\\\\n                </div>\\\\n              </span>\\\\n            </label>\\\\n            \\\\n            <label class=\\\\\"radio-option\\\\\">\\\\n              <input\\\\n                type=\\\\\"radio\\\\\"\\\\n                bind:group={categorySystem}\\\\n                value=\\\\\"custom\\\\\"\\\\n                disabled={isSubmitting || hasEntries}\\\\n              />\\\\n              <span class=\\\\\"radio-label\\\\\">\\\\n                <strong>Custom Category System</strong>\\\\n                <div class=\\\\\"radio-description\\\\\">\\\\n                  Select specific categories and create custom ranking groups\\\\n                </div>\\\\n              </span>\\\\n            </label>\\\\n          </div>\\\\n          {#if hasEntries}\\\\n            <div class=\\\\\"help-text\\\\\">Cannot change after entries submitted</div>\\\\n          {/if}\\\\n        </div>\\\\n        \\\\n        {#if categorySystem === 'custom'}\\\\n          <div class=\\\\\"custom-category-section\\\\\">\\\\n            <CategorySelector\\\\n              bind:selectedCategories\\\\n              disabled={hasEntries}\\\\n              on:change={() => {\\\\n                // Reset ranking groups when categories change\\\\n                if (!hasEntries) {\\\\n                  rankingGroups = [];\\\\n                }\\\\n              }}\\\\n            />\\\\n            \\\\n            {#if selectedCategories.length > 0}\\\\n              <div style=\\\\\"margin-top: 1.5rem;\\\\\">\\\\n                <RankingGroupManager\\\\n                  bind:rankingGroups\\\\n                  {selectedCategories}\\\\n                  disabled={hasEntries}\\\\n                  on:change={() => {}}\\\\n                />\\\\n              </div>\\\\n            {/if}\\\\n          </div>\\\\n        {/if}\\\\n\\\\n        <!-- Status -->\\\\n        <div class=\\\\\"section-title\\\\\">Status</div>\\\\n        \\\\n        <div class=\\\\\"checkbox-group\\\\\">\\\\n          <input\\\\n            type=\\\\\"checkbox\\\\\"\\\\n            id=\\\\\"isActive\\\\\"\\\\n            bind:checked={isActive}\\\\n            disabled={isSubmitting}\\\\n          />\\\\n          <label for=\\\\\"isActive\\\\\">\\\\n            Competition is active and accepting entries\\\\n          </label>\\\\n        </div>\\\\n        <div class=\\\\\"help-text\\\\\">\\\\n          Uncheck to close competition to new entries\\\\n        </div>\\\\n\\\\n        <!-- Form Actions -->\\\\n        <div class=\\\\\"form-actions\\\\\">\\\\n          <button \\\\n            type=\\\\\"button\\\\\" \\\\n            class=\\\\\"btn btn-secondary\\\\\"\\\\n            on:click={handleCancel}\\\\n            disabled={isSubmitting}\\\\n          >\\\\n            Cancel\\\\n          </button>\\\\n          <button \\\\n            type=\\\\\"submit\\\\\" \\\\n            class=\\\\\"btn btn-primary\\\\\"\\\\n            disabled={isSubmitting}\\\\n          >\\\\n            {isSubmitting ? 'Saving...' : 'Save Changes'}\\\\n          </button>\\\\n        </div>\\\\n      </form>\\\\n    </div>\\\\n  {/if}\\\\n</div>\"],\"names\":[],\"mappings\":\"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\"}`\n};\nconst Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let $page, $$unsubscribe_page;\n  let $userProfile, $$unsubscribe_userProfile;\n  $$unsubscribe_page = subscribe(page, (value) => $page = value);\n  $$unsubscribe_userProfile = subscribe(userProfile, (value) => $userProfile = value);\n  onDestroy(() => {\n  });\n  $$result.css.add(css);\n  let $$settled;\n  let $$rendered;\n  let previous_head = $$result.head;\n  do {\n    $$settled = true;\n    $$result.head = previous_head;\n    {\n      if ($userProfile && !$userProfile.is_officer) {\n        goto();\n      }\n    }\n    $page.params.id;\n    $$rendered = `   <div class=\"container svelte-xvlhfg\"> <div class=\"hero svelte-xvlhfg\" data-svelte-h=\"svelte-1s0xfnr\"><h1 class=\"svelte-xvlhfg\"><span class=\"emoji svelte-xvlhfg\">✏️</span> Edit Competition</h1> <p class=\"subtitle svelte-xvlhfg\">Update competition details</p></div> ${`<div class=\"loading svelte-xvlhfg\" data-svelte-h=\"svelte-qasb26\"><div class=\"spinner svelte-xvlhfg\"></div> <p>Loading competition...</p></div>`}</div>`;\n  } while (!$$settled);\n  $$unsubscribe_page();\n  $$unsubscribe_userProfile();\n  return $$rendered;\n});\nexport {\n  Page as default\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAQA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,CAAC,0rLAA0rL,CAAC;AACpsL,EAAE,GAAG,EAAE,CAAC,4i9BAA4i9B;AACpj9B,CAAC;AACI,MAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAC5E,EAAE,IAAI,KAAK,EAAE,kBAAkB;AAC/B,EAAE,IAAI,YAAY,EAAE,yBAAyB;AAC7C,EAAE,kBAAkB,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,CAAC;AAChE,EAAE,yBAAyB,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,KAAK,YAAY,GAAG,KAAK,CAAC;AACrF,EAAE,SAAS,CAAC,MAAM;AAClB,GAAG,CAAC;AACJ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACvB,EAAE,IAAI,SAAS;AACf,EAAE,IAAI,UAAU;AAChB,EAAE,IAAI,aAAa,GAAG,QAAQ,CAAC,IAAI;AACnC,EAAE,GAAG;AACL,IAAI,SAAS,GAAG,IAAI;AACpB,IAAI,QAAQ,CAAC,IAAI,GAAG,aAAa;AACjC,IAAI;AACJ,MAAM,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;AACpD,QAAQ,IAAI,EAAE;AACd;AACA;AACA,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AACnB,IAAI,UAAU,GAAG,CAAC,2QAA2Q,EAAE,CAAC,8IAA8I,CAAC,CAAC,MAAM,CAAC;AACvb,GAAG,QAAQ,CAAC,SAAS;AACrB,EAAE,kBAAkB,EAAE;AACtB,EAAE,yBAAyB,EAAE;AAC7B,EAAE,OAAO,UAAU;AACnB,CAAC;;;;"}