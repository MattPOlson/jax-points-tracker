{"version":3,"file":"competitionManagementStore-CIPoqnzm.js","sources":["../../../.svelte-kit/adapter-node/chunks/competitionManagementStore.js"],"sourcesContent":["import { d as derived, w as writable } from \"./index.js\";\nimport { s as supabase } from \"./supabaseClient.js\";\nimport { u as userProfile } from \"./userProfile.js\";\nimport { j as get_store_value } from \"./ssr.js\";\nconst competitions = writable([]);\nconst isLoading = writable(false);\nconst error = writable(null);\nconst lastRefresh = writable(null);\nconst stats = derived(competitions, ($competitions) => {\n  console.log(\"ðŸ“Š Computing stats for competitions:\", $competitions);\n  if (!Array.isArray($competitions) || $competitions.length === 0) {\n    const defaultStats = { total: 0, active: 0, totalEntries: 0, avgEntries: 0 };\n    console.log(\"ðŸ“Š Using default stats:\", defaultStats);\n    return defaultStats;\n  }\n  const total = $competitions.length;\n  const active = $competitions.filter((comp) => comp.is_active).length;\n  const totalEntries = $competitions.reduce((sum, comp) => sum + (comp.entry_count || 0), 0);\n  const avgEntries = total > 0 ? Math.round(totalEntries / total * 10) / 10 : 0;\n  const computedStats = { total, active, totalEntries, avgEntries };\n  console.log(\"ðŸ“Š Computed stats:\", computedStats);\n  return computedStats;\n});\nconst filteredCompetitions = derived(competitions, ($competitions) => {\n  return Array.isArray($competitions) ? $competitions : [];\n});\nasync function loadCompetitions(forceRefresh2 = false) {\n  const $userProfile = get_store_value(userProfile);\n  if (!$userProfile?.is_officer) {\n    console.warn(\"User is not officer or profile not loaded yet\");\n    return;\n  }\n  const now = /* @__PURE__ */ new Date();\n  const lastRefreshTime = get_store_value(lastRefresh);\n  if (!forceRefresh2 && lastRefreshTime && now - lastRefreshTime < 3e4) {\n    console.log(\"Using cached competition data\");\n    return;\n  }\n  isLoading.set(true);\n  error.set(null);\n  try {\n    console.log(\"Loading fresh competition data...\");\n    const { data: competitionsData, error: competitionsError } = await supabase.from(\"competitions\").select(\"*\").order(\"entry_deadline\", { ascending: false });\n    if (competitionsError) {\n      throw competitionsError;\n    }\n    console.log(\"Competitions fetched:\", competitionsData?.length);\n    const competitionsWithCounts = await Promise.all(\n      (competitionsData || []).map(async (comp) => {\n        const { count, error: countError } = await supabase.from(\"competition_entries\").select(\"*\", { count: \"exact\", head: true }).eq(\"competition_id\", comp.id);\n        if (countError) {\n          console.warn(\"Warning getting count for competition\", comp.id, \":\", countError);\n        }\n        const now2 = /* @__PURE__ */ new Date();\n        const deadline = new Date(comp.entry_deadline);\n        const is_active = comp.active && deadline > now2;\n        let status = \"closed\";\n        if (is_active) {\n          status = \"open\";\n        } else if (comp.judging_date && new Date(comp.judging_date) >= now2 && !comp.results_published) {\n          status = \"judging\";\n        } else if (comp.results_published) {\n          status = \"completed\";\n        }\n        return {\n          ...comp,\n          entry_count: count || 0,\n          is_active,\n          status\n        };\n      })\n    );\n    console.log(\"Competition data with counts:\", competitionsWithCounts?.length);\n    competitions.set(competitionsWithCounts || []);\n    lastRefresh.set(now);\n    console.log(\"Loading complete\");\n  } catch (err) {\n    console.error(\"Failed to load competitions:\", err);\n    error.set(err.message || \"Failed to load competitions\");\n    competitions.set([]);\n  } finally {\n    isLoading.set(false);\n  }\n}\nasync function loadCompetitionEntries(competitionId) {\n  if (!competitionId) {\n    console.warn(\"No competition ID provided\");\n    return [];\n  }\n  try {\n    console.log(\"Loading entries for competition:\", competitionId);\n    const { data: entriesData, error: entriesError } = await supabase.from(\"competition_entries\").select(\"*\").eq(\"competition_id\", competitionId).order(\"entry_number\", { ascending: true });\n    if (entriesError) {\n      throw entriesError;\n    }\n    if (!entriesData || entriesData.length === 0) {\n      console.log(\"No entries found for this competition\");\n      return [];\n    }\n    const memberIds = [...new Set(entriesData.map((entry) => entry.member_id))];\n    const { data: membersData } = await supabase.from(\"members\").select(\"id, name, email, phone\").in(\"id\", memberIds);\n    const categoryIds = [...new Set(entriesData.map((entry) => entry.bjcp_category_id).filter(Boolean))];\n    const { data: categoriesData } = await supabase.from(\"bjcp_categories\").select(\"id, category_name, category_number, subcategory_letter, subcategory_name\").in(\"id\", categoryIds);\n    const entriesWithDetails = entriesData.map((entry) => {\n      const member = membersData?.find((m) => m.id === entry.member_id);\n      const category = categoriesData?.find((c) => c.id === entry.bjcp_category_id);\n      return {\n        ...entry,\n        member_name: member?.name || \"Unknown\",\n        member_email: member?.email || \"\",\n        member_phone: member?.phone || \"\",\n        category_name: category?.category_name || \"Unknown Category\",\n        category_number: category?.category_number || \"\",\n        subcategory_letter: category?.subcategory_letter || \"\",\n        subcategory_name: category?.subcategory_name || \"\",\n        category_display: category ? `${category.category_number}${category.subcategory_letter || \"\"} - ${category.category_name}${category.subcategory_name ? \": \" + category.subcategory_name : \"\"}` : \"Unknown Category\"\n      };\n    });\n    console.log(\"Loaded\", entriesWithDetails.length, \"entries with full details\");\n    return entriesWithDetails;\n  } catch (err) {\n    console.error(\"Failed to load competition entries:\", err);\n    throw err;\n  }\n}\nasync function createCompetition(competitionData) {\n  const { ranking_groups, ...competitionInfo } = competitionData;\n  const { data, error: insertError } = await supabase.from(\"competitions\").insert([competitionInfo]).select().single();\n  if (insertError) throw insertError;\n  if (competitionData.category_system === \"custom\" && ranking_groups && ranking_groups.length > 0) {\n    const rankingGroupsData = ranking_groups.map((group, index) => ({\n      competition_id: data.id,\n      group_name: group.name,\n      group_description: group.description || null,\n      bjcp_category_ids: group.categories,\n      group_order: index + 1\n    }));\n    const { error: groupsError } = await supabase.from(\"competition_ranking_groups\").insert(rankingGroupsData);\n    if (groupsError) {\n      console.error(\"Error creating ranking groups:\", groupsError);\n    }\n  }\n  await loadCompetitions(true);\n  return data;\n}\nasync function updateCompetition(competitionId, updates) {\n  const { data, error: updateError } = await supabase.from(\"competitions\").update(updates).eq(\"id\", competitionId).select().single();\n  if (updateError) throw updateError;\n  await loadCompetitions(true);\n  return data;\n}\nasync function deleteCompetition(competitionId) {\n  const { error: deleteError } = await supabase.from(\"competitions\").delete().eq(\"id\", competitionId);\n  if (deleteError) throw deleteError;\n  await loadCompetitions(true);\n}\nfunction resetStore() {\n  competitions.set([]);\n  isLoading.set(false);\n  error.set(null);\n  lastRefresh.set(null);\n}\nasync function forceRefresh() {\n  lastRefresh.set(null);\n  await loadCompetitions(true);\n}\nconst competitionManagementStore = {\n  subscribe: derived(\n    [competitions, isLoading, error, stats, filteredCompetitions],\n    ([competitions2, isLoading2, error2, stats2, filteredCompetitions2]) => ({\n      competitions: competitions2,\n      isLoading: isLoading2,\n      error: error2,\n      stats: stats2,\n      filteredCompetitions: filteredCompetitions2\n    })\n  ).subscribe,\n  loadCompetitions,\n  loadCompetitionEntries,\n  createCompetition,\n  updateCompetition,\n  deleteCompetition,\n  forceRefresh,\n  initialize: async () => {\n    console.log(\"Initializing competition management store\");\n    await loadCompetitions(false);\n  }\n};\nuserProfile.subscribe(($userProfile) => {\n  console.log(\"User profile changed in store:\", $userProfile);\n  if ($userProfile?.is_officer) {\n    console.log(\"User is officer, loading competitions\");\n    loadCompetitions(false);\n  } else {\n    console.log(\"User is not officer or profile not loaded yet\");\n    resetStore();\n  }\n});\nexport {\n  competitions as a,\n  competitionManagementStore as c,\n  error as e,\n  isLoading as i,\n  stats as s\n};\n"],"names":[],"mappings":"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"}